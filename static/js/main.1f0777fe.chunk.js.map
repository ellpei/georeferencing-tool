{"version":3,"sources":["geomatcher/delaunay/index.js","geomatcher/delaunay/geom/Point.js","geomatcher/delaunay/geom/index.js","geomatcher/delaunay/core/inCircle.js","geomatcher/delaunay/core/index.js","geomatcher/delaunay/core/triangulate.js","geomatcher/delaunay/geom/Triangle.js","geomatcher/delaunay/geom/Edge.js","mapForm.js","geomatcher/experiment/are_referencepoints.js","geomatcher/experiment/worldcupbacken.js","geomatcher/FileForm.js","geomatcher/Canvas.js","image-dots/Dot.js","image-dots/backdrop.js","geomatcher/googleMap.js","geomatcher/InputModal.js","geomatcher/ImageCoordinateCollector.js","geomatcher/DotsInfo.js","geomatcher/CoordinateMatcher.js","mapcoords-only/FileForm.js","mapcoords-only/InputModal.js","mapcoords-only/ImageCoordinateCollector.js","mapcoords-only/DotsInfo.js","mapcoords-only/MapCoordCollector.js","images.js","docs.js","about.js","App.js","reportWebVitals.js","index.js"],"names":["core","require","geom","Delaunay","triangulate","inCircle","Point","Triangle","Edge","module","exports","x","y","lat","lng","note","parentType","parent","this","toJSON","prototype","constructor","distance","otherpoint","Math","sqrt","equals","sub","other","cross","copy","p","set","p1","p2","p3","m1","m2","mx1","mx2","my1","my2","xc","yc","EPSILON","Number","MIN_VALUE","abs","dx","dy","rsqr","vertices","i","j","nv","length","trimax","xmin","ymin","xmax","ymax","id","dmax","xmid","ymid","push","triangles","edges","splice","k","console","error","concat","matrixTrans","point1","point2","point3","mid0","mid1","mid2","matrixGeoToMap","fromTriangles","getGeoCoords","getPisteMapCoords","matrixMapToGeo","area","x1","y1","x2","y2","x3","y3","getCenter","getGeoCenter","geoDistanceToPoint","point","center","mapDistanceToPoint","transformGeoCoords","applyToPoint","transformMapCoords","enclosesGeoCoords","a","b","g1","g2","g3","pg1g2","pg2g3","sign","pg3g1","enclosesMapCoords","otherEdge","MapForm","props","handleDropdownChange","e","setState","val","target","value","handleFileChange","files","uploadedMap","url","URL","createObjectURL","name","handleStart","state","useGeoCoords","onSelect","onUpload","resorts","uploadedMapName","toggleCheckBox","className","Container","Form","Label","Group","controlId","Check","custom","inline","type","label","checked","onChange","Control","as","map","resort","title","File","multiple","accept","src","alt","to","onClick","React","Component","areReferencePoints","testGPSpoints","FileForm","changeFileType","event","fileType","download","output","preventDefault","data","points","JSON","stringify","contents","makeCSV","long","blob","Blob","fileDownloadUrl","dofileDownload","click","revokeObjectURL","upload","dofileUpload","content","csv","forEach","item","result","undefined","toString","replace","search","openFile","evt","fileObj","reader","FileReader","fileloaded","fileContents","json","parse","hasOwnProperty","loadPointData","loadTriangleData","alert","bind","onload","readAsText","downloadTestReport","log","results","generateTestReport","testReport","doTestReportDownload","downloadLandmarkTestReport","doLandmarkTest","x_prim","y_prim","doLandmarkTestReportDownload","imgSrc","filename","substr","lastIndexOf","fileNames","String","text","Row","Col","md","Button","variant","href","ref","plotTestData","disabled","Canvas","updateCanvas","canvas","refs","ctx","getContext","clearRect","width","height","strokeStyle","t","beginPath","moveTo","lineTo","stroke","drawLandmarkTestData","fillStyle","landmarkData","landmarkTestData","arc","PI","fill","prevProps","triangleUpdateRequired","landmarkUpdateRequired","prevState","snapshot","Dot","onMouseDown","stopPropagation","moveDot","dotX","dotY","styles","dotRadius","style","transform","top","left","defaultProps","Backdrop","show","clicked","markers","mapTriangles","GoogleMap","loadMap","window","initMap","script","document","querySelector","remove","createElement","async","body","appendChild","loadJS","apiKey","parseFloat","currentDot","google","mapRef","zoom","maps","Map","current","mapTypeId","MapTypeId","HYBRID","currentMarker","Marker","position","addListener","mapsMouseEvent","setPosition","latLng","setLatLong","panTo","plotDotMarkers","drawTriangles","updateCurrentMarker","setCenter","m","setMap","dots","dot","LatLng","icon","path","SymbolPath","CIRCLE","fillColor","fillOpacity","strokeColor","strokeOpacity","strokeWeight","scale","triangleCoords","Polyline","mapLoaded","process","createRef","markerUpdateRequired","dotMarkersUpdateRequired","InputModal","pos","updateCurrentDot","pisteInputValue","handleClose","onChangeParentType","onKeyPress","parents","Array","isArray","res","setCurrentParentType","key","handleSave","parentTypes","wW","innerWidth","posX","round","Card","Body","Title","Text","column","sm","defaultValue","currentParentType","isMulti","setCurrentParent","getValueLabelList","currentParent","options","placeholder","Footer","ImageCoordinateCollector","onLoadPisteMap","img","dimensions","renderWidth","offsetWidth","renderHeight","offsetHeight","realWidth","naturalWidth","realHeight","naturalHeight","calcEstimatedGeoCoord","nearestTriangle","minDistance","Infinity","triangle","onMouseUp","bounds","getBoundingClientRect","lastCoords","renderedToRealCoord","clientX","clientY","estimatedCoords","grabbing","showModal","parentList","newParents","addParent","addParentType","index","deleteDot","resetDots","coord","renderedLength","realLength","realToRenderedCoord","handleShowModal","handleCloseModal","saveDot","coords","dim","testDots","backgroundImageUrl","grabClass","onLoad","boxShadow","backgroundColor","borderRadius","Object","keys","pixelCoordinates","backgroundSize","DotsInfo","Table","hover","size","CoordinateMatcher","transformTestPoints","transformedCoords","coordinates","findNearestTriangle","d","n","N","testSet","slice","minRMSE","minTriangles","indexToRemove","subset","rmse","calculateError","referencePoints","numClassified","mapCoords","addDot","shouldBlockNavigation","filter","initialDots","includes","handleResize","windowWidth","parseInt","includesPoint","pointList","pointObj","onbeforeunload","addEventListener","removeEventListener","when","message","onLoadMap","shortName","areaId","pisteMapCoordinates","clearFields","handleInputChange","autoFocus","MapCoordCollector","images","Docs","About","App","setResort","choice","resortObject","uploadMap","file","basename","Navbar","bg","Nav","exact","pathname","from","location","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","getElementById"],"mappings":"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AE,SAAU,WAC5B,CAAC,YAAe,CAAE,SAAU,YAC5B,CAAC,YAAe,CAAE,UAAW,YAC7B,CAAC,YAAe,CAAE,SAAU,YAC5B,CAAC,YAAe,CAAE,UAAW,YAC7B,CAAC,YAAe,CAAE,UAAW,YAC7B,CAAC,YAAe,CAAE,UAAW,YAC7B,CAAC,YAAe,CAAE,UAAW,YAC7B,CAAC,YAAe,CAAE,UAAW,YAC7B,CAAC,YAAe,CAAE,UAAW,YAC7B,CAAC,YAAe,CAAE,UAAW,YAC7B,CAAC,YAAe,CAAE,UAAW,YAC7B,CAAC,YAAe,CAAE,UAAW,YAC7B,CAAC,YAAe,CAAE,UAAW,YAC7B,CAAC,YAAe,CAAE,UAAW,WAC7B,CAAC,YAAe,CAAE,SAAU,YAC5B,CAAC,YAAe,CAAE,UAAW,YAC7B,CAAC,YAAe,CAAE,UAAW,YAC7B,CAAC,YAAe,CAAE,UAAW,YAC7B,CAAC,YAAe,CAAE,UAAW,YAC7B,CAAC,YAAe,CAAE,UAAW,YAC7B,CAAC,YAAe,CAAE,UAAW,YAC7B,CAAC,YAAe,CAAE,SAAU,YAC5B,CAAC,YAAe,CAAE,UAAW,YAC7B,CAAC,YAAe,CAAE,UAAW,YAC7B,CAAC,YAAe,CAAE,UAAW,YAC7B,CAAC,YAAe,CAAE,UAAW,YAC7B,CAAC,YAAe,CAAE,UAAW,YAC7B,CAAC,YAAe,CAAE,UAAW,YAC7B,CAAC,YAAe,CAAE,UAAW,YAC7B,CAAC,YAAe,CAAE,UAAW,YAC7B,CAAC,YAAe,CAAE,SAAU,YAC5B,CAAC,YAAe,CAAE,UAAW,WAC7B,CAAC,YAAe,CAAE,UAAW,YAC7B,CAAC,YAAe,CAAE,UAAW,YAC7B,CAAC,YAAe,CAAE,UAAW,YAC7B,CAAC,YAAe,CAAE,UAAW,YAC7B,CAAC,YAAe,CAAE,UAAW,YAC7B,CAAC,YAAe,CAAE,UAAW,YAC7B,CAAC,YAAe,CAAE,UAAW,YAC7B,CAAC,YAAe,CAAE,UAAW,YAC7B,CAAC,YAAe,CAAE,UAAW,YAC7B,CAAC,YAAe,CAAE,UAAW,YAC7B,CAAC,YAAe,CAAE,UAAW,YAC7B,CAAC,YAAe,CAAE,UAAW,YAC7B,CAAC,YAAe,CAAE,UAAW,YAC7B,CAAC,YAAe,CAAE,U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","file":"static/js/main.1f0777fe.chunk.js","sourcesContent":["var core =\trequire ( './core' ),\n\tgeom =\trequire ( './geom' );\n\n/**\n * @file        Main export of the Delaunay Triangulation library\n * @author      Jean-Vincent Roger <jv.roger@84paris.com>\n * @license     {@link https://github.com/sokeroner/delaunay-triangulation/blob/master/LICENSE|MIT License}\n */\n\nvar Delaunay = {\n\n\t// core methods\n\ttriangulate : \tcore.triangulate,\n\tinCircle\t: \tcore.inCircle,\n\n\t// geom\n\tPoint\t\t: \tgeom.Point,\n\tTriangle \t: \tgeom.Triangle,\n\tEdge \t\t: \tgeom.Edge\n\n}\n\nmodule.exports = Delaunay;\n","function Point({x, y, lat, lng, note, parentType, parent}) {\n    this.x = x || 0;\n    this.y = y || 0;\n    this.lat = lat || 0;\n    this.lng = lng || 0;\n    this.note = note || \"\";\n    this.parentType = parentType || \"\";\n    this.parent = parent || [];\n\n    this.toJSON = function() {\n        return {\n            x: this.x,\n            y: this.y,\n            lat: this.lat,\n            lng: this.lng,\n            parentType: this.parentType,\n            parent: this.parent,\n            note: this.note\n        };\n    }\n}\n\nPoint.prototype.constructor = Point;\nmodule.exports = Point;\n\nPoint.prototype.distance = function(otherpoint) {\n\treturn Math.sqrt((otherpoint.x - this.x)**2 + (otherpoint.y - this.y)**2);\n};\n\nPoint.prototype.equals = function(otherpoint) {\n\treturn (this.x === otherpoint.x && this.y === otherpoint.y);\n};\n\nPoint.prototype.sub = function(other) {\n    return new Point(this.x - other.x, this.y - other.y);\n}\n\nPoint.prototype.cross = function(other) {\n    return this.y * other.x - this.x * other.y;\n}\n\nPoint.prototype.copy = function(p) {\n    this.set(p);\n};\n\nPoint.prototype.set = function({x, y, lat, lng, note, parentType, parent}) {\n    this.x = x || this.x;\n    this.y = y || this.y;\n    this.lat = lat || this.lat;\n    this.lng = lng || this.lng;\n    this.note = note || this.note;\n    this.parentType = parentType || this.parentType;\n    this.parent = parent || this.parent;\n};\n","module.exports = {\n\tPoint\t :     \trequire('./Point'),\n    Triangle :  \trequire('./Triangle'),\n    Edge\t :      require('./Edge')\n};","/**\n * The InCircle function return true if the point p is inside the circumcircle\n * made by p1, p2, p3 points (note: a point on the edge is inside the circumcircle).\n *\n * @function\n * @param p {Point}\n * @param p1 {Point}\n * @param p2 {Point}\n * @param p3 {Point}\n */\n\nfunction inCircle(p, p1, p2, p3) {\n\tvar EPSILON = Number.MIN_VALUE;\n\n\tif (Math.abs(p1.y - p2.y) < EPSILON && Math.abs(p2.y - p3.y) < EPSILON) {\n\t\t//INCIRCUM - F - Points are coincident !!\n\t\treturn false;\n\t}\n\n\tvar m1, m2\n\t   ,mx1, mx2\n\t   ,my1, my2\n\t   ,xc, yc;\n\n\tif (Math.abs(p2.y - p1.y) < EPSILON) {\n\t\tm2 = -(p3.x - p2.x) / (p3.y - p2.y);\n\t\tmx2 = (p2.x + p3.x) * 0.5;\n\t\tmy2 = (p2.y + p3.y) * 0.5;\n\t\t//Calculate CircumCircle center (xc,yc)\n\t\txc = (p2.x + p1.x) * 0.5;\n\t\tyc = m2 * (xc - mx2) + my2;\n\t} else if (Math.abs(p3.y - p2.y) < EPSILON) {\n\t\tm1 = -(p2.x - p1.x) / (p2.y - p1.y);\n\t\tmx1 = (p1.x + p2.x) * 0.5;\n\t\tmy1 = (p1.y + p2.y) * 0.5;\n\t\t//Calculate CircumCircle center (xc,yc)\n\t\txc = (p3.x + p2.x) * 0.5;\n\t\tyc = m1 * (xc - mx1) + my1;\n\t} else {\n\t\tm1 = -(p2.x - p1.x) / (p2.y - p1.y);\n\t\tm2 = -(p3.x - p2.x) / (p3.y - p2.y);\n\t\tmx1 = (p1.x + p2.x) * 0.5;\n\t\tmx2 = (p2.x + p3.x) * 0.5;\n\t\tmy1 = (p1.y + p2.y) * 0.5;\n\t\tmy2 = (p2.y + p3.y) * 0.5;\n\t\t//Calculate CircumCircle center (xc,yc)\n\t\txc = (m1 * mx1 - m2 * mx2 + my2 - my1) / (m1 - m2);\n\t\tyc = m1 * (xc - mx1) + my1;\n\t}\n\tvar dx = p2.x - xc;\n\tvar dy = p2.y - yc;\n\tvar rsqr = dx * dx + dy * dy;\n\t//double r = Math.Sqrt(rsqr); //Circumcircle radius\n\tdx = p.x - xc;\n\tdy = p.y - yc;\n\tvar drsqr = dx * dx + dy * dy;\n\n\treturn (drsqr <= rsqr);\n}\n\nmodule.exports = inCircle;\n","module.exports = {\n    triangulate :     \trequire('./triangulate'),\n    inCircle    :     \trequire('./inCircle')\n};","var geom = require ('../geom'),\n\tinCircle =\trequire ('./inCircle');\n\nfunction triangulate(vertices) {\n\tvar i, j;\n\tvar nv = vertices.length;\n\tif (nv < 3) return [];\n\tvar trimax = 4 * nv;\n\n\t// Find the maximum and minimum vertex bounds.\n\t// This is to allow calculation of the bounding supertriangle\n\tvar xmin = vertices[0].x;\n\tvar ymin = vertices[0].y;\n\tvar xmax = xmin;\n\tvar ymax = ymin;\n\n\tfor(i = 1; i < nv; i++) {\n\t\tvertices[i].id = i;\n\t\tif(vertices[i].x < xmin) xmin = vertices[i].x;\n\t\tif(vertices[i].x > xmax) xmax = vertices[i].x;\n\t\tif(vertices[i].y < ymin) ymin = vertices[i].y;\n\t\tif(vertices[i].y > ymax) ymax = vertices[i].y;\n\t}\n\n\tvar dx = xmax - xmin;\n\tvar dy = ymax - ymin;\n\n\tvar dmax = (dx > dy) ? dx : dy;\n\tvar xmid = (xmax + xmin) * 0.5;\n\tvar ymid = (ymax + ymin) * 0.5;\n\n\n\tvertices.push(new geom.Point({x:(xmid - 2 * dmax), y:(ymid - dmax), id: nv+1}));\n\tvertices.push(new geom.Point({x:xmid, y:(ymid + 2 * dmax), id: nv+2}));\n\tvertices.push(new geom.Point({x:(xmid + 2 * dmax), y:(ymid - dmax), id: nv+3}));\n\n\tvar triangles = []; //array type de triangles\n\n\tvertices[nv].id = nv;\n\tvertices[nv + 1].id = nv+1;\n\tvertices[nv + 2].id = nv+2;\n\n\ttriangles.push(new geom.Triangle(vertices[nv], vertices[nv+1], vertices[nv+2])); //SuperTriangle placed at index 0\n\n\t// Include each point one at a time into the existing mesh\n\tfor(i = 0; i < nv; i++) {\n\t\tvar edges = []; // [trimax * 3];\n\t\t// Set up the edge buffer.\n\t\t// If the point (Vertex(i).x,Vertex(i).y) lies inside the circumcircle then the\n\t\t// three edges of that triangle are added to the edge buffer and the triangle is removed from list.\n\t\tfor(j = 0; j < triangles.length; j++) {\n\t\t\tif (inCircle(vertices[i], triangles[j].p1, triangles[j].p2, triangles[j].p3)) {\n\t\t\t\tedges.push(new geom.Edge(triangles[j].p1, triangles[j].p2));\n\t\t\t\tedges.push(new geom.Edge(triangles[j].p2, triangles[j].p3));\n\t\t\t\tedges.push(new geom.Edge(triangles[j].p3, triangles[j].p1));\n\t\t\t\ttriangles.splice(j,1);\n\t\t\t\tj--;\n\t\t\t}\n\t\t}\n\n\t\tif(i >= nv) continue; //In case we the last duplicate point we removed was the last in the array\n\n\t\tfor(j = edges.length - 2; j >= 0; j--) {\n\t\t\tfor (var k = edges.length - 1; k >= j+1; k--) {\n\n\t\t\t\tif (edges[j].equals(edges[k])) {\n\t\t\t\t\tedges.splice(k, 1);\n\t\t\t\t\tedges.splice(j, 1);\n\t\t\t\t\tk--;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Form new triangles for the current point\n\t\t// Skipping over any tagged edges.\n\t\t// All edges are arranged in clockwise order.\n\t\tfor(j = 0; j < edges.length; j++) {\n\t\t\tif (triangles.length >= trimax) {\n\t\t\t\t//\tthrow new ApplicationException(\"Exceeded maximum edges\");\n\t\t\t\tconsole.error(\"Exceeded maximum edges\");\n\t\t\t}\n\t\t\ttriangles.push(new geom.Triangle(edges[j].p1, edges[j].p2, vertices[i]));\n\t\t}\n\t\tedges = [];\n\t}\n\t// Remove triangles with supertriangle vertices\n\t// These are triangles which have a vertex number greater than nv\n\tfor(i = triangles.length - 1; i >= 0; i--) {\n\t\tif (triangles[i].p1.id >= nv || triangles[i].p2.id >= nv || triangles[i].p3.id >= nv) {\n\t\t\ttriangles.splice(i, 1);\n\t\t}\n\t}\n\t//Remove SuperTriangle vertices\n\tvertices.splice(vertices.length-1, 1);\n\tvertices.splice(vertices.length-1, 1);\n\tvertices.splice(vertices.length-1, 1);\n\n\treturn triangles.concat();\n}\n\nmodule.exports = triangulate;\n","var Point = require('./Point');\nvar matrixTrans = require('transformation-matrix');\n\nfunction Triangle (point1, point2, point3) {\n    this.p1 = point1 || new Point({});\n    this.p2 = point2 || new Point({});\n    this.p3 = point3 || new Point({});\n\n    this.mid0 = new Point({\n        x:this.p1.x + (this.p2.x - this.p1.x)/2,\n        y:this.p1.y + (this.p2.y - this.p1.y)/2});\n\n    this.mid1 = new Point({\n        x:this.p2.x + (this.p3.x - this.p2.x)/2,\n        y:this.p2.y + (this.p3.y - this.p2.y)/2});\n\n    this.mid2 = new Point({\n        x:this.p3.x + (this.p1.x - this.p3.x)/2,\n        y:this.p3.y + (this.p1.y - this.p3.y)/2});\n\n    this.matrixGeoToMap = matrixTrans.fromTriangles(this.getGeoCoords(), this.getPisteMapCoords());\n    this.matrixMapToGeo = matrixTrans.fromTriangles(this.getPisteMapCoords(), this.getGeoCoords());\n\n    this.toJSON = function() {\n        return [this.p1, this.p2, this.p3];\n    }\n}\n\nTriangle.prototype.constructor = Triangle;\nmodule.exports = Triangle;\n\nTriangle.prototype.getCenter = function() {\n    return new Point({x:(this.p1.x + this.p2.x + this.p3.x )/3,\n                       y:(this.p1.y + this.p2.y + this.p3.y )/3});\n}\n\nTriangle.prototype.getGeoCenter = function() {\n    return [(this.p1.lat + this.p2.lat + this.p3.lat )/3, (this.p1.lng + this.p2.lng + this.p3.lng )/3];\n}\n\nTriangle.prototype.geoDistanceToPoint = function(point) {\n    let center = this.getGeoCenter();\n    let p = [point.lat, point.lng];\n    return Math.sqrt(((p[0] - center[0])*(p[0] - center[0])) + ((p[1] - center[1])*(p[1] - center[1])));\n}\n\nTriangle.prototype.mapDistanceToPoint = function(point) {\n    let center = this.getCenter();\n    return Math.sqrt(((point.x - center.x)*(point.x - center.x)) + ((point.y - center.y)*(point.x - center.y)));\n}\n\nfunction area(x1, y1, x2, y2, x3, y3) {\n    return Math.abs((x1*(y2-y3) + x2*(y3-y1)+ x3*(y1-y2))/2.0);\n}\n\nTriangle.prototype.getPisteMapCoords = function() {\n    return [\n        {x: this.p1.x, y: this.p1.y},\n        {x: this.p2.x, y: this.p2.y},\n        {x: this.p3.x, y: this.p3.y}\n    ];\n}\n\nTriangle.prototype.getGeoCoords = function() {\n    return [\n        {x: this.p1.lat, y: this.p1.lng},\n        {x: this.p2.lat, y: this.p2.lng},\n        {x: this.p3.lat, y: this.p3.lng}\n    ];\n}\n\nTriangle.prototype.transformGeoCoords = function(point) {\n    return matrixTrans.applyToPoint(this.matrixGeoToMap, {x: point.lat, y: point.lng});\n}\n\nTriangle.prototype.transformMapCoords = function(point) {\n    return matrixTrans.applyToPoint(this.matrixMapToGeo, {x: point.x, y: point.y});\n}\n\nTriangle.prototype.enclosesGeoCoords = function(point) {\n    var cross = (a, b) => a[1] * b[0] - a[0] * b[1];\n    var sub = (a, b) => [a[0] - b[0], a[1] - b[1]];\n\n    let p = [point.lat, point.lng];\n    let g1 = [this.p1.lat, this.p1.lng];\n    let g2 = [this.p2.lat, this.p2.lng];\n    let g3 = [this.p3.lat, this.p3.lng];\n\n    // (p - g1) x (g2 - g1)\n    let pg1g2 = cross(sub(p, g1), sub(g2, p));\n    // (p - g2) x (g3 - g2)\n    let pg2g3 = cross(sub(p, g2), sub(g3, g2));\n\n    if(Math.sign(pg1g2) !== Math.sign(pg2g3)) return false;\n    // (p - g3) x (g1 - g3)\n    let pg3g1 = cross(sub(p, g3), sub(g1, g3));\n\n    return Math.sign(pg1g2) === Math.sign(pg3g1);\n}\n\nTriangle.prototype.enclosesMapCoords = function(point) {\n    let x = point.x;\n    let y = point.y;\n    let x1 = this.p1.x;\n    let y1 = this.p1.y;\n    let x2 = this.p2.x;\n    let y2 = this.p2.y;\n    let x3 = this.p3.x;\n    let y3 = this.p3.y;\n\n    /* Calculate area of triangle ABC */\n    let A = area (x1, y1, x2, y2, x3, y3);\n    /* Calculate area of triangle PBC */\n    let A1 = area (x, y, x2, y2, x3, y3);\n    /* Calculate area of triangle PAC */\n    let A2 = area (x1, y1, x, y, x3, y3);\n    /* Calculate area of triangle PAB */\n    let A3 = area (x1, y1, x2, y2, x, y);\n    /* Check if sum of A1, A2 and A3 is same as A */\n    return (A === A1 + A2 + A3);\n};\n","var Point = require('./Point');\n\n/**\n * The Edge object represents the edge between two points.\n *\n * @class\n * @param [point1={x:0,y:0}] {Point} first point.\n * @param [point2={x:0,y:0}] {Point} second point.\n */\n\nfunction Edge(point1, point2) {\n    this.p1 = point1 || new Point({});\n    this.p2 = point2 || new Point({});\n}\n\nEdge.prototype.constructor = Edge;\nmodule.exports = Edge;\n\nEdge.prototype.equals = function(otherEdge) {\n    return ((this.p1 === otherEdge.p2) && (this.p2 === otherEdge.p1)) || ((this.p1 === otherEdge.p1) && (this.p2 === otherEdge.p2));\n}\n\nEdge.prototype.length = function() {\n    return this.p1.distance(this.p2);\n}\n","import './styles/mapForm.css';\nimport React from 'react';\nimport {Container, Form} from 'react-bootstrap';\nimport {Link} from \"react-router-dom\";\n\nclass MapForm extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            val: this.props.resorts[0].id,\n            uploadedMap: null,\n            uploadedMapName: '',\n            useGeoCoords: true,\n        }\n    }\n\n    handleDropdownChange = (e) => {\n        this.setState({val: e.target.value});\n    }\n\n    handleFileChange = (e) => {\n        if(e.target.files[0] == null) return;\n        this.setState({\n            uploadedMap: {\n                url: URL.createObjectURL(e.target.files[0]),\n                name: e.target.files[0].name\n            }\n        });\n    }\n\n    handleStart = () => {\n        let { uploadedMap, val, useGeoCoords } = this.state;\n        if(uploadedMap == null) {\n            this.props.onSelect(val, useGeoCoords);\n        } else {\n            this.props.onUpload(uploadedMap, useGeoCoords);\n        }\n    }\n\n    render() {\n        var toggleCheckBox = () =>  this.setState({useGeoCoords: !this.state.useGeoCoords});\n        return (\n            <div id=\"mapform\" >\n                <div className=\"vertical-center\">\n                    <Container className=\"selectcontainer\">\n                        <Form>\n                            <Form.Label className=\"form-title\">Welcome!</Form.Label>\n                            <Form.Group controlId=\"mode\">\n                                <Form.Label>Select coordinate collection mode</Form.Label><br/>\n                                <Form.Check\n                                custom\n                                inline\n                                type='radio'\n                                id={0}\n                                label='Geographic and map coordinates'\n                                checked={this.state.useGeoCoords}\n                                onChange={toggleCheckBox}\n                                />\n\n                                <Form.Check\n                                custom\n                                inline\n                                type='radio'\n                                id={1}\n                                label='Only map coordinates'\n                                checked={!this.state.useGeoCoords}\n                                onChange={toggleCheckBox}\n                                />\n                            </Form.Group>\n\n\n                            <Form.Group controlId=\"exampleForm.ControlSelect1\">\n                                <Form.Label>Select or upload ski map</Form.Label>\n                                <Form.Control as=\"select\"\n                                onChange={this.handleDropdownChange}>\n                                {this.props.resorts.map((resort => (\n                                    <option key={resort.title} value={resort.id}>{resort.title}</option>\n                                )))}\n                                </Form.Control>\n                                <br/>\n                                <Form.File onChange={this.handleFileChange}\n                                multiple={false}\n                                accept=\"image/png, image/jpeg\"/>\n                                <br/>\n                                {this.state.uploadedMap ?\n                                    <div className=\"image-wrapper\">\n                                        <img src={this.state.uploadedMap.url} alt=\"preview\"/>\n                                        <br/><br/>\n                                    </div> : null }\n                                </Form.Group>\n                                <Link to=\"/matcher\" onClick={this.handleStart} className=\"btn btn-primary\">Start!</Link>\n                        </Form>\n                    </Container>\n                </div>\n            </div>\n        );\n    }\n\n}\nexport default MapForm;\n","const areReferencePoints = [\n        {\n            \"x\": 267,\n            \"y\": 533,\n            \"parent\": [\n                \"Å14\"\n            ],\n            \"parentType\": \"Lift\",\n            \"lat\": 63.4299305329716,\n            \"lng\": 13.034080668125355,\n            \"note\": \"middle\"\n        },\n        {\n            \"x\": 168,\n            \"y\": 578,\n            \"parent\": [\n                \"Å14\"\n            ],\n            \"parentType\": \"Lift\",\n            \"lat\": 63.430198785426704,\n            \"lng\": 13.024714539841886,\n            \"note\": \"bottom-middle\"\n        },\n        {\n            \"x\": 443,\n            \"y\": 506,\n            \"parent\": [\n                \"Å14\"\n            ],\n            \"parentType\": \"Lift\",\n            \"lat\": 63.42973620134537,\n            \"lng\": 13.038126786143627,\n            \"note\": \"top\"\n        },\n        {\n            \"x\": 220,\n            \"y\": 553,\n            \"parent\": [\n                \"Å14\"\n            ],\n            \"parentType\": \"Lift\",\n            \"lat\": 63.430081694025084,\n            \"lng\": 13.029233291599022,\n            \"note\": \"middle\"\n        },\n        {\n            \"x\": 332,\n            \"y\": 525,\n            \"parent\": [\n                \"Å14\"\n            ],\n            \"parentType\": \"Lift\",\n            \"lat\": 63.429786844876894,\n            \"lng\": 13.035201055136682,\n            \"note\": \"middle\"\n        },\n        {\n            \"x\": 322,\n            \"y\": 789,\n            \"parent\": [\n                \"Å17\"\n            ],\n            \"parentType\": \"Lift\",\n            \"lat\": 63.41564681927512,\n            \"lng\": 13.037588938413673,\n            \"note\": \"bottom\"\n        },\n        {\n            \"x\": 322,\n            \"y\": 889,\n            \"parent\": [\n                \"Å16\"\n            ],\n            \"parentType\": \"Lift\",\n            \"lat\": 63.413428408908615,\n            \"lng\": 13.036760678575119,\n            \"note\": \"bottom\"\n        },\n        {\n            \"x\": 313,\n            \"y\": 828,\n            \"parent\": [\n                \"Å16\"\n            ],\n            \"parentType\": \"Lift\",\n            \"lat\": 63.413428408908615,\n            \"lng\": 13.036760678575119,\n            \"note\": \"top\"\n        },\n        {\n            \"x\": 382,\n            \"y\": 691,\n            \"parent\": [\n                \"Å19\"\n            ],\n            \"parentType\": \"Lift\",\n            \"lat\": 63.420256679853786,\n            \"lng\": 13.04075487446791,\n            \"note\": \"middle\"\n        },\n        {\n            \"x\": 411,\n            \"y\": 626,\n            \"parent\": [\n                \"Å19\"\n            ],\n            \"parentType\": \"Lift\",\n            \"lat\": 63.4230691346045,\n            \"lng\": 13.04198966545333,\n            \"note\": \"middle-top\"\n        },\n        {\n            \"x\": 370,\n            \"y\": 754,\n            \"parent\": [\n                \"Å19\"\n            ],\n            \"parentType\": \"Lift\",\n            \"lat\": 63.41633780599507,\n            \"lng\": 13.039121724013079,\n            \"note\": \"middle-bottom\"\n        },\n        {\n            \"x\": 1049,\n            \"y\": 329,\n            \"parent\": [\n                \"H27\"\n            ],\n            \"parentType\": \"Lift\",\n            \"lat\": 63.429347310924044,\n            \"lng\": 13.068331671013214,\n            \"note\": \"bottom\"\n        },\n        {\n            \"x\": 1067,\n            \"y\": 524,\n            \"parent\": [\n                \"H23\"\n            ],\n            \"parentType\": \"Lift\",\n            \"lat\": 63.419750645339505,\n            \"lng\": 13.067750841475627,\n            \"note\": \"middle\"\n        },\n        {\n            \"x\": 1131,\n            \"y\": 416,\n            \"parent\": [\n                \"H23\"\n            ],\n            \"parentType\": \"Lift\",\n            \"lat\": 63.42330305619766,\n            \"lng\": 13.07236033239243,\n            \"note\": \"middle\"\n        },\n        {\n            \"x\": 1062,\n            \"y\": 663,\n            \"parent\": [\n                \"Å22\"\n            ],\n            \"parentType\": \"Lift\",\n            \"lat\": 63.415953719656244,\n            \"lng\": 13.063774053012454,\n            \"note\": \"top\"\n        },\n        {\n            \"x\": 1086,\n            \"y\": 915,\n            \"parent\": [\n                \"Å22\"\n            ],\n            \"parentType\": \"Lift\",\n            \"lat\": 63.409751213055465,\n            \"lng\": 13.061414652963638,\n            \"note\": \"middle\"\n        },\n        {\n            \"x\": 1546,\n            \"y\": 1173,\n            \"parent\": [\n                \"Å29\"\n            ],\n            \"parentType\": \"Lift\",\n            \"lat\": 63.40265903348546,\n            \"lng\": 13.07635681177306,\n            \"note\": \"bottom\"\n        },\n        {\n            \"x\": 1265,\n            \"y\": 288,\n            \"parent\": [\n                \"Å29\"\n            ],\n            \"parentType\": \"Lift\",\n            \"lat\": 63.42730461328684,\n            \"lng\": 13.07931089490709,\n            \"note\": \"top\"\n        },\n        {\n            \"x\": 1326,\n            \"y\": 507,\n            \"parent\": [\n                \"Å29\"\n            ],\n            \"parentType\": \"Lift\",\n            \"lat\": 63.42085720586304,\n            \"lng\": 13.078540399463403,\n            \"note\": \"middle-top\"\n        },\n        {\n            \"x\": 1484,\n            \"y\": 979,\n            \"parent\": [\n                \"Å29\"\n            ],\n            \"parentType\": \"Lift\",\n            \"lat\": 63.40714640094834,\n            \"lng\": 13.076896129937706,\n            \"note\": \"middle-bottom\"\n        },\n        {\n            \"x\": 1293,\n            \"y\": 402,\n            \"parent\": [\n                \"Å29\"\n            ],\n            \"parentType\": \"Lift\",\n            \"lat\": 63.423555184990285,\n            \"lng\": 13.078864772230249,\n            \"note\": \"middle-middle-top\"\n        },\n        {\n            \"x\": 1375,\n            \"y\": 630,\n            \"parent\": [\n                \"Å29\"\n            ],\n            \"parentType\": \"Lift\",\n            \"lat\": 63.41732647518361,\n            \"lng\": 13.078115762749691,\n            \"note\": \"top-middle-middle\"\n        },\n        {\n            \"x\": 1585,\n            \"y\": 1176,\n            \"parent\": [\n                \"Å30\"\n            ],\n            \"parentType\": \"Lift\",\n            \"lat\": 63.402607701497416,\n            \"lng\": 13.076754473963556,\n            \"note\": \"bottom\"\n        },\n        {\n            \"x\": 1531,\n            \"y\": 988,\n            \"parent\": [\n                \"Å30\"\n            ],\n            \"parentType\": \"Lift\",\n            \"lat\": 63.4060854215301,\n            \"lng\": 13.078099089953467,\n            \"note\": \"middle\"\n        },\n        {\n            \"x\": 1650,\n            \"y\": 962,\n            \"parent\": [\n                \"Å31\"\n            ],\n            \"parentType\": \"Lift\",\n            \"lat\": 63.40648585280049,\n            \"lng\": 13.083268945564116,\n            \"note\": \"middle\"\n        },\n        {\n            \"x\": 1698,\n            \"y\": 807,\n            \"parent\": [\n                \"Å31\"\n            ],\n            \"parentType\": \"Lift\",\n            \"lat\": 63.40859748904817,\n            \"lng\": 13.086493143177611,\n            \"note\": \"middle-top\"\n        },\n        {\n            \"x\": 1719,\n            \"y\": 759,\n            \"parent\": [\n                \"Å32\",\n                \"Å31\"\n            ],\n            \"parentType\": \"Lift\",\n            \"lat\": 63.40971637742563,\n            \"lng\": 13.088201110682357,\n            \"note\": \"intersect\"\n        },\n        {\n            \"x\": 1652,\n            \"y\": 727,\n            \"parent\": [\n                \"Å32\"\n            ],\n            \"parentType\": \"Lift\",\n            \"lat\": 63.41044216928537,\n            \"lng\": 13.08581672040134,\n            \"note\": \"middle-top\"\n        },\n        {\n            \"x\": 1698,\n            \"y\": 1245,\n            \"parent\": [\n                \"Å33\"\n            ],\n            \"parentType\": \"Lift\",\n            \"lat\": 63.40068953541448,\n            \"lng\": 13.07912649501833,\n            \"note\": \"bottom\"\n        },\n        {\n            \"x\": 1870,\n            \"y\": 939,\n            \"parent\": [\n                \"Å33\"\n            ],\n            \"parentType\": \"Lift\",\n            \"lat\": 63.4050192108493,\n            \"lng\": 13.09042037301466,\n            \"note\": \"top\"\n        },\n        {\n            \"x\": 1790,\n            \"y\": 1089,\n            \"parent\": [\n                \"Å33\"\n            ],\n            \"parentType\": \"Lift\",\n            \"lat\": 63.402917281090275,\n            \"lng\": 13.085694716904674,\n            \"note\": \"middle\"\n        },\n        {\n            \"x\": 1835,\n            \"y\": 1005,\n            \"parent\": [\n                \"Å33\"\n            ],\n            \"parentType\": \"Lift\",\n            \"lat\": 63.403898305371634,\n            \"lng\": 13.08835591637686,\n            \"note\": \"middle-top\"\n        },\n        {\n            \"x\": 1929,\n            \"y\": 916,\n            \"parent\": [\n                \"Å34\"\n            ],\n            \"parentType\": \"Lift\",\n            \"lat\": 63.40508225079141,\n            \"lng\": 13.093172279024529,\n            \"note\": \"bottom\"\n        },\n        {\n            \"x\": 2093,\n            \"y\": 801,\n            \"parent\": [\n                \"Å34\"\n            ],\n            \"parentType\": \"Lift\",\n            \"lat\": 63.40682699243534,\n            \"lng\": 13.10271192521908,\n            \"note\": \"middle\"\n        },\n        {\n            \"x\": 2003,\n            \"y\": 862,\n            \"parent\": [\n                \"Å34\"\n            ],\n            \"parentType\": \"Lift\",\n            \"lat\": 63.40596648522639,\n            \"lng\": 13.098001637856447,\n            \"note\": \"bottom-middle\"\n        },\n        {\n            \"x\": 543,\n            \"y\": 494,\n            \"parent\": [\n                \"31\"\n            ],\n            \"parentType\": \"Piste\",\n            \"lat\": 63.430466828605596,\n            \"lng\": 13.039371306931011,\n            \"note\": \"top\"\n        },\n        {\n            \"x\": 207,\n            \"y\": 510,\n            \"parent\": [\n                \"31\"\n            ],\n            \"parentType\": \"Piste\",\n            \"lat\": 63.434475278757695,\n            \"lng\": 13.024966157897357,\n            \"note\": \"big curve\"\n        },\n        {\n            \"x\": 357,\n            \"y\": 486,\n            \"parent\": [\n                \"31\"\n            ],\n            \"parentType\": \"Piste\",\n            \"lat\": 63.43252977497988,\n            \"lng\": 13.032487900285057,\n            \"note\": \"middle-top\"\n        },\n        {\n            \"x\": 287,\n            \"y\": 496,\n            \"parent\": [\n                \"31\"\n            ],\n            \"parentType\": \"Piste\",\n            \"lat\": 63.43378051103263,\n            \"lng\": 13.02827091300045,\n            \"note\": \"middle\"\n        },\n        {\n            \"x\": 127,\n            \"y\": 555,\n            \"parent\": [\n                \"31\"\n            ],\n            \"parentType\": \"Piste\",\n            \"lat\": 63.43308109962393,\n            \"lng\": 13.01957055229157,\n            \"note\": \"bottom-middle\"\n        },\n        {\n            \"x\": 67,\n            \"y\": 577,\n            \"parent\": [\n                \"31\"\n            ],\n            \"parentType\": \"Piste\",\n            \"lat\": 63.43186983558781,\n            \"lng\": 13.016282108408172,\n            \"note\": \"bottom curve\"\n        },\n        {\n            \"x\": 506,\n            \"y\": 484,\n            \"parent\": [\n                \"31\"\n            ],\n            \"parentType\": \"Piste\",\n            \"lat\": 63.43069839543489,\n            \"lng\": 13.039098119401613,\n            \"note\": \"top curve\"\n        },\n        {\n            \"x\": 284,\n            \"y\": 517,\n            \"parent\": [\n                \"32\"\n            ],\n            \"parentType\": \"Piste\",\n            \"lat\": 63.43043141140882,\n            \"lng\": 13.026138903311816,\n            \"note\": \"middle\"\n        },\n        {\n            \"x\": 412,\n            \"y\": 499,\n            \"parent\": [\n                \"32\"\n            ],\n            \"parentType\": \"Piste\",\n            \"lat\": 63.430118621734536,\n            \"lng\": 13.032453535304874,\n            \"note\": \"middle-top\"\n        },\n        {\n            \"x\": 172,\n            \"y\": 553,\n            \"parent\": [\n                \"32\"\n            ],\n            \"parentType\": \"Piste\",\n            \"lat\": 63.43061781758484,\n            \"lng\": 13.023128655265026,\n            \"note\": \"bottom-middle\"\n        },\n        {\n            \"x\": 247,\n            \"y\": 573,\n            \"parent\": [\n                \"33\",\n                \"36\"\n            ],\n            \"parentType\": \"Piste\",\n            \"lat\": 63.42975291643728,\n            \"lng\": 13.026192850773834,\n            \"note\": \"intersect\"\n        },\n        {\n            \"x\": 123,\n            \"y\": 614,\n            \"parent\": [\n                \"33\"\n            ],\n            \"parentType\": \"Piste\",\n            \"lat\": 63.429550251241274,\n            \"lng\": 13.018585134998325,\n            \"note\": \"bottom-middle\"\n        },\n        {\n            \"x\": 952,\n            \"y\": 1156,\n            \"parent\": [\n                \"34\",\n                \"55\"\n            ],\n            \"parentType\": \"Piste\",\n            \"lat\": 63.40689621333025,\n            \"lng\": 13.056432251914462,\n            \"note\": \"bottom, intersect\"\n        },\n        {\n            \"x\": 211,\n            \"y\": 629,\n            \"parent\": [\n                \"34\"\n            ],\n            \"parentType\": \"Piste\",\n            \"lat\": 63.42502588771983,\n            \"lng\": 13.02841444573167,\n            \"note\": \"top curve\"\n        },\n        {\n            \"x\": 186,\n            \"y\": 745,\n            \"parent\": [\n                \"34\"\n            ],\n            \"parentType\": \"Piste\",\n            \"lat\": 63.42084909766682,\n            \"lng\": 13.028540967429429,\n            \"note\": \"second curve\"\n        },\n        {\n            \"x\": 280,\n            \"y\": 799,\n            \"parent\": [\n                \"34\",\n                \"40\"\n            ],\n            \"parentType\": \"Piste\",\n            \"lat\": 63.41682142525314,\n            \"lng\": 13.032467462519456,\n            \"note\": \"intersect\"\n        },\n        {\n            \"x\": 195,\n            \"y\": 678,\n            \"parent\": [\n                \"34\"\n            ],\n            \"parentType\": \"Piste\",\n            \"lat\": 63.42395834506874,\n            \"lng\": 13.028507631324713,\n            \"note\": \"restaurant\"\n        },\n        {\n            \"x\": 667,\n            \"y\": 958,\n            \"parent\": [\n                \"34\"\n            ],\n            \"parentType\": \"Piste\",\n            \"lat\": 63.4098678543813,\n            \"lng\": 13.048517462589286,\n            \"note\": \"near-Å21\"\n        },\n        {\n            \"x\": 623,\n            \"y\": 987,\n            \"parent\": [\n                \"34\"\n            ],\n            \"parentType\": \"Piste\",\n            \"lat\": 63.40942312076809,\n            \"lng\": 13.049600363744114,\n            \"note\": \"left curve\"\n        },\n        {\n            \"x\": 742,\n            \"y\": 1018,\n            \"parent\": [\n                \"34\"\n            ],\n            \"parentType\": \"Piste\",\n            \"lat\": 63.40924633044024,\n            \"lng\": 13.052724520456644,\n            \"note\": \"right curve \"\n        },\n        {\n            \"x\": 645,\n            \"y\": 1038,\n            \"parent\": [\n                \"34\"\n            ],\n            \"parentType\": \"Piste\",\n            \"lat\": 63.40794242889727,\n            \"lng\": 13.052909127754093,\n            \"note\": \"left curve2\"\n        },\n        {\n            \"x\": 824,\n            \"y\": 1092,\n            \"parent\": [\n                \"34\"\n            ],\n            \"parentType\": \"Piste\",\n            \"lat\": 63.40794122222663,\n            \"lng\": 13.054232277260333,\n            \"note\": \"right curve2\"\n        },\n        {\n            \"x\": 883,\n            \"y\": 1132,\n            \"parent\": [\n                \"34\"\n            ],\n            \"parentType\": \"Piste\",\n            \"lat\": 63.40733820530902,\n            \"lng\": 13.054597208382175,\n            \"note\": \"slight left curve\"\n        },\n        {\n            \"x\": 515,\n            \"y\": 883,\n            \"parent\": [\n                \"34\"\n            ],\n            \"parentType\": \"Piste\",\n            \"lat\": 63.41247740123199,\n            \"lng\": 13.042568726005639,\n            \"note\": \"straight\"\n        },\n        {\n            \"x\": 265,\n            \"y\": 603,\n            \"parent\": [\n                \"34\"\n            ],\n            \"parentType\": \"Piste\",\n            \"lat\": 63.425868793236084,\n            \"lng\": 13.02922449931548,\n            \"note\": \"near skidland\"\n        },\n        {\n            \"x\": 978,\n            \"y\": 364,\n            \"parent\": [\n                \"35\",\n                \"H25\"\n            ],\n            \"parentType\": \"Piste\",\n            \"lat\": 63.42859973036792,\n            \"lng\": 13.071787331461445,\n            \"note\": \"intersect\"\n        },\n        {\n            \"x\": 1000,\n            \"y\": 412,\n            \"parent\": [\n                \"35\",\n                \"49\"\n            ],\n            \"parentType\": \"Piste\",\n            \"lat\": 63.42842375645897,\n            \"lng\": 13.068022727986811,\n            \"note\": \"intersect\"\n        },\n        {\n            \"x\": 887,\n            \"y\": 421,\n            \"parent\": [\n                \"35\"\n            ],\n            \"parentType\": \"Piste\",\n            \"lat\": 63.43239292934682,\n            \"lng\": 13.05221293873218,\n            \"note\": \"intersect-self\"\n        },\n        {\n            \"x\": 821,\n            \"y\": 486,\n            \"parent\": [\n                \"35\"\n            ],\n            \"parentType\": \"Piste\",\n            \"lat\": 63.43036080162646,\n            \"lng\": 13.042970758358408,\n            \"note\": \"curve\"\n        },\n        {\n            \"x\": 782,\n            \"y\": 475,\n            \"parent\": [\n                \"35\",\n                \"H24\"\n            ],\n            \"parentType\": \"Piste\",\n            \"lat\": 63.4305128834293,\n            \"lng\": 13.037182919814692,\n            \"note\": \"intersect\"\n        },\n        {\n            \"x\": 644,\n            \"y\": 519,\n            \"parent\": [\n                \"35\"\n            ],\n            \"parentType\": \"Piste\",\n            \"lat\": 63.430392386126606,\n            \"lng\": 13.04333157618934\n        },\n        {\n            \"x\": 1024,\n            \"y\": 323,\n            \"parent\": [\n                \"35\"\n            ],\n            \"parentType\": \"Piste\",\n            \"lat\": 63.42912726687091,\n            \"lng\": 13.071074360266563,\n            \"note\": \"curve\"\n        },\n        {\n            \"x\": 1141,\n            \"y\": 344,\n            \"parent\": [\n                \"49\"\n            ],\n            \"parentType\": \"Piste\",\n            \"lat\": 63.426842541888405,\n            \"lng\": 13.072089156669193,\n            \"note\": \"top\"\n        },\n        {\n            \"x\": 1073,\n            \"y\": 365,\n            \"parent\": [\n                \"49\"\n            ],\n            \"parentType\": \"Piste\",\n            \"lat\": 63.42849749157539,\n            \"lng\": 13.06699818471563,\n            \"note\": \"curve\"\n        },\n        {\n            \"x\": 934,\n            \"y\": 437,\n            \"parent\": [\n                \"49\"\n            ],\n            \"parentType\": \"Piste\",\n            \"lat\": 63.426293819471105,\n            \"lng\": 13.064514707513503,\n            \"note\": \"left curve\"\n        },\n        {\n            \"x\": 980,\n            \"y\": 464,\n            \"parent\": [\n                \"49\"\n            ],\n            \"parentType\": \"Piste\",\n            \"lat\": 63.423202392942486,\n            \"lng\": 13.065563559237496,\n            \"note\": \"right curve\"\n        },\n        {\n            \"x\": 893,\n            \"y\": 519,\n            \"parent\": [\n                \"49\"\n            ],\n            \"parentType\": \"Piste\",\n            \"lat\": 63.42297967512799,\n            \"lng\": 13.060762448075822,\n            \"note\": \"parallel curve\"\n        },\n        {\n            \"x\": 949,\n            \"y\": 578,\n            \"parent\": [\n                \"49\"\n            ],\n            \"parentType\": \"Piste\",\n            \"lat\": 63.42078295617757,\n            \"lng\": 13.061778821367911,\n            \"note\": \"dirverge curve\"\n        },\n        {\n            \"x\": 1053,\n            \"y\": 401,\n            \"parent\": [\n                \"49\"\n            ],\n            \"parentType\": \"Piste\",\n            \"lat\": 63.4272010861454,\n            \"lng\": 13.070139545199448,\n            \"note\": \"right curve\"\n        },\n        {\n            \"x\": 930,\n            \"y\": 622,\n            \"parent\": [\n                \"49\"\n            ],\n            \"parentType\": \"Piste\",\n            \"lat\": 63.420748822688864,\n            \"lng\": 13.057131685456946,\n            \"note\": \"bottom curve\"\n        },\n        {\n            \"x\": 958,\n            \"y\": 656,\n            \"parent\": [\n                \"47\",\n                \"49\"\n            ],\n            \"parentType\": \"Piste\",\n            \"lat\": 63.41899753000909,\n            \"lng\": 13.05629099777064,\n            \"note\": \"intersect\"\n        },\n        {\n            \"x\": 716,\n            \"y\": 604,\n            \"parent\": [\n                \"47\"\n            ],\n            \"parentType\": \"Piste\",\n            \"lat\": 63.4222679955208,\n            \"lng\": 13.049851543694832,\n            \"note\": \"middle-top\"\n        },\n        {\n            \"x\": 1556,\n            \"y\": 799,\n            \"parent\": [\n                \"47\"\n            ],\n            \"parentType\": \"Piste\",\n            \"lat\": 63.40824586458054,\n            \"lng\": 13.080963558138755,\n            \"note\": \"curve\"\n        },\n        {\n            \"x\": 1785,\n            \"y\": 858,\n            \"parent\": [\n                \"47\",\n                \"74\"\n            ],\n            \"parentType\": \"Piste\",\n            \"lat\": 63.40822631779612,\n            \"lng\": 13.088334452088914,\n            \"note\": \"first-intersect\"\n        },\n        {\n            \"x\": 479,\n            \"y\": 737,\n            \"parent\": [\n                \"46\"\n            ],\n            \"parentType\": \"Piste\",\n            \"lat\": 63.416203369027954,\n            \"lng\": 13.041057953541747,\n            \"note\": \"middle\"\n        },\n        {\n            \"x\": 833,\n            \"y\": 695,\n            \"parent\": [\n                \"48\"\n            ],\n            \"parentType\": \"Piste\",\n            \"lat\": 63.416203639263095,\n            \"lng\": 13.054869672569666,\n            \"note\": \"top-straight\"\n        },\n        {\n            \"x\": 787,\n            \"y\": 791,\n            \"parent\": [\n                \"48\"\n            ],\n            \"parentType\": \"Piste\",\n            \"lat\": 63.41466240602008,\n            \"lng\": 13.052708482655916,\n            \"note\": \"middle straight\"\n        },\n        {\n            \"x\": 923,\n            \"y\": 853,\n            \"parent\": [\n                \"48\",\n                \"50\"\n            ],\n            \"parentType\": \"Piste\",\n            \"lat\": 63.4123776195984,\n            \"lng\": 13.057453564945169,\n            \"note\": \"intersect\"\n        },\n        {\n            \"x\": 1013,\n            \"y\": 887,\n            \"parent\": [\n                \"48\",\n                \"56\"\n            ],\n            \"parentType\": \"Piste\",\n            \"lat\": 63.41096842803115,\n            \"lng\": 13.060045249677712,\n            \"note\": \"intersect\"\n        },\n        {\n            \"x\": 1099,\n            \"y\": 921,\n            \"parent\": [\n                \"48\",\n                \"57\"\n            ],\n            \"parentType\": \"Piste\",\n            \"lat\": 63.41008464105018,\n            \"lng\": 13.061854252765519,\n            \"note\": \"intersect\"\n        },\n        {\n            \"x\": 1339,\n            \"y\": 1012,\n            \"parent\": [\n                \"48\"\n            ],\n            \"parentType\": \"Piste\",\n            \"lat\": 63.40656740103598,\n            \"lng\": 13.069848447279039,\n            \"note\": \"bottom straight\"\n        },\n        {\n            \"x\": 1505,\n            \"y\": 1049,\n            \"parent\": [\n                \"48\",\n                \"Å29\"\n            ],\n            \"parentType\": \"Piste\",\n            \"lat\": 63.40460613394916,\n            \"lng\": 13.076590364387028,\n            \"note\": \"intersect\"\n        },\n        {\n            \"x\": 1552,\n            \"y\": 1059,\n            \"parent\": [\n                \"48\",\n                \"Å30\"\n            ],\n            \"parentType\": \"Piste\",\n            \"lat\": 63.40437746795797,\n            \"lng\": 13.077436679365686,\n            \"note\": \"intersect\"\n        },\n        {\n            \"x\": 1657,\n            \"y\": 1095,\n            \"parent\": [\n                \"48\",\n                \"71\"\n            ],\n            \"parentType\": \"Piste\",\n            \"lat\": 63.40396996870288,\n            \"lng\": 13.079203376867659,\n            \"note\": \"intersect\"\n        },\n        {\n            \"x\": 1647,\n            \"y\": 1127,\n            \"parent\": [\n                \"48\"\n            ],\n            \"parentType\": \"Piste\",\n            \"lat\": 63.40269645147208,\n            \"lng\": 13.078509033923757,\n            \"note\": \"mid bottom\"\n        },\n        {\n            \"x\": 1630,\n            \"y\": 1066,\n            \"parent\": [\n                \"Å31\"\n            ],\n            \"parentType\": \"Lift\",\n            \"lat\": 63.40418773288426,\n            \"lng\": 13.079836309996965,\n            \"note\": \"bottom-middle\"\n        },\n        {\n            \"x\": 385,\n            \"y\": 562,\n            \"parent\": [\n                \"41\"\n            ],\n            \"parentType\": \"Piste\",\n            \"lat\": 63.42534251753149,\n            \"lng\": 13.038991330210123,\n            \"note\": \"top\"\n        },\n        {\n            \"x\": 351,\n            \"y\": 611,\n            \"parent\": [\n                \"41\",\n                \"42\"\n            ],\n            \"parentType\": \"Piste\",\n            \"lat\": 63.42339556561729,\n            \"lng\": 13.040674693041531,\n            \"note\": \"intersect\"\n        },\n        {\n            \"x\": 397,\n            \"y\": 588,\n            \"parent\": [\n                \"42\"\n            ],\n            \"parentType\": \"Piste\",\n            \"lat\": 63.42429748080892,\n            \"lng\": 13.041749918310792,\n            \"note\": \"top-middle\"\n        },\n        {\n            \"x\": 359,\n            \"y\": 672,\n            \"parent\": [\n                \"42\"\n            ],\n            \"parentType\": \"Piste\",\n            \"lat\": 63.42028346820686,\n            \"lng\": 13.037461822076416,\n            \"note\": \"curve\"\n        },\n        {\n            \"x\": 348,\n            \"y\": 749,\n            \"parent\": [\n                \"42\"\n            ],\n            \"parentType\": \"Piste\",\n            \"lat\": 63.41818036249037,\n            \"lng\": 13.038166846008611,\n            \"note\": \"mid-bottom\"\n        },\n        {\n            \"x\": 474,\n            \"y\": 601,\n            \"parent\": [\n                \"44\"\n            ],\n            \"parentType\": \"Piste\",\n            \"lat\": 63.422649680955196,\n            \"lng\": 13.044624311680115,\n            \"note\": \"top right curve\"\n        },\n        {\n            \"x\": 431,\n            \"y\": 626,\n            \"parent\": [\n                \"44\"\n            ],\n            \"parentType\": \"Piste\",\n            \"lat\": 63.421660987383326,\n            \"lng\": 13.043245649061607,\n            \"note\": \"top left curve\"\n        },\n        {\n            \"x\": 407,\n            \"y\": 695,\n            \"parent\": [\n                \"44\"\n            ],\n            \"parentType\": \"Piste\",\n            \"lat\": 63.41952557064759,\n            \"lng\": 13.04158754123065,\n            \"note\": \"middle\"\n        },\n        {\n            \"x\": 389,\n            \"y\": 756,\n            \"parent\": [\n                \"44\"\n            ],\n            \"parentType\": \"Piste\",\n            \"lat\": 63.41629890812881,\n            \"lng\": 13.040045848895415,\n            \"note\": \"bottom-middle\"\n        },\n        {\n            \"x\": 309,\n            \"y\": 590,\n            \"parent\": [\n                \"40\"\n            ],\n            \"parentType\": \"Piste\",\n            \"lat\": 63.42523170650488,\n            \"lng\": 13.035719674314125,\n            \"note\": \"top right curve \"\n        },\n        {\n            \"x\": 270,\n            \"y\": 621,\n            \"parent\": [\n                \"40\"\n            ],\n            \"parentType\": \"Piste\",\n            \"lat\": 63.42403428993679,\n            \"lng\": 13.033990067248995,\n            \"note\": \"top left curve\"\n        },\n        {\n            \"x\": 235,\n            \"y\": 689,\n            \"parent\": [\n                \"40\"\n            ],\n            \"parentType\": \"Piste\",\n            \"lat\": 63.422229885706955,\n            \"lng\": 13.032784133944219,\n            \"note\": \"mid left curve\"\n        },\n        {\n            \"x\": 236,\n            \"y\": 748,\n            \"parent\": [\n                \"40\"\n            ],\n            \"parentType\": \"Piste\",\n            \"lat\": 63.4195807783606,\n            \"lng\": 13.032282395413297,\n            \"note\": \"bottom left curve\"\n        },\n        {\n            \"x\": 265,\n            \"y\": 793,\n            \"parent\": [\n                \"40\",\n                \"34\"\n            ],\n            \"parentType\": \"Piste\",\n            \"lat\": 63.416813930210886,\n            \"lng\": 13.03249212605435,\n            \"note\": \"intersect\"\n        },\n        {\n            \"x\": 580,\n            \"y\": 582,\n            \"parent\": [\n                \"47\"\n            ],\n            \"parentType\": \"Piste\",\n            \"lat\": 63.42373032861879,\n            \"lng\": 13.048674747507055,\n            \"note\": \"middle-top\"\n        },\n        {\n            \"x\": 839,\n            \"y\": 630,\n            \"parent\": [\n                \"47\"\n            ],\n            \"parentType\": \"Piste\",\n            \"lat\": 63.42030947702555,\n            \"lng\": 13.052716698047963,\n            \"note\": \"middle\"\n        },\n        {\n            \"x\": 1388,\n            \"y\": 761,\n            \"parent\": [\n                \"47\",\n                \"71\"\n            ],\n            \"parentType\": \"Piste\",\n            \"lat\": 63.409920667458394,\n            \"lng\": 13.076861234065795,\n            \"note\": \"intersect\"\n        },\n        {\n            \"x\": 954,\n            \"y\": 980,\n            \"parent\": [\n                \"55\"\n            ],\n            \"parentType\": \"Piste\",\n            \"lat\": 63.40955416407153,\n            \"lng\": 13.056732378640454,\n            \"note\": \"right curve\"\n        },\n        {\n            \"x\": 905,\n            \"y\": 798,\n            \"parent\": [\n                \"55\"\n            ],\n            \"parentType\": \"Piste\",\n            \"lat\": 63.41332362832586,\n            \"lng\": 13.05734372592533,\n            \"note\": \"left curve\"\n        },\n        {\n            \"x\": 912,\n            \"y\": 1069,\n            \"parent\": [\n                \"55\"\n            ],\n            \"parentType\": \"Piste\",\n            \"lat\": 63.40824974927543,\n            \"lng\": 13.056036934295102,\n            \"note\": \"second left curve\"\n        },\n        {\n            \"x\": 973,\n            \"y\": 746,\n            \"parent\": [\n                \"55\"\n            ],\n            \"parentType\": \"Piste\",\n            \"lat\": 63.414342838654456,\n            \"lng\": 13.059705283417289,\n            \"note\": \"top straight\"\n        },\n        {\n            \"x\": 931,\n            \"y\": 926,\n            \"parent\": [\n                \"55\"\n            ],\n            \"parentType\": \"Piste\",\n            \"lat\": 63.41086192789221,\n            \"lng\": 13.056549646102393,\n            \"note\": \"middle straight\"\n        },\n        {\n            \"x\": 934,\n            \"y\": 1033,\n            \"parent\": [\n                \"55\"\n            ],\n            \"parentType\": \"Piste\",\n            \"lat\": 63.40923510978474,\n            \"lng\": 13.056721542001268,\n            \"note\": \"middle straigh\"\n        },\n        {\n            \"x\": 975,\n            \"y\": 1160,\n            \"parent\": [\n                \"34\",\n                \"55\"\n            ],\n            \"parentType\": \"Piste\",\n            \"lat\": 63.406896099258056,\n            \"lng\": 13.056434017680036,\n            \"note\": \"intersect\"\n        },\n        {\n            \"x\": 1071,\n            \"y\": 712,\n            \"parent\": [\n                \"56\",\n                \"57\"\n            ],\n            \"parentType\": \"Piste\",\n            \"lat\": 63.41521272753232,\n            \"lng\": 13.065239433316393,\n            \"note\": \"intersect\"\n        },\n        {\n            \"x\": 1028,\n            \"y\": 746,\n            \"parent\": [\n                \"56\"\n            ],\n            \"parentType\": \"Piste\",\n            \"lat\": 63.41428932083163,\n            \"lng\": 13.064660697369067,\n            \"note\": \"upper\"\n        },\n        {\n            \"x\": 1001,\n            \"y\": 800,\n            \"parent\": [\n                \"56\"\n            ],\n            \"parentType\": \"Piste\",\n            \"lat\": 63.41388587124605,\n            \"lng\": 13.0615080185748,\n            \"note\": \"left curve\"\n        },\n        {\n            \"x\": 1035,\n            \"y\": 828,\n            \"parent\": [\n                \"56\"\n            ],\n            \"parentType\": \"Piste\",\n            \"lat\": 63.41233961456312,\n            \"lng\": 13.061432528968355,\n            \"note\": \"right curve\"\n        },\n        {\n            \"x\": 1012,\n            \"y\": 924,\n            \"parent\": [\n                \"56\"\n            ],\n            \"parentType\": \"Piste\",\n            \"lat\": 63.41001979395466,\n            \"lng\": 13.05970920099431\n        },\n        {\n            \"x\": 1045,\n            \"y\": 971,\n            \"parent\": [\n                \"56\"\n            ],\n            \"parentType\": \"Piste\",\n            \"lat\": 63.40920512648284,\n            \"lng\": 13.06022155535285,\n            \"note\": \"middle right curve\"\n        },\n        {\n            \"x\": 1012,\n            \"y\": 1031,\n            \"parent\": [\n                \"56\"\n            ],\n            \"parentType\": \"Piste\",\n            \"lat\": 63.40780650036995,\n            \"lng\": 13.058409889567741,\n            \"note\": \"lower left curve \"\n        },\n        {\n            \"x\": 1018,\n            \"y\": 1119,\n            \"parent\": [\n                \"56\"\n            ],\n            \"parentType\": \"Piste\",\n            \"lat\": 63.406230590464155,\n            \"lng\": 13.057803511960055,\n            \"note\": \"mid lower straight \"\n        },\n        {\n            \"x\": 1348,\n            \"y\": 315,\n            \"parent\": [\n                \"81\"\n            ],\n            \"parentType\": \"Piste\",\n            \"lat\": 63.42646515937982,\n            \"lng\": 13.085849362352882,\n            \"note\": \"top right curve \"\n        },\n        {\n            \"x\": 1390,\n            \"y\": 390,\n            \"parent\": [\n                \"81\"\n            ],\n            \"parentType\": \"Piste\",\n            \"lat\": 63.423711246063675,\n            \"lng\": 13.086190413778661,\n            \"note\": \"middle curve \"\n        },\n        {\n            \"x\": 1404,\n            \"y\": 457,\n            \"parent\": [\n                \"81\"\n            ],\n            \"parentType\": \"Piste\",\n            \"lat\": 63.42233046258272,\n            \"lng\": 13.087142817104866,\n            \"note\": \"bottom right curve \"\n        },\n        {\n            \"x\": 1298,\n            \"y\": 308,\n            \"parent\": [\n                \"80\"\n            ],\n            \"parentType\": \"Piste\",\n            \"lat\": 63.426408314959126,\n            \"lng\": 13.079562663073764,\n            \"note\": \"top\"\n        },\n        {\n            \"x\": 1306,\n            \"y\": 394,\n            \"parent\": [\n                \"80\"\n            ],\n            \"parentType\": \"Piste\",\n            \"lat\": 63.425041112549124,\n            \"lng\": 13.079476438887333,\n            \"note\": \"left curve\"\n        },\n        {\n            \"x\": 1330,\n            \"y\": 456,\n            \"parent\": [\n                \"80\"\n            ],\n            \"parentType\": \"Piste\",\n            \"lat\": 63.42166717638789,\n            \"lng\": 13.08018843650228,\n            \"note\": \"bottom-middle\"\n        },\n        {\n            \"x\": 1306,\n            \"y\": 353,\n            \"parent\": [\n                \"80\"\n            ],\n            \"parentType\": \"Piste\",\n            \"lat\": 63.42548267109828,\n            \"lng\": 13.07946881387783\n        },\n        {\n            \"x\": 879,\n            \"y\": 365,\n            \"parent\": [\n                \"83\"\n            ],\n            \"parentType\": \"Piste\",\n            \"lat\": 63.43298465327285,\n            \"lng\": 13.070788584525012,\n            \"note\": \"middle\"\n        },\n        {\n            \"x\": 960,\n            \"y\": 352,\n            \"parent\": [\n                \"83\"\n            ],\n            \"parentType\": \"Piste\",\n            \"lat\": 63.431489682463535,\n            \"lng\": 13.071081699840432,\n            \"note\": \"middle-top\"\n        },\n        {\n            \"x\": 807,\n            \"y\": 395,\n            \"parent\": [\n                \"83\"\n            ],\n            \"parentType\": \"Piste\",\n            \"lat\": 63.4344907211342,\n            \"lng\": 13.068386749362814,\n            \"note\": \"bottom-middle\"\n        },\n        {\n            \"x\": 741,\n            \"y\": 446,\n            \"parent\": [\n                \"84\"\n            ],\n            \"parentType\": \"Piste\",\n            \"lat\": 63.43420799913926,\n            \"lng\": 13.059314321056164,\n            \"note\": \"middle\"\n        },\n        {\n            \"x\": 578,\n            \"y\": 482,\n            \"parent\": [\n                \"85\"\n            ],\n            \"parentType\": \"Piste\",\n            \"lat\": 63.43545074442455,\n            \"lng\": 13.043942739258494,\n            \"note\": \"bottom\"\n        },\n        {\n            \"x\": 635,\n            \"y\": 436,\n            \"parent\": [\n                \"85\"\n            ],\n            \"parentType\": \"Piste\",\n            \"lat\": 63.43247126335575,\n            \"lng\": 13.042215874563853,\n            \"note\": \"middle\"\n        },\n        {\n            \"x\": 698,\n            \"y\": 483,\n            \"parent\": [\n                \"86\"\n            ],\n            \"parentType\": \"Piste\",\n            \"lat\": 63.43384019032374,\n            \"lng\": 13.047795918245253,\n            \"note\": \"middle\"\n        },\n        {\n            \"x\": 685,\n            \"y\": 461,\n            \"parent\": [\n                \"87\"\n            ],\n            \"parentType\": \"Piste\",\n            \"lat\": 63.4341446896486,\n            \"lng\": 13.049318831462985,\n            \"note\": \"middle\"\n        },\n        {\n            \"x\": 349,\n            \"y\": 777,\n            \"parent\": [\n                \"43\"\n            ],\n            \"parentType\": \"Piste\",\n            \"lat\": 63.4162411157001,\n            \"lng\": 13.038583300853581,\n            \"note\": \"bottom\"\n        },\n        {\n            \"x\": 378,\n            \"y\": 660,\n            \"parent\": [\n                \"43\"\n            ],\n            \"parentType\": \"Piste\",\n            \"lat\": 63.419655939919686,\n            \"lng\": 13.039850830407058,\n            \"note\": \"curve\"\n        },\n        {\n            \"x\": 365,\n            \"y\": 712,\n            \"parent\": [\n                \"43\"\n            ],\n            \"parentType\": \"Piste\",\n            \"lat\": 63.4184027757903,\n            \"lng\": 13.039426281028565,\n            \"note\": \"middle\"\n        },\n        {\n            \"x\": 1072,\n            \"y\": 437,\n            \"parent\": [\n                \"60\"\n            ],\n            \"parentType\": \"Piste\",\n            \"lat\": 63.423447853463955,\n            \"lng\": 13.068766923630001,\n            \"note\": \"y cross\"\n        },\n        {\n            \"x\": 935,\n            \"y\": 498,\n            \"parent\": [\n                \"59\",\n                \"60\"\n            ],\n            \"parentType\": \"Piste\",\n            \"lat\": 63.42286609506007,\n            \"lng\": 13.066920060968718,\n            \"note\": \"intersect\"\n        },\n        {\n            \"x\": 1008,\n            \"y\": 474,\n            \"parent\": [\n                \"60\"\n            ],\n            \"parentType\": \"Piste\",\n            \"lat\": 63.42281532200176,\n            \"lng\": 13.066583921542184\n        },\n        {\n            \"x\": 905,\n            \"y\": 518,\n            \"parent\": [\n                \"60\"\n            ],\n            \"parentType\": \"Piste\",\n            \"lat\": 63.42288942246926,\n            \"lng\": 13.061294347760239,\n            \"note\": \"left curve\"\n        },\n        {\n            \"x\": 970,\n            \"y\": 573,\n            \"parent\": [\n                \"60\"\n            ],\n            \"parentType\": \"Piste\",\n            \"lat\": 63.41943388794204,\n            \"lng\": 13.062151859253172,\n            \"note\": \"right curve \"\n        },\n        {\n            \"x\": 1038,\n            \"y\": 669,\n            \"parent\": [\n                \"60\"\n            ],\n            \"parentType\": \"Piste\",\n            \"lat\": 63.41685012112505,\n            \"lng\": 13.06200994232872,\n            \"note\": \"bottom\"\n        },\n        {\n            \"x\": 1220,\n            \"y\": 323,\n            \"parent\": [\n                \"59\"\n            ],\n            \"parentType\": \"Piste\",\n            \"lat\": 63.42622176084493,\n            \"lng\": 13.075037049274053,\n            \"note\": \"right curve \"\n        },\n        {\n            \"x\": 1137,\n            \"y\": 370,\n            \"parent\": [\n                \"59\"\n            ],\n            \"parentType\": \"Piste\",\n            \"lat\": 63.42506933428949,\n            \"lng\": 13.073033465162153,\n            \"note\": \"left curve \"\n        },\n        {\n            \"x\": 1088,\n            \"y\": 465,\n            \"parent\": [\n                \"59\"\n            ],\n            \"parentType\": \"Piste\",\n            \"lat\": 63.42261397632487,\n            \"lng\": 13.070594173062803,\n            \"note\": \"split\"\n        },\n        {\n            \"x\": 1046,\n            \"y\": 497,\n            \"parent\": [\n                \"59\",\n                \"60\"\n            ],\n            \"parentType\": \"Piste\",\n            \"lat\": 63.42063556622241,\n            \"lng\": 13.067160426827815,\n            \"note\": \"intersect\"\n        },\n        {\n            \"x\": 1021,\n            \"y\": 540,\n            \"parent\": [\n                \"59\"\n            ],\n            \"parentType\": \"Piste\",\n            \"lat\": 63.41997864401407,\n            \"lng\": 13.06525404131864,\n            \"note\": \"left curve\"\n        },\n        {\n            \"x\": 1351,\n            \"y\": 531,\n            \"parent\": [\n                \"82\"\n            ],\n            \"parentType\": \"Piste\",\n            \"lat\": 63.4184609926739,\n            \"lng\": 13.079489217225321,\n            \"note\": \"left curve \"\n        },\n        {\n            \"x\": 1386,\n            \"y\": 589,\n            \"parent\": [\n                \"82B\"\n            ],\n            \"parentType\": \"Piste\",\n            \"lat\": 63.413584452520745,\n            \"lng\": 13.080704991202614,\n            \"note\": \"right curve \"\n        },\n        {\n            \"x\": 1354,\n            \"y\": 658,\n            \"parent\": [\n                \"82\",\n                \"82A\",\n                \"82B\"\n            ],\n            \"parentType\": \"Piste\",\n            \"lat\": 63.413584452520745,\n            \"lng\": 13.080704991202614,\n            \"note\": \"bottom, intersect\"\n        },\n        {\n            \"x\": 1285,\n            \"y\": 638,\n            \"parent\": [\n                \"82A\"\n            ],\n            \"parentType\": \"Piste\",\n            \"lat\": 63.4141202350019,\n            \"lng\": 13.075774329790772,\n            \"note\": \"left curve\"\n        },\n        {\n            \"x\": 1332,\n            \"y\": 593,\n            \"parent\": [\n                \"82A\"\n            ],\n            \"parentType\": \"Piste\",\n            \"lat\": 63.414823114833915,\n            \"lng\": 13.078985919572647,\n            \"note\": \"right curve \"\n        },\n        {\n            \"x\": 1330,\n            \"y\": 628,\n            \"parent\": [\n                \"82B\"\n            ],\n            \"parentType\": \"Piste\",\n            \"lat\": 63.41328274188654,\n            \"lng\": 13.078451340056473,\n            \"note\": \"left curve\"\n        },\n        {\n            \"x\": 1467,\n            \"y\": 661,\n            \"parent\": [\n                \"82\"\n            ],\n            \"parentType\": \"Piste\",\n            \"lat\": 63.41200782618785,\n            \"lng\": 13.07890813365406,\n            \"note\": \"mid bottom\"\n        },\n        {\n            \"x\": 1391,\n            \"y\": 771,\n            \"parent\": [\n                \"71A\"\n            ],\n            \"parentType\": \"Piste\",\n            \"lat\": 63.40991964816899,\n            \"lng\": 13.076857813208838,\n            \"note\": \"top\"\n        },\n        {\n            \"x\": 1468,\n            \"y\": 848,\n            \"parent\": [\n                \"71\",\n                \"71A\",\n                \"71B\"\n            ],\n            \"parentType\": \"Piste\",\n            \"lat\": 63.40899252991655,\n            \"lng\": 13.079060867080088,\n            \"note\": \"intersect\"\n        },\n        {\n            \"x\": 1413,\n            \"y\": 822,\n            \"parent\": [\n                \"71A\"\n            ],\n            \"parentType\": \"Piste\",\n            \"lat\": 63.40871849197639,\n            \"lng\": 13.076777241069676,\n            \"note\": \"left curve \"\n        },\n        {\n            \"x\": 1466,\n            \"y\": 810,\n            \"parent\": [\n                \"71B\"\n            ],\n            \"parentType\": \"Piste\",\n            \"lat\": 63.4086521403701,\n            \"lng\": 13.078095150420607,\n            \"note\": \"left curve \"\n        },\n        {\n            \"x\": 1658,\n            \"y\": 1089,\n            \"parent\": [\n                \"71\"\n            ],\n            \"parentType\": \"Piste\",\n            \"lat\": 63.403968255535396,\n            \"lng\": 13.079204077429827,\n            \"note\": \"bottom\"\n        },\n        {\n            \"x\": 1553,\n            \"y\": 939,\n            \"parent\": [\n                \"71\"\n            ],\n            \"parentType\": \"Piste\",\n            \"lat\": 63.40818056157737,\n            \"lng\": 13.07775181098972,\n            \"note\": \"top\"\n        },\n        {\n            \"x\": 1515,\n            \"y\": 902,\n            \"parent\": [\n                \"71\",\n                \"Å30\"\n            ],\n            \"parentType\": \"Piste\",\n            \"lat\": 63.40728045022514,\n            \"lng\": 13.078556751089815,\n            \"note\": \"intersect\"\n        },\n        {\n            \"x\": 1598,\n            \"y\": 1011,\n            \"parent\": [\n                \"71\"\n            ],\n            \"parentType\": \"Piste\",\n            \"lat\": 63.405075374885456,\n            \"lng\": 13.079221250698554,\n            \"note\": \"mid bottom \"\n        },\n        {\n            \"x\": 1754,\n            \"y\": 1070,\n            \"parent\": [\n                \"73\",\n                \"74\"\n            ],\n            \"parentType\": \"Piste\",\n            \"lat\": 63.405009993496954,\n            \"lng\": 13.085319583007129,\n            \"note\": \"intersect\"\n        },\n        {\n            \"x\": 1310,\n            \"y\": 654,\n            \"parent\": [\n                \"58A\",\n                \"82A\"\n            ],\n            \"parentType\": \"Piste\",\n            \"lat\": 63.41318361959545,\n            \"lng\": 13.075781066749283,\n            \"note\": \"intersect\"\n        },\n        {\n            \"x\": 1311,\n            \"y\": 676,\n            \"parent\": [\n                \"58A\"\n            ],\n            \"parentType\": \"Piste\",\n            \"lat\": 63.41280158424543,\n            \"lng\": 13.074724248907286,\n            \"note\": \"right curve \"\n        },\n        {\n            \"x\": 1271,\n            \"y\": 697,\n            \"parent\": [\n                \"58A\"\n            ],\n            \"parentType\": \"Piste\",\n            \"lat\": 63.41284073568956,\n            \"lng\": 13.072680769852315,\n            \"note\": \"left curve\"\n        },\n        {\n            \"x\": 1257,\n            \"y\": 752,\n            \"parent\": [\n                \"58A\"\n            ],\n            \"parentType\": \"Piste\",\n            \"lat\": 63.41174293696642,\n            \"lng\": 13.069625840463818,\n            \"note\": \"right curve\"\n        },\n        {\n            \"x\": 1194,\n            \"y\": 785,\n            \"parent\": [\n                \"57\",\n                \"58A\"\n            ],\n            \"parentType\": \"Piste\",\n            \"lat\": 63.410577528333654,\n            \"lng\": 13.062957159215607,\n            \"note\": \"intersect\"\n        },\n        {\n            \"x\": 1062,\n            \"y\": 1148,\n            \"parent\": [\n                \"58B\"\n            ],\n            \"parentType\": \"Piste\",\n            \"lat\": 63.40648785777008,\n            \"lng\": 13.059507143262085,\n            \"note\": \"left curve \"\n        },\n        {\n            \"x\": 1146,\n            \"y\": 1104,\n            \"parent\": [\n                \"58B\"\n            ],\n            \"parentType\": \"Piste\",\n            \"lat\": 63.407005633102656,\n            \"lng\": 13.061593677415821,\n            \"note\": \"lower right curve \"\n        },\n        {\n            \"x\": 1159,\n            \"y\": 1020,\n            \"parent\": [\n                \"58B\"\n            ],\n            \"parentType\": \"Piste\",\n            \"lat\": 63.408491868166756,\n            \"lng\": 13.062499474081294,\n            \"note\": \"upper right curve \"\n        },\n        {\n            \"x\": 1151,\n            \"y\": 1062,\n            \"parent\": [\n                \"58B\"\n            ],\n            \"parentType\": \"Piste\",\n            \"lat\": 63.40778818073048,\n            \"lng\": 13.062377979846461,\n            \"note\": \"middle\"\n        },\n        {\n            \"x\": 1101,\n            \"y\": 1127,\n            \"parent\": [\n                \"58B\",\n                \"Å22\"\n            ],\n            \"parentType\": \"Piste\",\n            \"lat\": 63.40673679653903,\n            \"lng\": 13.060267578898106,\n            \"note\": \"intersect\"\n        },\n        {\n            \"x\": 2041,\n            \"y\": 801,\n            \"parent\": [\n                \"103\"\n            ],\n            \"parentType\": \"Piste\",\n            \"lat\": 63.40440473912105,\n            \"lng\": 13.09546266024545,\n            \"note\": \"large left curve\"\n        },\n        {\n            \"x\": 2169,\n            \"y\": 701,\n            \"parent\": [\n                \"103\"\n            ],\n            \"parentType\": \"Piste\",\n            \"lat\": 63.40719620825573,\n            \"lng\": 13.10619138234566,\n            \"note\": \"top left curve \"\n        },\n        {\n            \"x\": 2127,\n            \"y\": 746,\n            \"parent\": [\n                \"103\"\n            ],\n            \"parentType\": \"Piste\",\n            \"lat\": 63.40629826309062,\n            \"lng\": 13.103647578839102,\n            \"note\": \"right curve\"\n        },\n        {\n            \"x\": 1995,\n            \"y\": 916,\n            \"parent\": [\n                \"103\",\n                \"102\"\n            ],\n            \"parentType\": \"Piste\",\n            \"lat\": 63.40629826309062,\n            \"lng\": 13.103647578839102,\n            \"note\": \"bottom, intersect\"\n        },\n        {\n            \"x\": 2040,\n            \"y\": 854,\n            \"parent\": [\n                \"103\"\n            ],\n            \"parentType\": \"Piste\",\n            \"lat\": 63.40487172876848,\n            \"lng\": 13.097051158079841,\n            \"note\": \"right curve \"\n        },\n        {\n            \"x\": 2329,\n            \"y\": 669,\n            \"parent\": [\n                \"102C\"\n            ],\n            \"parentType\": \"Piste\",\n            \"lat\": 63.40797376049978,\n            \"lng\": 13.112090425463805,\n            \"note\": \"left curve \"\n        },\n        {\n            \"x\": 2282,\n            \"y\": 788,\n            \"parent\": [\n                \"102C\",\n                \"102B\"\n            ],\n            \"parentType\": \"Piste\",\n            \"lat\": 63.40493209947838,\n            \"lng\": 13.108186100647913,\n            \"note\": \"intersect\"\n        },\n        {\n            \"x\": 2417,\n            \"y\": 733,\n            \"parent\": [\n                \"102C\",\n                \"102B\"\n            ],\n            \"parentType\": \"Piste\",\n            \"lat\": 63.4044762217291,\n            \"lng\": 13.112319183690046,\n            \"note\": \"big right curve\"\n        },\n        {\n            \"x\": 2367,\n            \"y\": 775,\n            \"parent\": [\n                \"102C\",\n                \"104\"\n            ],\n            \"parentType\": \"Piste\",\n            \"lat\": 63.404370225782415,\n            \"lng\": 13.111590869224989,\n            \"note\": \"intersect\"\n        },\n        {\n            \"x\": 2392,\n            \"y\": 692,\n            \"parent\": [\n                \"102C\"\n            ],\n            \"parentType\": \"Piste\",\n            \"lat\": 63.40595287523626,\n            \"lng\": 13.113353878457712,\n            \"note\": \"beginning right curve \"\n        },\n        {\n            \"x\": 2208,\n            \"y\": 807,\n            \"parent\": [\n                \"102C\"\n            ],\n            \"parentType\": \"Piste\",\n            \"lat\": 63.40480189466551,\n            \"lng\": 13.106410074002882,\n            \"note\": \"slight right curve \"\n        },\n        {\n            \"x\": 2178,\n            \"y\": 809,\n            \"parent\": [\n                \"102C\",\n                \"Å35\"\n            ],\n            \"parentType\": \"Piste\",\n            \"lat\": 63.404893584646516,\n            \"lng\": 13.103851950289304,\n            \"note\": \"intersect\"\n        },\n        {\n            \"x\": 2117,\n            \"y\": 822,\n            \"parent\": [\n                \"102C\",\n                \"102A\"\n            ],\n            \"parentType\": \"Piste\",\n            \"lat\": 63.40539502228751,\n            \"lng\": 13.09843707258544,\n            \"note\": \"intersect\"\n        },\n        {\n            \"x\": 2041,\n            \"y\": 905,\n            \"parent\": [\n                \"102C\",\n                \"104\"\n            ],\n            \"parentType\": \"Piste\",\n            \"lat\": 63.4042111375034,\n            \"lng\": 13.095318872242707,\n            \"note\": \"intersect\"\n        },\n        {\n            \"x\": 1920,\n            \"y\": 900,\n            \"parent\": [\n                \"102C\"\n            ],\n            \"parentType\": \"Piste\",\n            \"lat\": 63.405403247521775,\n            \"lng\": 13.094251960519498,\n            \"note\": \"left bottom curve \"\n        },\n        {\n            \"x\": 2265,\n            \"y\": 709,\n            \"parent\": [\n                \"102A\"\n            ],\n            \"parentType\": \"Piste\",\n            \"lat\": 63.4072502863192,\n            \"lng\": 13.109190881948395,\n            \"note\": \"right curve \"\n        },\n        {\n            \"x\": 2182,\n            \"y\": 751,\n            \"parent\": [\n                \"102A\"\n            ],\n            \"parentType\": \"Piste\",\n            \"lat\": 63.40653027156848,\n            \"lng\": 13.106163649918544,\n            \"note\": \"left curve\"\n        },\n        {\n            \"x\": 2359,\n            \"y\": 726,\n            \"parent\": [\n                \"102B\"\n            ],\n            \"parentType\": \"Piste\",\n            \"lat\": 63.40649279574211,\n            \"lng\": 13.112626130808009,\n            \"note\": \"right curve \"\n        },\n        {\n            \"x\": 2322,\n            \"y\": 744,\n            \"parent\": [\n                \"102B\"\n            ],\n            \"parentType\": \"Piste\",\n            \"lat\": 63.40568996690946,\n            \"lng\": 13.109666751894045,\n            \"note\": \"left curve\"\n        },\n        {\n            \"x\": 2357,\n            \"y\": 798,\n            \"parent\": [\n                \"104\"\n            ],\n            \"parentType\": \"Piste\",\n            \"lat\": 63.40346846773463,\n            \"lng\": 13.109513878001259,\n            \"note\": \"top right curve \"\n        },\n        {\n            \"x\": 2268,\n            \"y\": 819,\n            \"parent\": [\n                \"104\"\n            ],\n            \"parentType\": \"Piste\",\n            \"lat\": 63.40377958121467,\n            \"lng\": 13.105044236034477,\n            \"note\": \"straight \"\n        },\n        {\n            \"x\": 2140,\n            \"y\": 858,\n            \"parent\": [\n                \"104\"\n            ],\n            \"parentType\": \"Piste\",\n            \"lat\": 63.404418353143974,\n            \"lng\": 13.103343424653223,\n            \"note\": \"slight left \"\n        },\n        {\n            \"x\": 2028,\n            \"y\": 914,\n            \"parent\": [\n                \"102C\"\n            ],\n            \"parentType\": \"Piste\",\n            \"lat\": 63.40356594170265,\n            \"lng\": 13.096960387957983,\n            \"note\": \"intersect\"\n        },\n        {\n            \"x\": 1968,\n            \"y\": 1055,\n            \"parent\": [\n                \"102C\"\n            ],\n            \"parentType\": \"Piste\",\n            \"lat\": 63.40182754949222,\n            \"lng\": 13.093474501900495,\n            \"note\": \"bottom right curve \"\n        },\n        {\n            \"x\": 2035,\n            \"y\": 931,\n            \"parent\": [\n                \"102C\",\n                \"Å35\"\n            ],\n            \"parentType\": \"Piste\",\n            \"lat\": 63.40288685110408,\n            \"lng\": 13.095434865152944,\n            \"note\": \"intersect\"\n        },\n        {\n            \"x\": 1681,\n            \"y\": 843,\n            \"parent\": [\n                \"47\",\n                \"Å31\",\n                \"73A\"\n            ],\n            \"parentType\": \"Piste\",\n            \"lat\": 63.40808880273803,\n            \"lng\": 13.085158508624216,\n            \"note\": \"intersect\"\n        },\n        {\n            \"x\": 1730,\n            \"y\": 921,\n            \"parent\": [\n                \"73A\",\n                \"73B\"\n            ],\n            \"parentType\": \"Piste\",\n            \"lat\": 63.409217491352855,\n            \"lng\": 13.08756490012628,\n            \"note\": \"intersect\"\n        },\n        {\n            \"x\": 1752,\n            \"y\": 859,\n            \"parent\": [\n                \"47\",\n                \"73B\"\n            ],\n            \"parentType\": \"Piste\",\n            \"lat\": 63.40833161095595,\n            \"lng\": 13.087146141968491,\n            \"note\": \"intersect\"\n        },\n        {\n            \"x\": 1725,\n            \"y\": 1042,\n            \"parent\": [\n                \"73B\"\n            ],\n            \"parentType\": \"Piste\",\n            \"lat\": 63.405009993496954,\n            \"lng\": 13.085319583007129,\n            \"note\": \"left curve\"\n        },\n        {\n            \"x\": 1732,\n            \"y\": 948,\n            \"parent\": [\n                \"73B\"\n            ],\n            \"parentType\": \"Piste\",\n            \"lat\": 63.40583144442143,\n            \"lng\": 13.08533669858936,\n            \"note\": \"right curve\"\n        },\n        {\n            \"x\": 1712,\n            \"y\": 892,\n            \"parent\": [\n                \"73A\",\n                \"72\"\n            ],\n            \"parentType\": \"Piste\",\n            \"lat\": 63.40662538531294,\n            \"lng\": 13.085153802522749,\n            \"note\": \"intersect\"\n        },\n        {\n            \"x\": 1678,\n            \"y\": 983,\n            \"parent\": [\n                \"72\"\n            ],\n            \"parentType\": \"Piste\",\n            \"lat\": 63.40507290837215,\n            \"lng\": 13.082603253745567\n        },\n        {\n            \"x\": 1675,\n            \"y\": 1133,\n            \"parent\": [\n                \"72\"\n            ],\n            \"parentType\": \"Piste\",\n            \"lat\": 63.40358916560506,\n            \"lng\": 13.080930768784844,\n            \"note\": \"right curve\"\n        },\n        {\n            \"x\": 1783,\n            \"y\": 926,\n            \"parent\": [\n                \"77\",\n                \"74\"\n            ],\n            \"parentType\": \"Piste\",\n            \"lat\": 63.40794841520704,\n            \"lng\": 13.089485483256333,\n            \"note\": \"intersect\"\n        },\n        {\n            \"x\": 1788,\n            \"y\": 1002,\n            \"parent\": [\n                \"74\"\n            ],\n            \"parentType\": \"Piste\",\n            \"lat\": 63.40558675198305,\n            \"lng\": 13.087654792626523,\n            \"note\": \"right curve\"\n        },\n        {\n            \"x\": 1713,\n            \"y\": 1135,\n            \"parent\": [\n                \"74\"\n            ],\n            \"parentType\": \"Piste\",\n            \"lat\": 63.40325352435862,\n            \"lng\": 13.082742139390593,\n            \"note\": \"right curve\"\n        },\n        {\n            \"x\": 1593,\n            \"y\": 678,\n            \"parent\": [\n                \"82\",\n                \"77\"\n            ],\n            \"parentType\": \"Piste\",\n            \"lat\": 63.41141438991725,\n            \"lng\": 13.081805336432545,\n            \"note\": \"intersect\"\n        },\n        {\n            \"x\": 1724,\n            \"y\": 748,\n            \"parent\": [\n                \"77\",\n                \"Å31\"\n            ],\n            \"parentType\": \"Piste\",\n            \"lat\": 63.410107192485995,\n            \"lng\": 13.088796597796456,\n            \"note\": \"intersect\"\n        },\n        {\n            \"x\": 1660,\n            \"y\": 712,\n            \"parent\": [\n                \"77\"\n            ],\n            \"parentType\": \"Piste\",\n            \"lat\": 63.41074208416265,\n            \"lng\": 13.086202246407819,\n            \"note\": \"halfway\"\n        },\n        {\n            \"x\": 1799,\n            \"y\": 846,\n            \"parent\": [\n                \"77\",\n                \"75\"\n            ],\n            \"parentType\": \"Piste\",\n            \"lat\": 63.41074208416265,\n            \"lng\": 13.086202246407819,\n            \"note\": \"intersect\"\n        },\n        {\n            \"x\": 1803,\n            \"y\": 857,\n            \"parent\": [\n                \"47\",\n                \"77\"\n            ],\n            \"parentType\": \"Piste\",\n            \"lat\": 63.40794841520704,\n            \"lng\": 13.089485483256333,\n            \"note\": \"intersect\"\n        },\n        {\n            \"x\": 1799,\n            \"y\": 848,\n            \"parent\": [\n                \"77\",\n                \"75\"\n            ],\n            \"parentType\": \"Piste\",\n            \"lat\": 63.40794655677759,\n            \"lng\": 13.089484327019866\n        },\n        {\n            \"x\": 1783,\n            \"y\": 806,\n            \"parent\": [\n                \"77\",\n                \"76A\"\n            ],\n            \"parentType\": \"Piste\",\n            \"lat\": 63.409048725221325,\n            \"lng\": 13.089496224602465,\n            \"note\": \"intersect\"\n        },\n        {\n            \"x\": 1911,\n            \"y\": 888,\n            \"parent\": [\n                \"76A\"\n            ],\n            \"parentType\": \"Piste\",\n            \"lat\": 63.406207918379074,\n            \"lng\": 13.093178090335721,\n            \"note\": \"right curve \"\n        },\n        {\n            \"x\": 1826,\n            \"y\": 798,\n            \"parent\": [\n                \"76B\"\n            ],\n            \"parentType\": \"Piste\",\n            \"lat\": 63.408887601375156,\n            \"lng\": 13.091374787375084,\n            \"note\": \"right curve\"\n        },\n        {\n            \"x\": 1850,\n            \"y\": 876,\n            \"parent\": [\n                \"75\"\n            ],\n            \"parentType\": \"Piste\",\n            \"lat\": 63.40697255991824,\n            \"lng\": 13.09073973449868\n        },\n        {\n            \"x\": 1744,\n            \"y\": 805,\n            \"parent\": [\n                \"73B\",\n                \"74\",\n                \"79\"\n            ],\n            \"parentType\": \"Piste\",\n            \"lat\": 63.409217491352855,\n            \"lng\": 13.08756490012628,\n            \"note\": \"intersect\"\n        },\n        {\n            \"x\": 1668,\n            \"y\": 753,\n            \"parent\": [\n                \"79\"\n            ],\n            \"parentType\": \"Piste\",\n            \"lat\": 63.40981836840784,\n            \"lng\": 13.085673890119137\n        },\n        {\n            \"x\": 1265,\n            \"y\": 730,\n            \"parent\": [\n                \"47\",\n                \"58A\",\n                \"78\"\n            ],\n            \"parentType\": \"Piste\",\n            \"lat\": 63.41240847351058,\n            \"lng\": 13.070733838733032,\n            \"note\": \"intersect\"\n        },\n        {\n            \"x\": 1514,\n            \"y\": 723,\n            \"parent\": [\n                \"78\"\n            ],\n            \"parentType\": \"Piste\",\n            \"lat\": 63.410927210874746,\n            \"lng\": 13.079786324436714,\n            \"note\": \"right curve \"\n        },\n        {\n            \"x\": 1404,\n            \"y\": 724,\n            \"parent\": [\n                \"78\",\n                \"Å29\"\n            ],\n            \"parentType\": \"Piste\",\n            \"lat\": 63.41140426223972,\n            \"lng\": 13.077405415326288\n        },\n        {\n            \"x\": 1303,\n            \"y\": 722,\n            \"parent\": [\n                \"78\"\n            ],\n            \"parentType\": \"Piste\",\n            \"lat\": 63.41252260526075,\n            \"lng\": 13.072302204207604\n        },\n        {\n            \"x\": 1201,\n            \"y\": 756,\n            \"parent\": [\n                \"57\"\n            ],\n            \"parentType\": \"Piste\",\n            \"lat\": 63.41272062137,\n            \"lng\": 13.067273578562157,\n            \"note\": \"right curve\"\n        },\n        {\n            \"x\": 600,\n            \"y\": 703,\n            \"parent\": [\n                \"46\",\n                \"51\",\n                \"52\"\n            ],\n            \"parentType\": \"Piste\",\n            \"lat\": 63.41713858355981,\n            \"lng\": 13.046039746943151,\n            \"note\": \"intersect\"\n        },\n        {\n            \"x\": 536,\n            \"y\": 820,\n            \"parent\": [\n                \"51\"\n            ],\n            \"parentType\": \"Piste\",\n            \"lat\": 63.41350087402151,\n            \"lng\": 13.044043076400968\n        },\n        {\n            \"x\": 612,\n            \"y\": 886,\n            \"parent\": [\n                \"52\",\n                \"51\",\n                \"53\"\n            ],\n            \"parentType\": \"Piste\",\n            \"lat\": 63.41225242664772,\n            \"lng\": 13.045994002290925,\n            \"note\": \"intersect\"\n        },\n        {\n            \"x\": 691,\n            \"y\": 767,\n            \"parent\": [\n                \"53\",\n                \"54\"\n            ],\n            \"parentType\": \"Piste\",\n            \"lat\": 63.416065017248116,\n            \"lng\": 13.049410074103388,\n            \"note\": \"intersect\"\n        },\n        {\n            \"x\": 546,\n            \"y\": 819,\n            \"parent\": [\n                \"52\"\n            ],\n            \"parentType\": \"Piste\",\n            \"lat\": 63.413891094853724,\n            \"lng\": 13.044700676674962,\n            \"note\": \"left curve\"\n        },\n        {\n            \"x\": 619,\n            \"y\": 801,\n            \"parent\": [\n                \"53\"\n            ],\n            \"parentType\": \"Piste\",\n            \"lat\": 63.41384735418572,\n            \"lng\": 13.047315853447778,\n            \"note\": \"left curve\"\n        },\n        {\n            \"x\": 739,\n            \"y\": 932,\n            \"parent\": [\n                \"54\"\n            ],\n            \"parentType\": \"Piste\",\n            \"lat\": 63.41145533073764,\n            \"lng\": 13.050852520020019,\n            \"note\": \"right curve \"\n        },\n        {\n            \"x\": 665,\n            \"y\": 786,\n            \"parent\": [\n                \"53\",\n                \"Å21\"\n            ],\n            \"parentType\": \"Piste\",\n            \"lat\": 63.41408100628351,\n            \"lng\": 13.048236135798582,\n            \"note\": \"intersect\"\n        },\n        {\n            \"x\": 730,\n            \"y\": 854,\n            \"parent\": [\n                \"54\",\n                \"50\"\n            ],\n            \"parentType\": \"Piste\",\n            \"lat\": 63.41408100628351,\n            \"lng\": 13.048236135798582,\n            \"note\": \"intersect\"\n        },\n        {\n            \"x\": 289,\n            \"y\": 704,\n            \"parent\": [\n                \"37\"\n            ],\n            \"parentType\": \"Piste\",\n            \"lat\": 63.418189683512004,\n            \"lng\": 13.035752064021441,\n            \"note\": \"left curve\"\n        },\n        {\n            \"x\": 311,\n            \"y\": 729,\n            \"parent\": [\n                \"37\"\n            ],\n            \"parentType\": \"Piste\",\n            \"lat\": 63.417612975726264,\n            \"lng\": 13.03634555771635,\n            \"note\": \"right curve\"\n        },\n        {\n            \"x\": 271,\n            \"y\": 769,\n            \"parent\": [\n                \"37\"\n            ],\n            \"parentType\": \"Piste\",\n            \"lat\": 63.41653588111302,\n            \"lng\": 13.036005793023131,\n            \"note\": \"left curve \"\n        },\n        {\n            \"x\": 267,\n            \"y\": 893,\n            \"parent\": [\n                \"ÅR1\"\n            ],\n            \"parentType\": \"Piste\",\n            \"lat\": 63.41342983212808,\n            \"lng\": 13.036755524845155,\n            \"note\": \"bottom\"\n        },\n        {\n            \"x\": 270,\n            \"y\": 842,\n            \"parent\": [\n                \"ÅR1\"\n            ],\n            \"parentType\": \"Piste\",\n            \"lat\": 63.414009640226496,\n            \"lng\": 13.036241623392124,\n            \"note\": \"top\"\n        },\n        {\n            \"x\": 1041,\n            \"y\": 1081,\n            \"parent\": [\n                \"57\"\n            ],\n            \"parentType\": \"Piste\",\n            \"lat\": 63.40761932107776,\n            \"lng\": 13.059523683699306,\n            \"note\": \"left curve \"\n        },\n        {\n            \"x\": 1094,\n            \"y\": 954,\n            \"parent\": [\n                \"58B\",\n                \"57\",\n                \"Å22\"\n            ],\n            \"parentType\": \"Piste\",\n            \"lat\": 63.40971446346589,\n            \"lng\": 13.061763721298956,\n            \"note\": \"intersect\"\n        },\n        {\n            \"x\": 1163,\n            \"y\": 842,\n            \"parent\": [\n                \"50\",\n                \"57\"\n            ],\n            \"parentType\": \"Piste\",\n            \"lat\": 63.41096192207126,\n            \"lng\": 13.064618176757156\n        },\n        {\n            \"x\": 1952,\n            \"y\": 965,\n            \"parent\": [\n                \"101\"\n            ],\n            \"parentType\": \"Piste\",\n            \"lat\": 63.40336098660835,\n            \"lng\": 13.092268085788046,\n            \"note\": \"right curve\"\n        },\n        {\n            \"x\": 1912,\n            \"y\": 1030,\n            \"parent\": [\n                \"101\"\n            ],\n            \"parentType\": \"Piste\",\n            \"lat\": 63.40234186343711,\n            \"lng\": 13.090406431001638,\n            \"note\": \"left curve\"\n        },\n        {\n            \"x\": 2032,\n            \"y\": 994,\n            \"parent\": [\n                \"102C\"\n            ],\n            \"parentType\": \"Piste\",\n            \"lat\": 63.40257151003498,\n            \"lng\": 13.095100588011537,\n            \"note\": \"right curve bottom\"\n        },\n        {\n            \"x\": 1192,\n            \"y\": 851,\n            \"parent\": [],\n            \"parentType\": \"Terrain\",\n            \"lat\": 63.4106718271936,\n            \"lng\": 13.065661729192101\n        },\n        {\n            \"x\": 1180,\n            \"y\": 860,\n            \"parent\": [],\n            \"parentType\": \"Terrain\",\n            \"lat\": 63.410614556184115,\n            \"lng\": 13.065165489495087\n        },\n        {\n            \"x\": 1125,\n            \"y\": 883,\n            \"parent\": [],\n            \"parentType\": \"Terrain\",\n            \"lat\": 63.41017009263206,\n            \"lng\": 13.063362374809566\n        },\n        {\n            \"x\": 1114,\n            \"y\": 922,\n            \"parent\": [],\n            \"parentType\": \"Terrain\",\n            \"lat\": 63.40978012726712,\n            \"lng\": 13.062804501770362\n        },\n        {\n            \"x\": 1493,\n            \"y\": 1040,\n            \"parent\": [],\n            \"parentType\": \"Terrain\",\n            \"lat\": 63.40479933635118,\n            \"lng\": 13.076325847083528\n        },\n        {\n            \"x\": 1434,\n            \"y\": 845,\n            \"parent\": [],\n            \"parentType\": \"Terrain\",\n            \"lat\": 63.40836274744978,\n            \"lng\": 13.076799029330232\n        },\n        {\n            \"x\": 1393,\n            \"y\": 823,\n            \"parent\": [],\n            \"parentType\": \"Terrain\",\n            \"lat\": 63.40919979553521,\n            \"lng\": 13.07640073768073\n        },\n        {\n            \"x\": 1296,\n            \"y\": 837,\n            \"parent\": [],\n            \"parentType\": \"Terrain\",\n            \"lat\": 63.40969398685661,\n            \"lng\": 13.071174392691626\n        },\n        {\n            \"x\": 1316,\n            \"y\": 996,\n            \"parent\": [],\n            \"parentType\": \"Terrain\",\n            \"lat\": 63.40692906306317,\n            \"lng\": 13.069430696845314\n        },\n        {\n            \"x\": 1118,\n            \"y\": 946,\n            \"parent\": [],\n            \"parentType\": \"Terrain\",\n            \"lat\": 63.409297557178924,\n            \"lng\": 13.062930195661897\n        },\n        {\n            \"x\": 1499,\n            \"y\": 1059,\n            \"parent\": [],\n            \"parentType\": \"Terrain\",\n            \"lat\": 63.404521443429104,\n            \"lng\": 13.076364439916496\n        },\n        {\n            \"x\": 1508,\n            \"y\": 1093,\n            \"parent\": [],\n            \"parentType\": \"Terrain\",\n            \"lat\": 63.40419828148309,\n            \"lng\": 13.076359033584595\n        },\n        {\n            \"x\": 1169,\n            \"y\": 1102,\n            \"parent\": [],\n            \"parentType\": \"Terrain\",\n            \"lat\": 63.405775236407514,\n            \"lng\": 13.060222864151001\n        },\n        {\n            \"x\": 1180,\n            \"y\": 1011,\n            \"parent\": [],\n            \"parentType\": \"Terrain\",\n            \"lat\": 63.406603210915506,\n            \"lng\": 13.060609102249146\n        },\n        {\n            \"x\": 1278,\n            \"y\": 1005,\n            \"parent\": [],\n            \"parentType\": \"Terrain\",\n            \"lat\": 63.406883649685945,\n            \"lng\": 13.068290948867798\n        },\n        {\n            \"x\": 1122,\n            \"y\": 1154,\n            \"parent\": [],\n            \"parentType\": \"Terrain\",\n            \"lat\": 63.40514052344367,\n            \"lng\": 13.060024480362085\n        },\n        {\n            \"x\": 1257,\n            \"y\": 1169,\n            \"parent\": [],\n            \"parentType\": \"Terrain\",\n            \"lat\": 63.40458936977376,\n            \"lng\": 13.064185405672347\n        },\n        {\n            \"x\": 1608,\n            \"y\": 1088,\n            \"parent\": [],\n            \"parentType\": \"Terrain\",\n            \"lat\": 63.4039918723127,\n            \"lng\": 13.078562194917085\n        },\n        {\n            \"x\": 1569,\n            \"y\": 1101,\n            \"parent\": [],\n            \"parentType\": \"Terrain\",\n            \"lat\": 63.40425599440898,\n            \"lng\": 13.077532226655366\n        },\n        {\n            \"x\": 1592,\n            \"y\": 1144,\n            \"parent\": [],\n            \"parentType\": \"Terrain\",\n            \"lat\": 63.402686236245174,\n            \"lng\": 13.077221090409639\n        },\n        {\n            \"x\": 1582,\n            \"y\": 1140,\n            \"parent\": [],\n            \"parentType\": \"Terrain\",\n            \"lat\": 63.402773167917076,\n            \"lng\": 13.07695823392618\n        },\n        {\n            \"x\": 1376,\n            \"y\": 769,\n            \"parent\": [],\n            \"parentType\": \"Terrain\",\n            \"lat\": 63.41004905929894,\n            \"lng\": 13.076380740195663\n        },\n        {\n            \"x\": 1278,\n            \"y\": 743,\n            \"parent\": [],\n            \"parentType\": \"Terrain\",\n            \"lat\": 63.412095664472105,\n            \"lng\": 13.07095731356755\n        },\n        {\n            \"x\": 1191,\n            \"y\": 830,\n            \"parent\": [],\n            \"parentType\": \"Terrain\",\n            \"lat\": 63.410839412669276,\n            \"lng\": 13.06621516802922\n        },\n        {\n            \"x\": 1382,\n            \"y\": 802,\n            \"parent\": [],\n            \"parentType\": \"Terrain\",\n            \"lat\": 63.409410471561664,\n            \"lng\": 13.076509393635844\n        },\n        {\n            \"x\": 990,\n            \"y\": 757,\n            \"parent\": [],\n            \"parentType\": \"Terrain\",\n            \"lat\": 63.41460845731158,\n            \"lng\": 13.061971137613519\n        },\n        {\n            \"x\": 1008,\n            \"y\": 842,\n            \"parent\": [],\n            \"parentType\": \"Terrain\",\n            \"lat\": 63.412010678503265,\n            \"lng\": 13.060066769212945\n        },\n        {\n            \"x\": 1008,\n            \"y\": 832,\n            \"parent\": [],\n            \"parentType\": \"Terrain\",\n            \"lat\": 63.412329479383864,\n            \"lng\": 13.060517380327447\n        },\n        {\n            \"x\": 916,\n            \"y\": 842,\n            \"parent\": [],\n            \"parentType\": \"Terrain\",\n            \"lat\": 63.41276074115119,\n            \"lng\": 13.05736060083528\n        },\n        {\n            \"x\": 934,\n            \"y\": 793,\n            \"parent\": [],\n            \"parentType\": \"Terrain\",\n            \"lat\": 63.413780579713986,\n            \"lng\": 13.059678029424147\n        },\n        {\n            \"x\": 973,\n            \"y\": 807,\n            \"parent\": [],\n            \"parentType\": \"Terrain\",\n            \"lat\": 63.413035267583695,\n            \"lng\": 13.059806775456861\n        },\n        {\n            \"x\": 1088,\n            \"y\": 725,\n            \"parent\": [],\n            \"parentType\": \"Terrain\",\n            \"lat\": 63.413912971122905,\n            \"lng\": 13.065261358266968\n        },\n        {\n            \"x\": 1181,\n            \"y\": 763,\n            \"parent\": [],\n            \"parentType\": \"Terrain\",\n            \"lat\": 63.4127988647659,\n            \"lng\": 13.067122811323303\n        },\n        {\n            \"x\": 1142,\n            \"y\": 835,\n            \"parent\": [],\n            \"parentType\": \"Terrain\",\n            \"lat\": 63.411399464994865,\n            \"lng\": 13.06472491646399\n        },\n        {\n            \"x\": 1089,\n            \"y\": 838,\n            \"parent\": [],\n            \"parentType\": \"Terrain\",\n            \"lat\": 63.41156027611112,\n            \"lng\": 13.062348479276794\n        },\n        {\n            \"x\": 1077,\n            \"y\": 735,\n            \"parent\": [],\n            \"parentType\": \"Terrain\",\n            \"lat\": 63.41359613851987,\n            \"lng\": 13.063335532194275\n        },\n        {\n            \"x\": 1060,\n            \"y\": 746,\n            \"parent\": [],\n            \"parentType\": \"Terrain\",\n            \"lat\": 63.41372520152482,\n            \"lng\": 13.062643522268433\n        },\n        {\n            \"x\": 1028,\n            \"y\": 785,\n            \"parent\": [],\n            \"parentType\": \"Terrain\",\n            \"lat\": 63.41321809930081,\n            \"lng\": 13.061613554006714\n        },\n        {\n            \"x\": 1057,\n            \"y\": 842,\n            \"parent\": [],\n            \"parentType\": \"Terrain\",\n            \"lat\": 63.41174867888928,\n            \"lng\": 13.06144189262976\n        },\n        {\n            \"x\": 1071,\n            \"y\": 842,\n            \"parent\": [],\n            \"parentType\": \"Terrain\",\n            \"lat\": 63.41166798322726,\n            \"lng\": 13.061892503744263\n        },\n        {\n            \"x\": 874,\n            \"y\": 825,\n            \"parent\": [],\n            \"parentType\": \"Terrain\",\n            \"lat\": 63.41311084363748,\n            \"lng\": 13.056397048064028\n        },\n        {\n            \"x\": 996,\n            \"y\": 698,\n            \"parent\": [],\n            \"parentType\": \"Terrain\",\n            \"lat\": 63.41515436072497,\n            \"lng\": 13.06034525973395\n        },\n        {\n            \"x\": 672,\n            \"y\": 714,\n            \"parent\": [],\n            \"parentType\": \"Terrain\",\n            \"lat\": 63.41687730399193,\n            \"lng\": 13.04795545033547\n        },\n        {\n            \"x\": 909,\n            \"y\": 760,\n            \"parent\": [],\n            \"parentType\": \"Terrain\",\n            \"lat\": 63.41420581314309,\n            \"lng\": 13.058298048296896\n        },\n        {\n            \"x\": 798,\n            \"y\": 779,\n            \"parent\": [],\n            \"parentType\": \"Terrain\",\n            \"lat\": 63.41474350725639,\n            \"lng\": 13.053352054873434\n        },\n        {\n            \"x\": 872,\n            \"y\": 844,\n            \"parent\": [],\n            \"parentType\": \"Terrain\",\n            \"lat\": 63.41264804129868,\n            \"lng\": 13.055967098945759\n        },\n        {\n            \"x\": 760,\n            \"y\": 849,\n            \"parent\": [],\n            \"parentType\": \"Terrain\",\n            \"lat\": 63.41272291951955,\n            \"lng\": 13.051975971931599\n        },\n        {\n            \"x\": 739,\n            \"y\": 767,\n            \"parent\": [],\n            \"parentType\": \"Terrain\",\n            \"lat\": 63.41546551848495,\n            \"lng\": 13.050388104194782\n        },\n        {\n            \"x\": 873,\n            \"y\": 861,\n            \"parent\": [],\n            \"parentType\": \"Terrain\",\n            \"lat\": 63.41232187233887,\n            \"lng\": 13.055318004364155\n        },\n        {\n            \"x\": 759,\n            \"y\": 866,\n            \"parent\": [],\n            \"parentType\": \"Terrain\",\n            \"lat\": 63.412354784639604,\n            \"lng\": 13.0511778450186\n        },\n        {\n            \"x\": 633,\n            \"y\": 989,\n            \"parent\": [],\n            \"parentType\": \"Terrain\",\n            \"lat\": 63.409674830523976,\n            \"lng\": 13.049185112405878\n        },\n        {\n            \"x\": 758,\n            \"y\": 930,\n            \"parent\": [],\n            \"parentType\": \"Terrain\",\n            \"lat\": 63.411414811581416,\n            \"lng\": 13.051305485787354\n        },\n        {\n            \"x\": 929,\n            \"y\": 1143,\n            \"parent\": [],\n            \"parentType\": \"Terrain\",\n            \"lat\": 63.407403992475146,\n            \"lng\": 13.055356284529513\n        },\n        {\n            \"x\": 927,\n            \"y\": 990,\n            \"parent\": [],\n            \"parentType\": \"Terrain\",\n            \"lat\": 63.41010957648907,\n            \"lng\": 13.056192833939777\n        },\n        {\n            \"x\": 919,\n            \"y\": 1017,\n            \"parent\": [],\n            \"parentType\": \"Terrain\",\n            \"lat\": 63.40913385249782,\n            \"lng\": 13.056192614912101\n        },\n        {\n            \"x\": 890,\n            \"y\": 1062,\n            \"parent\": [],\n            \"parentType\": \"Terrain\",\n            \"lat\": 63.40830706838928,\n            \"lng\": 13.05530160494753\n        },\n        {\n            \"x\": 755,\n            \"y\": 1018,\n            \"parent\": [],\n            \"parentType\": \"Terrain\",\n            \"lat\": 63.40928991147409,\n            \"lng\": 13.052920130057801\n        },\n        {\n            \"x\": 671,\n            \"y\": 1042,\n            \"parent\": [],\n            \"parentType\": \"Terrain\",\n            \"lat\": 63.4080304601011,\n            \"lng\": 13.053070333762635\n        },\n        {\n            \"x\": 920,\n            \"y\": 865,\n            \"parent\": [],\n            \"parentType\": \"Terrain\",\n            \"lat\": 63.412172806873706,\n            \"lng\": 13.057560351653565\n        },\n        {\n            \"x\": 996,\n            \"y\": 890,\n            \"parent\": [],\n            \"parentType\": \"Terrain\",\n            \"lat\": 63.410956486811564,\n            \"lng\": 13.05943650830824\n        },\n        {\n            \"x\": 1001,\n            \"y\": 860,\n            \"parent\": [],\n            \"parentType\": \"Terrain\",\n            \"lat\": 63.41176682961544,\n            \"lng\": 13.059822746406384\n        },\n        {\n            \"x\": 998,\n            \"y\": 874,\n            \"parent\": [],\n            \"parentType\": \"Terrain\",\n            \"lat\": 63.41127623450801,\n            \"lng\": 13.059564936339049\n        },\n        {\n            \"x\": 961,\n            \"y\": 860,\n            \"parent\": [],\n            \"parentType\": \"Terrain\",\n            \"lat\": 63.41203854913617,\n            \"lng\": 13.058567154585509\n        },\n        {\n            \"x\": 1049,\n            \"y\": 860,\n            \"parent\": [],\n            \"parentType\": \"Terrain\",\n            \"lat\": 63.411490830261684,\n            \"lng\": 13.061168897329955\n        },\n        {\n            \"x\": 1073,\n            \"y\": 860,\n            \"parent\": [],\n            \"parentType\": \"Terrain\",\n            \"lat\": 63.411417599518714,\n            \"lng\": 13.061855542837767\n        },\n        {\n            \"x\": 1074,\n            \"y\": 903,\n            \"parent\": [],\n            \"parentType\": \"Terrain\",\n            \"lat\": 63.41055127164045,\n            \"lng\": 13.061340558706908\n        },\n        {\n            \"x\": 1035,\n            \"y\": 887,\n            \"parent\": [],\n            \"parentType\": \"Terrain\",\n            \"lat\": 63.41086723749023,\n            \"lng\": 13.060739743887572\n        },\n        {\n            \"x\": 1055,\n            \"y\": 988,\n            \"parent\": [],\n            \"parentType\": \"Terrain\",\n            \"lat\": 63.40897874389556,\n            \"lng\": 13.06052516716638\n        },\n        {\n            \"x\": 1031,\n            \"y\": 1056,\n            \"parent\": [],\n            \"parentType\": \"Terrain\",\n            \"lat\": 63.40751276453706,\n            \"lng\": 13.058937299429564\n        },\n        {\n            \"x\": 1031,\n            \"y\": 1021,\n            \"parent\": [],\n            \"parentType\": \"Terrain\",\n            \"lat\": 63.408263549159535,\n            \"lng\": 13.059212115230281\n        },\n        {\n            \"x\": 1051,\n            \"y\": 1013,\n            \"parent\": [],\n            \"parentType\": \"Terrain\",\n            \"lat\": 63.408334594969574,\n            \"lng\": 13.059705111444252\n        },\n        {\n            \"x\": 1104,\n            \"y\": 996,\n            \"parent\": [],\n            \"parentType\": \"Terrain\",\n            \"lat\": 63.40906514805469,\n            \"lng\": 13.061749451460445\n        },\n        {\n            \"x\": 1059,\n            \"y\": 1124,\n            \"parent\": [],\n            \"parentType\": \"Terrain\",\n            \"lat\": 63.407017642016704,\n            \"lng\": 13.059882379779623\n        },\n        {\n            \"x\": 1125,\n            \"y\": 1095,\n            \"parent\": [],\n            \"parentType\": \"Terrain\",\n            \"lat\": 63.407352632488404,\n            \"lng\": 13.061513162860678\n        },\n        {\n            \"x\": 1132,\n            \"y\": 1022,\n            \"parent\": [],\n            \"parentType\": \"Terrain\",\n            \"lat\": 63.40822596066718,\n            \"lng\": 13.062119342098043\n        },\n        {\n            \"x\": 1085,\n            \"y\": 1008,\n            \"parent\": [],\n            \"parentType\": \"Terrain\",\n            \"lat\": 63.408219957470926,\n            \"lng\": 13.060628033885763\n        },\n        {\n            \"x\": 1110,\n            \"y\": 1105,\n            \"parent\": [],\n            \"parentType\": \"Terrain\",\n            \"lat\": 63.407236616965946,\n            \"lng\": 13.060751415500448\n        },\n        {\n            \"x\": 994,\n            \"y\": 1139,\n            \"parent\": [],\n            \"parentType\": \"Terrain\",\n            \"lat\": 63.40693284318091,\n            \"lng\": 13.057318187961386\n        },\n        {\n            \"x\": 942,\n            \"y\": 1068,\n            \"parent\": [],\n            \"parentType\": \"Terrain\",\n            \"lat\": 63.40831480782476,\n            \"lng\": 13.056567169437216\n        },\n        {\n            \"x\": 983,\n            \"y\": 986,\n            \"parent\": [],\n            \"parentType\": \"Terrain\",\n            \"lat\": 63.40957184554607,\n            \"lng\": 13.057543493518637\n        },\n        {\n            \"x\": 1023,\n            \"y\": 978,\n            \"parent\": [],\n            \"parentType\": \"Terrain\",\n            \"lat\": 63.40933532976252,\n            \"lng\": 13.059120632419393\n        },\n        {\n            \"x\": 994,\n            \"y\": 1029,\n            \"parent\": [],\n            \"parentType\": \"Terrain\",\n            \"lat\": 63.40791540617246,\n            \"lng\": 13.058101392993734\n        },\n        {\n            \"x\": 975,\n            \"y\": 1131,\n            \"parent\": [],\n            \"parentType\": \"Terrain\",\n            \"lat\": 63.40716018604356,\n            \"lng\": 13.056899763355062\n        },\n        {\n            \"x\": 1722,\n            \"y\": 492,\n            \"parent\": [],\n            \"parentType\": \"Terrain\",\n            \"lat\": 63.419787153717046,\n            \"lng\": 13.101471527141987\n        },\n        {\n            \"x\": 1419,\n            \"y\": 600,\n            \"parent\": [],\n            \"parentType\": \"Terrain\",\n            \"lat\": 63.41746658423159,\n            \"lng\": 13.082963751629512\n        },\n        {\n            \"x\": 1240,\n            \"y\": 309,\n            \"parent\": [],\n            \"parentType\": \"Terrain\",\n            \"lat\": 63.42665589301256,\n            \"lng\": 13.077449129894893\n        },\n        {\n            \"x\": 1265,\n            \"y\": 316,\n            \"parent\": [],\n            \"parentType\": \"Terrain\",\n            \"lat\": 63.42630642945518,\n            \"lng\": 13.078736590222041\n        },\n        {\n            \"x\": 1252,\n            \"y\": 714,\n            \"parent\": [],\n            \"parentType\": \"Terrain\",\n            \"lat\": 63.412871641910414,\n            \"lng\": 13.070904539898555\n        },\n        {\n            \"x\": 1260,\n            \"y\": 688,\n            \"parent\": [],\n            \"parentType\": \"Terrain\",\n            \"lat\": 63.41321346648585,\n            \"lng\": 13.072192000225703\n        },\n        {\n            \"x\": 1297,\n            \"y\": 660,\n            \"parent\": [],\n            \"parentType\": \"Terrain\",\n            \"lat\": 63.41317115128529,\n            \"lng\": 13.075110243633906\n        },\n        {\n            \"x\": 1341,\n            \"y\": 559,\n            \"parent\": [],\n            \"parentType\": \"Terrain\",\n            \"lat\": 63.41464809490181,\n            \"lng\": 13.077427672222774\n        },\n        {\n            \"x\": 1061,\n            \"y\": 577,\n            \"parent\": [],\n            \"parentType\": \"Terrain\",\n            \"lat\": 63.41817789757438,\n            \"lng\": 13.066355443990307\n        },\n        {\n            \"x\": 1094,\n            \"y\": 623,\n            \"parent\": [],\n            \"parentType\": \"Terrain\",\n            \"lat\": 63.416791306995975,\n            \"lng\": 13.066140867269116\n        },\n        {\n            \"x\": 1084,\n            \"y\": 629,\n            \"parent\": [\n                \"59\"\n            ],\n            \"parentType\": \"Piste\",\n            \"lat\": 63.416830069902694,\n            \"lng\": 13.06567732015914,\n            \"note\": \"right curve \"\n        },\n        {\n            \"x\": 1111,\n            \"y\": 676,\n            \"parent\": [\n                \"59\"\n            ],\n            \"parentType\": \"Terrain\",\n            \"lat\": 63.41584571607899,\n            \"lng\": 13.06597888469696\n        },\n        {\n            \"x\": 1321,\n            \"y\": 665,\n            \"parent\": [\n                \"59\"\n            ],\n            \"parentType\": \"Terrain\",\n            \"lat\": 63.412907594456904,\n            \"lng\": 13.075608015060425\n        },\n        {\n            \"x\": 1275,\n            \"y\": 721,\n            \"parent\": [\n                \"59\"\n            ],\n            \"parentType\": \"Terrain\",\n            \"lat\": 63.412627102042556,\n            \"lng\": 13.072453737258911\n        },\n        {\n            \"x\": 1541,\n            \"y\": 699,\n            \"parent\": [\n                \"59\"\n            ],\n            \"parentType\": \"Terrain\",\n            \"lat\": 63.41113460530437,\n            \"lng\": 13.081001277461262\n        },\n        {\n            \"x\": 1942,\n            \"y\": 894,\n            \"parent\": [\n                \"59\"\n            ],\n            \"parentType\": \"Terrain\",\n            \"lat\": 63.405644113888414,\n            \"lng\": 13.095206256404133\n        },\n        {\n            \"x\": 2249,\n            \"y\": 636,\n            \"parent\": [\n                \"59\"\n            ],\n            \"parentType\": \"Terrain\",\n            \"lat\": 63.40916328804365,\n            \"lng\": 13.112458224787922\n        },\n        {\n            \"x\": 2049,\n            \"y\": 929,\n            \"parent\": [\n                \"59\"\n            ],\n            \"parentType\": \"Terrain\",\n            \"lat\": 63.40282173131638,\n            \"lng\": 13.095665891047878\n        },\n        {\n            \"x\": 2141,\n            \"y\": 869,\n            \"parent\": [\n                \"59\"\n            ],\n            \"parentType\": \"Terrain\",\n            \"lat\": 63.40399735440244,\n            \"lng\": 13.103261906978053\n        },\n        {\n            \"x\": 1965,\n            \"y\": 1092,\n            \"parent\": [\n                \"59\"\n            ],\n            \"parentType\": \"Terrain\",\n            \"lat\": 63.400715336171295,\n            \"lng\": 13.090086896296901\n        },\n        {\n            \"x\": 2238,\n            \"y\": 1217,\n            \"parent\": [\n                \"59\"\n            ],\n            \"parentType\": \"Terrain\",\n            \"lat\": 63.394712321276735,\n            \"lng\": 13.096647262573242\n        },\n        {\n            \"x\": 1964,\n            \"y\": 1134,\n            \"parent\": [\n                \"59\"\n            ],\n            \"parentType\": \"Terrain\",\n            \"lat\": 63.400159268009965,\n            \"lng\": 13.08921217918396\n        },\n        {\n            \"x\": 2300,\n            \"y\": 1182,\n            \"parent\": [\n                \"59\"\n            ],\n            \"parentType\": \"Terrain\",\n            \"lat\": 63.39833342494399,\n            \"lng\": 13.094049690533737\n        },\n        {\n            \"x\": 2085,\n            \"y\": 1106,\n            \"parent\": [\n                \"59\"\n            ],\n            \"parentType\": \"Terrain\",\n            \"lat\": 63.39975153349091,\n            \"lng\": 13.091646431256393\n        },\n        {\n            \"x\": 1312,\n            \"y\": 318,\n            \"parent\": [\n                \"59\"\n            ],\n            \"parentType\": \"Terrain\",\n            \"lat\": 63.427084049141094,\n            \"lng\": 13.081272167844107\n        },\n        {\n            \"x\": 1368,\n            \"y\": 343,\n            \"parent\": [\n                \"59\"\n            ],\n            \"parentType\": \"Terrain\",\n            \"lat\": 63.42494913716325,\n            \"lng\": 13.08693699328356\n        },\n        {\n            \"x\": 1359,\n            \"y\": 479,\n            \"parent\": [\n                \"59\"\n            ],\n            \"parentType\": \"Terrain\",\n            \"lat\": 63.42049071699194,\n            \"lng\": 13.083246273679068\n        },\n        {\n            \"x\": 580,\n            \"y\": 719,\n            \"parent\": [\n                \"59\"\n            ],\n            \"parentType\": \"Terrain\",\n            \"lat\": 63.41690736782309,\n            \"lng\": 13.04520516774716\n        },\n        {\n            \"x\": 376,\n            \"y\": 825,\n            \"parent\": [\n                \"59\"\n            ],\n            \"parentType\": \"Terrain\",\n            \"lat\": 63.41451241772016,\n            \"lng\": 13.038918069816251\n        },\n        {\n            \"x\": 628,\n            \"y\": 917,\n            \"parent\": [\n                \"59\"\n            ],\n            \"parentType\": \"Terrain\",\n            \"lat\": 63.410766456147385,\n            \"lng\": 13.04818241975369\n        },\n        {\n            \"x\": 530,\n            \"y\": 807,\n            \"parent\": [\n                \"59\"\n            ],\n            \"parentType\": \"Terrain\",\n            \"lat\": 63.41405175099032,\n            \"lng\": 13.043343714690824\n        },\n        {\n            \"x\": 619,\n            \"y\": 717,\n            \"parent\": [\n                \"59\"\n            ],\n            \"parentType\": \"Terrain\",\n            \"lat\": 63.416794222861384,\n            \"lng\": 13.046304873443265\n        },\n        {\n            \"x\": 597,\n            \"y\": 861,\n            \"parent\": [\n                \"59\"\n            ],\n            \"parentType\": \"Terrain\",\n            \"lat\": 63.412698534294414,\n            \"lng\": 13.045802805114635\n        },\n        {\n            \"x\": 651,\n            \"y\": 780,\n            \"parent\": [\n                \"59\"\n            ],\n            \"parentType\": \"Terrain\",\n            \"lat\": 63.414211964078625,\n            \"lng\": 13.047862741638072\n        },\n        {\n            \"x\": 640,\n            \"y\": 721,\n            \"parent\": [\n                \"59\"\n            ],\n            \"parentType\": \"Terrain\",\n            \"lat\": 63.4167547243898,\n            \"lng\": 13.047004434753307\n        },\n        {\n            \"x\": 602,\n            \"y\": 812,\n            \"parent\": [\n                \"59\"\n            ],\n            \"parentType\": \"Terrain\",\n            \"lat\": 63.41375476245034,\n            \"lng\": 13.0466611119994\n        },\n        {\n            \"x\": 655,\n            \"y\": 801,\n            \"parent\": [\n                \"59\"\n            ],\n            \"parentType\": \"Terrain\",\n            \"lat\": 63.41355879522772,\n            \"lng\": 13.047862741638072\n        },\n        {\n            \"x\": 624,\n            \"y\": 878,\n            \"parent\": [\n                \"59\"\n            ],\n            \"parentType\": \"Terrain\",\n            \"lat\": 63.412331232838056,\n            \"lng\": 13.046502686607514\n        },\n        {\n            \"x\": 669,\n            \"y\": 865,\n            \"parent\": [\n                \"59\"\n            ],\n            \"parentType\": \"Terrain\",\n            \"lat\": 63.41221403698148,\n            \"lng\": 13.048498250114594\n        },\n        {\n            \"x\": 951,\n            \"y\": 421,\n            \"parent\": [\n                \"59\"\n            ],\n            \"parentType\": \"Terrain\",\n            \"lat\": 63.42835914216771,\n            \"lng\": 13.065950582211125\n        },\n        {\n            \"x\": 925,\n            \"y\": 640,\n            \"parent\": [\n                \"59\"\n            ],\n            \"parentType\": \"Terrain\",\n            \"lat\": 63.419488725748444,\n            \"lng\": 13.055758187954533\n        },\n        {\n            \"x\": 359,\n            \"y\": 548,\n            \"parent\": [\n                \"59\"\n            ],\n            \"parentType\": \"Terrain\",\n            \"lat\": 63.429370963558846,\n            \"lng\": 13.032393951538474\n        },\n        {\n            \"x\": 582,\n            \"y\": 562,\n            \"parent\": [\n                \"59\"\n            ],\n            \"parentType\": \"Terrain\",\n            \"lat\": 63.42763546701358,\n            \"lng\": 13.045783538940817\n        },\n        {\n            \"x\": 106,\n            \"y\": 868,\n            \"parent\": [\n                \"59\"\n            ],\n            \"parentType\": \"Terrain\",\n            \"lat\": 63.4150448737033,\n            \"lng\": 13.027610202093145\n        },\n        {\n            \"x\": 556,\n            \"y\": 969,\n            \"parent\": [\n                \"59\"\n            ],\n            \"parentType\": \"Terrain\",\n            \"lat\": 63.41042434019342,\n            \"lng\": 13.04596724059107\n        },\n        {\n            \"x\": 446,\n            \"y\": 991,\n            \"parent\": [\n                \"59\"\n            ],\n            \"parentType\": \"Terrain\",\n            \"lat\": 63.40944827879488,\n            \"lng\": 13.036633153219244\n        },\n        {\n            \"x\": 615,\n            \"y\": 1025,\n            \"parent\": [\n                \"59\"\n            ],\n            \"parentType\": \"Terrain\",\n            \"lat\": 63.40785745563486,\n            \"lng\": 13.050065655965826\n        },\n        {\n            \"x\": 21,\n            \"y\": 1023,\n            \"parent\": [\n                \"59\"\n            ],\n            \"parentType\": \"Terrain\",\n            \"lat\": 63.407668952251036,\n            \"lng\": 13.026590962667486\n        },\n        {\n            \"x\": 429,\n            \"y\": 1196,\n            \"parent\": [\n                \"59\"\n            ],\n            \"parentType\": \"Terrain\",\n            \"lat\": 63.4057307549421,\n            \"lng\": 13.04071011092188\n        },\n        {\n            \"x\": 700,\n            \"y\": 1183,\n            \"parent\": [\n                \"59\"\n            ],\n            \"parentType\": \"Terrain\",\n            \"lat\": 63.405533629217246,\n            \"lng\": 13.053373253415316\n        },\n        {\n            \"x\": 519,\n            \"y\": 969,\n            \"parent\": [\n                \"59\"\n            ],\n            \"parentType\": \"Terrain\",\n            \"lat\": 63.4103231409226,\n            \"lng\": 13.045621669362276\n        },\n        {\n            \"x\": 914,\n            \"y\": 266,\n            \"parent\": [\n                \"59\"\n            ],\n            \"parentType\": \"Terrain\",\n            \"lat\": 63.447648633011376,\n            \"lng\": 13.070955915533622,\n            \"note\": \"Västerskutan\"\n        },\n        {\n            \"x\": 1440,\n            \"y\": 209,\n            \"parent\": [\n                \"59\"\n            ],\n            \"parentType\": \"Terrain\",\n            \"lat\": 63.43092739532498,\n            \"lng\": 13.093278408050537,\n            \"note\": \"Åreskutan\"\n        },\n        {\n            \"x\": 1823,\n            \"y\": 417,\n            \"parent\": [\n                \"59\"\n            ],\n            \"parentType\": \"Terrain\",\n            \"lat\": 63.420172884557715,\n            \"lng\": 13.110527523876495,\n            \"note\": \"Lillskutan\"\n        },\n        {\n            \"x\": 1145,\n            \"y\": 246,\n            \"parent\": [\n                \"59\"\n            ],\n            \"parentType\": \"Terrain\",\n            \"lat\": 63.4410437011604,\n            \"lng\": 13.09375179565933\n        },\n        {\n            \"x\": 649,\n            \"y\": 707,\n            \"parent\": [\n                \"Å21\",\n                \"48\",\n                \"46\",\n                \"54\"\n            ],\n            \"parentType\": \"Lift\",\n            \"lat\": 63.41691485338856,\n            \"lng\": 13.047247484836685,\n            \"note\": \"top\"\n        },\n        {\n            \"x\": 730,\n            \"y\": 422,\n            \"parent\": [\n                \"H25\",\n                \"83\",\n                \"84\"\n            ],\n            \"parentType\": \"Lift\",\n            \"lat\": 63.436186411058706,\n            \"lng\": 13.063750171248007,\n            \"note\": \"bottom\"\n        },\n        {\n            \"x\": 779,\n            \"y\": 460,\n            \"parent\": [\n                \"H24\",\n                \"84\",\n                \"87\",\n                \"86\"\n            ],\n            \"parentType\": \"Lift\",\n            \"lat\": 63.43275673149308,\n            \"lng\": 13.052910479182822,\n            \"note\": \"top\"\n        },\n        {\n            \"x\": 1044,\n            \"y\": 350,\n            \"parent\": [\n                \"H25\",\n                \"83\"\n            ],\n            \"parentType\": \"Lift\",\n            \"lat\": 63.429118371162204,\n            \"lng\": 13.067902549519394,\n            \"note\": \"top\"\n        },\n        {\n            \"x\": 1565,\n            \"y\": 690,\n            \"parent\": [\n                \"Å32\",\n                \"78\",\n                \"79\"\n            ],\n            \"parentType\": \"Lift\",\n            \"lat\": 63.4113123577683,\n            \"lng\": 13.082956916832584,\n            \"note\": \"top\"\n        },\n        {\n            \"x\": 1368,\n            \"y\": 503,\n            \"parent\": [\n                \"81\",\n                \"80\",\n                \"82\"\n            ],\n            \"parentType\": \"Piste\",\n            \"lat\": 63.41983877848655,\n            \"lng\": 13.082176580701631,\n            \"note\": \"bottom\"\n        },\n        {\n            \"x\": 1240,\n            \"y\": 269,\n            \"parent\": [\n                \"H23\",\n                \"81\",\n                \"60\",\n                \"59\"\n            ],\n            \"parentType\": \"Lift\",\n            \"lat\": 63.42766156294758,\n            \"lng\": 13.077995937113478,\n            \"note\": \"top\"\n        },\n        {\n            \"x\": 61,\n            \"y\": 607,\n            \"parent\": [\n                \"Å14\",\n                \"32\",\n                \"31\",\n                \"33\"\n            ],\n            \"parentType\": \"Lift\",\n            \"lat\": 63.43041227213233,\n            \"lng\": 13.01626234486621,\n            \"note\": \"bottom\"\n        },\n        {\n            \"x\": 349,\n            \"y\": 825,\n            \"parent\": [\n                \"Å19\",\n                \"45\",\n                \"46\",\n                \"34\",\n                \"44\"\n            ],\n            \"parentType\": \"Lift\",\n            \"lat\": 63.42532786897293,\n            \"lng\": 13.042984094003275,\n            \"note\": \"top\"\n        },\n        {\n            \"x\": 359,\n            \"y\": 646,\n            \"parent\": [\n                \"42\",\n                \"43\"\n            ],\n            \"parentType\": \"Piste\",\n            \"lat\": 63.42150716231424,\n            \"lng\": 13.03864565687141,\n            \"note\": \"intersect\"\n        },\n        {\n            \"x\": 333,\n            \"y\": 680,\n            \"parent\": [\n                \"Å17\",\n                \"37\"\n            ],\n            \"parentType\": \"Lift\",\n            \"lat\": 63.41937139472147,\n            \"lng\": 13.036954356984308,\n            \"note\": \"top\"\n        },\n        {\n            \"x\": \"338\",\n            \"y\": 554,\n            \"parent\": [\n                \"33\",\n                \"34\",\n                \"36\",\n                \"40\"\n            ],\n            \"parentType\": \"Piste\",\n            \"lat\": 63.42854345628307,\n            \"lng\": 13.031261017694336,\n            \"note\": \"intersect\"\n        },\n        {\n            \"x\": 461,\n            \"y\": 568,\n            \"parent\": [\n                \"Å19\",\n                \"42\",\n                \"47\",\n                \"44\",\n                \"36\"\n            ],\n            \"parentType\": \"Lift\",\n            \"lat\": 63.42532786897293,\n            \"lng\": 13.042984094003275,\n            \"note\": \"top\"\n        },\n        {\n            \"x\": 264,\n            \"y\": 546,\n            \"parent\": [\n                \"33\"\n            ],\n            \"parentType\": \"Piste\",\n            \"lat\": 63.42979557853516,\n            \"lng\": 13.031802549371315,\n            \"note\": \"top\"\n        },\n        {\n            \"x\": 1197,\n            \"y\": 287,\n            \"parent\": [\n                \"H27\",\n                \"35\"\n            ],\n            \"parentType\": \"Lift\",\n            \"lat\": 63.42764388004626,\n            \"lng\": 13.076574048761538,\n            \"note\": \"top\"\n        },\n        {\n            \"x\": 1361,\n            \"y\": 555,\n            \"parent\": [\n                \"82\",\n                \"82B\",\n                \"82A\"\n            ],\n            \"parentType\": \"Piste\",\n            \"lat\": 63.41558521547777,\n            \"lng\": 13.079446376669818,\n            \"note\": \"split\"\n        },\n        {\n            \"x\": 1082,\n            \"y\": 681,\n            \"parent\": [\n                \"47\",\n                \"59\"\n            ],\n            \"parentType\": \"Piste\",\n            \"lat\": 63.41571257934785,\n            \"lng\": 13.065177293399062,\n            \"note\": \"intersect\"\n        },\n        {\n            \"x\": 905,\n            \"y\": 850,\n            \"parent\": [\n                \"48\",\n                \"50\",\n                \"55\"\n            ],\n            \"parentType\": \"Piste\",\n            \"lat\": 63.41251103998558,\n            \"lng\": 13.05683173490483,\n            \"note\": \"intersect\"\n        },\n        {\n            \"x\": 1016,\n            \"y\": 688,\n            \"parent\": [\n                \"H23\",\n                \"48\",\n                \"55\"\n            ],\n            \"parentType\": \"Lift\",\n            \"lat\": 63.41566728873634,\n            \"lng\": 13.062462075526362,\n            \"note\": \"bottom\"\n        },\n        {\n            \"x\": 1489,\n            \"y\": 771,\n            \"parent\": [\n                \"Å30\",\n                \"71B\",\n                \"47\",\n                \"50\"\n            ],\n            \"parentType\": \"Lift\",\n            \"lat\": 63.40911422526361,\n            \"lng\": 13.07926328969112,\n            \"note\": \"topp\"\n        },\n        {\n            \"x\": 1873,\n            \"y\": 837,\n            \"parent\": [\n                \"Å32\",\n                \"76A\",\n                \"76B\",\n                \"47\"\n            ],\n            \"parentType\": \"Lift\",\n            \"lat\": 63.4082746543262,\n            \"lng\": 13.092939418688436,\n            \"note\": \"bottom\"\n        },\n        {\n            \"x\": 1889,\n            \"y\": 1064,\n            \"parent\": [\n                \"Å35\",\n                \"101\",\n                \"102\"\n            ],\n            \"parentType\": \"Lift\",\n            \"lat\": 63.40107502927062,\n            \"lng\": 13.087840282772287,\n            \"note\": \"bottom\"\n        },\n        {\n            \"x\": 1620,\n            \"y\": 1179,\n            \"parent\": [\n                \"Å31\",\n                \"48\",\n                \"71\",\n                \"74\"\n            ],\n            \"parentType\": \"Lift\",\n            \"lat\": 63.402594161205606,\n            \"lng\": 13.0773266910874,\n            \"note\": \"bottom\"\n        },\n        {\n            \"x\": 1728,\n            \"y\": 735,\n            \"parent\": [\n                \"Å31\",\n                \"76B\"\n            ],\n            \"parentType\": \"Lift\",\n            \"lat\": 63.41055698485778,\n            \"lng\": 13.089483752932209,\n            \"note\": \"top\"\n        },\n        {\n            \"x\": 2286,\n            \"y\": 650,\n            \"parent\": [\n                \"Å34\",\n                \"102C\",\n                \"103\",\n                \"105\"\n            ],\n            \"parentType\": \"Lift\",\n            \"lat\": 63.40854933392874,\n            \"lng\": 13.112128219699025,\n            \"note\": \"top\"\n        },\n        {\n            \"x\": 2347,\n            \"y\": 693,\n            \"parent\": [\n                \"Å35\",\n                \"102B\"\n            ],\n            \"parentType\": \"Lift\",\n            \"lat\": 63.40700162531407,\n            \"lng\": 13.112693803807574,\n            \"note\": \"top\"\n        },\n        {\n            \"x\": 1888,\n            \"y\": 928,\n            \"parent\": [\n                \"101\",\n                \"102C\"\n            ],\n            \"parentType\": \"Piste\",\n            \"lat\": 63.40487757965308,\n            \"lng\": 13.091259988379655\n        },\n        {\n            \"x\": 1110,\n            \"y\": 1237,\n            \"parent\": [\n                \"Å22\",\n                \"55\",\n                \"56\",\n                \"57\",\n                \"58B\"\n            ],\n            \"parentType\": \"Lift\",\n            \"lat\": 63.40357744280534,\n            \"lng\": 13.059068209689716,\n            \"note\": \"bottom\"\n        },\n        {\n            \"x\": 697,\n            \"y\": 955,\n            \"parent\": [\n                \"Å21\",\n                \"53\",\n                \"54\"\n            ],\n            \"parentType\": \"Lift\",\n            \"lat\": 63.409785883595866,\n            \"lng\": 13.04977297782898,\n            \"note\": \"bottom\"\n        },\n        {\n            \"x\": 502,\n            \"y\": 508,\n            \"parent\": [\n                \"Å14\",\n                \"32\"\n            ],\n            \"parentType\": \"Lift\",\n            \"lat\": 63.42970265651635,\n            \"lng\": 13.039512087195817,\n            \"note\": \"top\"\n        },\n        {\n            \"x\": 556,\n            \"y\": 507,\n            \"parent\": [\n                \"34\",\n                \"35\"\n            ],\n            \"parentType\": \"Piste\",\n            \"lat\": 63.43040793295748,\n            \"lng\": 13.040870061137753,\n            \"note\": \"top\"\n        },\n        {\n            \"x\": 605,\n            \"y\": 490,\n            \"parent\": [\n                \"H24\",\n                \"86\",\n                \"87\"\n            ],\n            \"parentType\": \"Lift\",\n            \"lat\": 63.43531687461399,\n            \"lng\": 13.043966652970944,\n            \"note\": \"bottom\"\n        },\n        {\n            \"x\": 283,\n            \"y\": \"1361\",\n            \"parent\": [],\n            \"parentType\": \"Terrain\",\n            \"lat\": 63.40238226206975,\n            \"lng\": 13.039241734000147\n        },\n        {\n            \"x\": 2180,\n            \"y\": 1414,\n            \"parent\": [],\n            \"parentType\": \"Terrain\",\n            \"lat\": 63.39399248714377,\n            \"lng\": 13.0879294458349\n        },\n        {\n            \"x\": 2122,\n            \"y\": 1378,\n            \"parent\": [],\n            \"parentType\": \"Terrain\",\n            \"lat\": 63.39454644530334,\n            \"lng\": 13.087858985190381\n        },\n        {\n            \"x\": 1626,\n            \"y\": 1315,\n            \"parent\": [],\n            \"parentType\": \"Terrain\",\n            \"lat\": 63.39874808557246,\n            \"lng\": 13.076584339141846\n        },\n        {\n            \"x\": 499,\n            \"y\": 1345,\n            \"parent\": [],\n            \"parentType\": \"Terrain\",\n            \"lat\": 63.403173220344684,\n            \"lng\": 13.043146504566634\n        },\n        {\n            \"x\": 22,\n            \"y\": 1243,\n            \"parent\": [],\n            \"parentType\": \"Terrain\",\n            \"lat\": 63.40466914670977,\n            \"lng\": 13.03269713403874\n        },\n        {\n            \"x\": 1322,\n            \"y\": 1325,\n            \"parent\": [],\n            \"parentType\": \"Terrain\",\n            \"lat\": 63.401435585150075,\n            \"lng\": 13.065669144018694\n        },\n        {\n            \"x\": 1669,\n            \"y\": 1392,\n            \"parent\": [],\n            \"parentType\": \"Terrain\",\n            \"lat\": 63.39682199040094,\n            \"lng\": 13.074344094242857\n        },\n        {\n            \"x\": 1224,\n            \"y\": 1299,\n            \"parent\": [],\n            \"parentType\": \"Terrain\",\n            \"lat\": 63.40227227254611,\n            \"lng\": 13.062717253262903\n        },\n        {\n            \"x\": 794,\n            \"y\": 1359,\n            \"parent\": [],\n            \"parentType\": \"Terrain\",\n            \"lat\": 63.40212884989753,\n            \"lng\": 13.052775981973571\n        },\n        {\n            \"x\": 2403,\n            \"y\": 1378,\n            \"parent\": [],\n            \"parentType\": \"Terrain\",\n            \"lat\": 63.3901011904337,\n            \"lng\": 13.094295946856391\n        }\n    ]\nexport default areReferencePoints; \n","const testGPSpoints = [\n    {\"coordinates\": [ 13.079463, 63.409133 ] },\n    {\"coordinates\": [ 13.079472, 63.409131 ] },\n    {\"coordinates\": [ 13.07948, 63.409116 ] },\n    {\"coordinates\": [ 13.079481, 63.409103 ] },\n    {\"coordinates\": [ 13.07947, 63.409075 ] },\n    {\"coordinates\": [ 13.079467, 63.409066 ] },\n    {\"coordinates\": [ 13.079426, 63.409038 ] },\n    {\"coordinates\": [ 13.079406, 63.409027 ] },\n    {\"coordinates\": [ 13.079331, 63.409013 ] },\n    {\"coordinates\": [ 13.079299, 63.40901 ] },\n    {\"coordinates\": [ 13.07924, 63.409015 ] },\n    {\"coordinates\": [ 13.07917, 63.409018 ] },\n    {\"coordinates\": [ 13.079059, 63.409028 ] },\n    {\"coordinates\": [ 13.078943, 63.409039 ] },\n    {\"coordinates\": [ 13.078851, 63.409043 ] },\n    {\"coordinates\": [ 13.078803, 63.40906 ] },\n    {\"coordinates\": [ 13.078795, 63.409052 ] },\n    {\"coordinates\": [ 13.078758, 63.409053 ] },\n    {\"coordinates\": [ 13.078722, 63.409059 ] },\n    {\"coordinates\": [ 13.078661, 63.409063 ] },\n    {\"coordinates\": [ 13.078602, 63.409074 ] },\n    {\"coordinates\": [ 13.078433, 63.409099 ] },\n    {\"coordinates\": [ 13.078349, 63.409114 ] },\n    {\"coordinates\": [ 13.078267, 63.409142 ] },\n    {\"coordinates\": [ 13.078166, 63.409156 ] },\n    {\"coordinates\": [ 13.078063, 63.409182 ] },\n    {\"coordinates\": [ 13.077963, 63.409192 ] },\n    {\"coordinates\": [ 13.077874, 63.409207 ] },\n    {\"coordinates\": [ 13.077778, 63.409208 ] },\n    {\"coordinates\": [ 13.077685, 63.409211 ] },\n    {\"coordinates\": [ 13.07757, 63.40922 ] },\n    {\"coordinates\": [ 13.07747, 63.409216 ] },\n    {\"coordinates\": [ 13.077342, 63.409207 ] },\n    {\"coordinates\": [ 13.07725, 63.409171 ] },\n    {\"coordinates\": [ 13.077123, 63.409127 ] },\n    {\"coordinates\": [ 13.077001, 63.409015 ] },\n    {\"coordinates\": [ 13.076956, 63.408919 ] },\n    {\"coordinates\": [ 13.076911, 63.408864 ] },\n    {\"coordinates\": [ 13.076726, 63.408776 ] },\n    {\"coordinates\": [ 13.076657, 63.408702 ] },\n    {\"coordinates\": [ 13.076668, 63.408655 ] },\n    {\"coordinates\": [ 13.076604, 63.408519 ] },\n    {\"coordinates\": [ 13.076784, 63.408389 ] },\n    {\"coordinates\": [ 13.076967, 63.408307 ] },\n    {\"coordinates\": [ 13.077079, 63.40828 ] },\n    {\"coordinates\": [ 13.07718, 63.408176 ] },\n    {\"coordinates\": [ 13.077246, 63.408082 ] },\n    {\"coordinates\": [ 13.077495, 63.408024 ] },\n    {\"coordinates\": [ 13.077746, 63.407986 ] },\n    {\"coordinates\": [ 13.077906, 63.407902 ] },\n    {\"coordinates\": [ 13.077963, 63.407801 ] },\n    {\"coordinates\": [ 13.077871, 63.407715 ] },\n    {\"coordinates\": [ 13.07801, 63.407629 ] },\n    {\"coordinates\": [ 13.078063, 63.407538 ] },\n    {\"coordinates\": [ 13.077929, 63.407472 ] },\n    {\"coordinates\": [ 13.077811, 63.407443 ] },\n    {\"coordinates\": [ 13.077843, 63.407343 ] },\n    {\"coordinates\": [ 13.077976, 63.407269 ] },\n    {\"coordinates\": [ 13.078114, 63.407222 ] },\n    {\"coordinates\": [ 13.078137, 63.407142 ] },\n    {\"coordinates\": [ 13.078055, 63.407067 ] },\n    {\"coordinates\": [ 13.07816, 63.406966 ] },\n    {\"coordinates\": [ 13.078339, 63.40688 ] },\n    {\"coordinates\": [ 13.078358, 63.406768 ] },\n    {\"coordinates\": [ 13.078447, 63.406665 ] },\n    {\"coordinates\": [ 13.078623, 63.406586 ] },\n    {\"coordinates\": [ 13.078655, 63.406473 ] },\n    {\"coordinates\": [ 13.078854, 63.406372 ] },\n    {\"coordinates\": [ 13.079104, 63.406329 ] },\n    {\"coordinates\": [ 13.079182, 63.406218 ] },\n    {\"coordinates\": [ 13.079115, 63.406131 ] },\n    {\"coordinates\": [ 13.079108, 63.406051 ] },\n    {\"coordinates\": [ 13.079263, 63.405962 ] },\n    {\"coordinates\": [ 13.079357, 63.405965 ] },\n    {\"coordinates\": [ 13.079493, 63.405903 ] },\n    {\"coordinates\": [ 13.079485, 63.405808 ] },\n    {\"coordinates\": [ 13.079317, 63.405732 ] },\n    {\"coordinates\": [ 13.079272, 63.405666 ] },\n    {\"coordinates\": [ 13.07941, 63.405624 ] },\n    {\"coordinates\": [ 13.079524, 63.405615 ] },\n    {\"coordinates\": [ 13.079584, 63.405622 ] },\n    {\"coordinates\": [ 13.079606, 63.405642 ] },\n    {\"coordinates\": [ 13.079604, 63.405641 ] },\n    {\"coordinates\": [ 13.079608, 63.405639 ] },\n    {\"coordinates\": [ 13.079586, 63.405633 ] },\n    {\"coordinates\": [ 13.079589, 63.405634 ] },\n    {\"coordinates\": [ 13.079586, 63.405626 ] },\n    {\"coordinates\": [ 13.079581, 63.405619 ] },\n    {\"coordinates\": [ 13.079584, 63.405613 ] },\n    {\"coordinates\": [ 13.079584, 63.405615 ] },\n    {\"coordinates\": [ 13.079587, 63.405602 ] },\n    {\"coordinates\": [ 13.079604, 63.405597 ] },\n    {\"coordinates\": [ 13.079635, 63.405596 ] },\n    {\"coordinates\": [ 13.079663, 63.405596 ] },\n    {\"coordinates\": [ 13.079691, 63.405592 ] },\n    {\"coordinates\": [ 13.079707, 63.405598 ] },\n    {\"coordinates\": [ 13.079711, 63.40559 ] },\n    {\"coordinates\": [ 13.079741, 63.405571 ] },\n    {\"coordinates\": [ 13.079743, 63.405524 ] },\n    {\"coordinates\": [ 13.079656, 63.405475 ] },\n    { \"coordinates\": [ 13.079583, 63.405433 ] },\n    { \"coordinates\": [ 13.079575, 63.405337 ] },\n    { \"coordinates\": [ 13.079531, 63.405256 ] },\n    { \"coordinates\": [ 13.079499, 63.405188 ] },\n    { \"coordinates\": [ 13.079429, 63.4051 ] },\n    { \"coordinates\": [ 13.07931, 63.405025 ] },\n    { \"coordinates\": [ 13.079074, 63.404957 ] },\n    { \"coordinates\": [ 13.079099, 63.404845 ] },\n    { \"coordinates\": [ 13.079166, 63.404732 ] },\n    { \"coordinates\": [ 13.079238, 63.404598 ] },\n    { \"coordinates\": [ 13.079299, 63.404462 ] },\n    { \"coordinates\": [ 13.079236, 63.404352 ] },\n    { \"coordinates\": [ 13.079136, 63.404217 ] },\n    { \"coordinates\": [ 13.079275, 63.404089 ] },\n    { \"coordinates\": [ 13.079459, 63.40399 ] },\n    { \"coordinates\": [ 13.079385, 63.403884 ] },\n    { \"coordinates\": [ 13.07945, 63.40378 ] },\n    { \"coordinates\": [ 13.079465, 63.403673 ] },\n    { \"coordinates\": [ 13.079479, 63.403563 ] },\n    { \"coordinates\": [ 13.079616, 63.403449 ] },\n    { \"coordinates\": [ 13.079614, 63.403318 ] },\n    { \"coordinates\": [ 13.079327, 63.403236 ] },\n    { \"coordinates\": [ 13.079329, 63.403118 ] },\n    { \"coordinates\": [ 13.07954, 63.403012 ] },\n    { \"coordinates\": [ 13.079723, 63.40291 ] },\n    { \"coordinates\": [ 13.079623, 63.402802 ] },\n    { \"coordinates\": [ 13.079418, 63.402715 ] },\n    { \"coordinates\": [ 13.079383, 63.402625 ] },\n    { \"coordinates\": [ 13.079437, 63.402567 ] },\n    { \"coordinates\": [ 13.079498, 63.402559 ] },\n    { \"coordinates\": [ 13.079508, 63.402561 ] },\n    { \"coordinates\": [ 13.07951, 63.402569 ] },\n    { \"coordinates\": [ 13.0795, 63.402568 ] },\n    { \"coordinates\": [ 13.079491, 63.402567 ] },\n    { \"coordinates\": [ 13.079492, 63.402565 ] },\n    { \"coordinates\": [ 13.079494, 63.40256 ] },\n    { \"coordinates\": [ 13.079497, 63.402562 ] },\n    { \"coordinates\": [ 13.079496, 63.402561 ] },\n    { \"coordinates\": [ 13.079495, 63.40256 ] },\n    { \"coordinates\": [ 13.079493, 63.402558 ] },\n    { \"coordinates\": [ 13.079498, 63.402557 ] },\n    { \"coordinates\": [ 13.079484, 63.402554 ] }\n];\n\nexport default testGPSpoints;\n","import '../styles/fileForm.css';\nimport React from 'react';\nimport {Row, Col, Form, Button} from 'react-bootstrap';\nimport Container from 'react-bootstrap/Container';\n\nclass FileForm extends React.Component {\n\n    constructor(props) {\n        super(props);\n        const defaultFileType = \"json\";\n        let imgSrc = this.props.imgSrc;\n        let filename = imgSrc.substr(imgSrc.lastIndexOf('/')+1, imgSrc.length);\n        filename = filename.substr(0, filename.lastIndexOf('.'));\n\n        this.fileNames = {\n            json: String(filename) + \".json\",\n            csv: String(filename) + \".csv\",\n            text: String(filename) + \".txt\"\n        }\n\n        this.state = {\n            fileType: defaultFileType,\n            fileDownloadUrl: null,\n            resort: filename,\n        }\n    }\n\n    changeFileType = (event) => {\n        const value = event.target.value;\n        this.setState({fileType: value});\n    }\n\n    download = (event) => {\n        event.preventDefault();\n        let output;\n        let data = this.props.points;\n        if (this.state.fileType === \"json\") {\n            output = JSON.stringify(data, null, 4);\n            //output = JSON.stringify({triangles: this.props.triangles}, null, 4);\n        } else if (this.state.fileType === \"csv\") {\n            let contents = [];\n            contents.push ([\"x\", \"y\", \"long\", \"lat\", \"parent\", \"parentType\", \"note\"]);\n            data.map(point => contents.push([point.x, point.y, point.lng, point.lat, point.parent, point.parentType, point.note]));\n            output = this.makeCSV(contents);\n        } else if (this.state.fileType === \"text\") {\n            output = '';\n            data.map(point => {\n                output += \"x:\" + point.x + \",y:\" + point.y;\n                output += \",long:\" + point.long + \",lat:\" + point.lat;\n                output += \",parent:[\" + point.parent + \"],parentType:\"+point.parentType;\n                output += \",note:\" + point.note + \"\\n\";\n                return output;\n            });\n        }\n        const blob = new Blob([output]);\n        const fileDownloadUrl = URL.createObjectURL(blob);\n        this.setState ({fileDownloadUrl: fileDownloadUrl},\n          () => {\n            this.dofileDownload.click();\n            URL.revokeObjectURL(fileDownloadUrl);\n            this.setState({fileDownloadUrl: \"\"})\n        })\n    }\n\n    upload = (event) => {\n        event.preventDefault();\n        this.dofileUpload.click();\n    }\n\n    makeCSV = (content) => {\n        let csv = '';\n        content.forEach(value => {\n            value.forEach((item, i) => {\n                let innerValue = item === undefined ? '' : item.toString();\n                let result = innerValue.replace(/\"/g, '\"\"');\n                if (result.search(/(\"|,|\\n)/g) >= 0) {\n                    result = '\"' + result + '\"'\n                }\n                if (i > 0) {csv += ','}\n                    csv += result;\n            })\n            csv += '\\n';\n        });\n        return csv;\n    }\n\n    openFile = (evt) => {\n        const fileObj = evt.target.files[0];\n        const reader = new FileReader();\n\n        if(!(fileObj instanceof Blob)) return\n\n        let fileloaded = e => {\n            const fileContents = e.target.result;\n            try {\n                let json = JSON.parse(fileContents);\n                if(json.hasOwnProperty('pistePoints')) {\n                    this.props.loadPointData(json['pistePoints']);\n                } else if(json.hasOwnProperty('triangles')) {\n                    this.props.loadTriangleData(json['triangles']);\n                }\n            } catch(e) {\n                alert(e);\n            }\n        }\n        fileloaded = fileloaded.bind(this);\n        reader.onload = fileloaded;\n        reader.readAsText(fileObj);\n    }\n\n    downloadTestReport = (event) => {\n        console.log(\"generating test report\");\n        event.preventDefault();\n        let results = this.props.generateTestReport();\n        let output = JSON.stringify({testReport: results}, null, 4);\n\n        const blob = new Blob([output]);\n        const fileDownloadUrl = URL.createObjectURL(blob);\n        this.setState ({fileDownloadUrl: URL.createObjectURL(blob)},\n          () => {\n            this.doTestReportDownload.click();\n            URL.revokeObjectURL(fileDownloadUrl);\n            this.setState({fileDownloadUrl: \"\"})\n        });\n    }\n\n    downloadLandmarkTestReport = (event) => {\n        event.preventDefault();\n        let results = this.props.doLandmarkTest();\n        //let output = JSON.stringify(results, null, 4);\n        if(!results) {\n            console.log(\"Something went wrong\");\n            return;\n        }\n        let contents = [];\n        contents.push ([\"x\", \"y\", \"x_prim (transformed)\", \"y_prim (transformed)\", \"distance (px)\"]);\n        results.map(point => contents.push([point.x, point.y, point.x_prim, point.y_prim, point.distance]));\n        let output = this.makeCSV(contents);\n\n        const blob = new Blob([output]);\n        const fileDownloadUrl = URL.createObjectURL(blob);\n        this.setState ({fileDownloadUrl: URL.createObjectURL(blob)},\n          () => {\n            this.doLandmarkTestReportDownload.click();\n            URL.revokeObjectURL(fileDownloadUrl);\n            this.setState({fileDownloadUrl: \"\"})\n        });\n    }\n\n    render() {\n        return (\n            <div id=\"fileForm\">\n                <Container>\n                    <Row className=\"justify-content-md-center\">\n                        <Col md=\"auto\">\n                        <Button className=\"\" variant='primary' onClick={this.downloadTestReport}>\n                            RMSE Test\n                        </Button>\n                        <a className=\"hidden\"\n                            download={'testReport.json'}\n                            href={this.state.fileDownloadUrl}\n                            ref={e=>this.doTestReportDownload = e}>download it</a>\n                        <Button className=\"\" variant='primary' onClick={this.downloadLandmarkTestReport}>\n                            Landmark Test\n                        </Button>\n                        <a className=\"hidden\"\n                            download={'landmarkTest.csv'}\n                            href={this.state.fileDownloadUrl}\n                            ref={e=>this.doLandmarkTestReportDownload = e}>download it</a>\n                        </Col>\n                        <Col md=\"auto\">\n                        <Button className=\"\" variant='primary' onClick={this.props.plotTestData} disabled={this.props.triangles.length === 0}>\n                            Plot test data\n                        </Button>\n                        </Col>\n                    </Row>\n                    <Row className=\"justify-content-md-center\">\n                        <Col md=\"auto\">\n                            <Form.Control as=\"select\" name=\"fileType\" className=\"fileForm-child\"\n                                onChange={this.changeFileType}\n                                value={this.state.fileType}>\n                                <option value=\"csv\">CSV</option>\n                                <option value=\"json\">JSON</option>\n                                <option value=\"text\">Text</option>\n                            </Form.Control>\n                        </Col>\n                        <Col md=\"auto\">\n                            <Button onClick={this.download} className=\"fileForm-child\">\n                                Download\n                            </Button>\n                            <a className=\"hidden\"\n                                download={this.fileNames[this.state.fileType]}\n                                href={this.state.fileDownloadUrl}\n                                ref={e=>this.dofileDownload = e}>download it</a>\n                        </Col>\n                        <Col md=\"auto\">\n                            <Button onClick={this.upload} className=\"fileForm-child\">Upload</Button>\n                            <input type=\"file\" className=\"hidden\"\n                                multiple={false}\n                                accept=\".json,application/json\"\n                                onChange={evt => this.openFile(evt)}\n                                ref={e=>this.dofileUpload = e}/>\n                        </Col>\n                    </Row>\n                </Container>\n\n            </div>);\n    }\n}\n\nexport default FileForm;\n","import React from 'react'\n\nclass Canvas extends React.Component {\n\n    componentDidMount() {\n        this.updateCanvas();\n    }\n\n    getSnapshotBeforeUpdate(prevProps) {\n        return {\n            triangleUpdateRequired: prevProps.triangles !== this.props.triangles,\n            landmarkUpdateRequired: prevProps.landmarkTestData !== this.props.landmarkTestData,\n        };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if(snapshot.triangleUpdateRequired) {\n            this.updateCanvas();\n        }\n        if(snapshot.landmarkUpdateRequired) {\n            this.drawLandmarkTestData();\n        }\n    }\n\n    updateCanvas = () => {\n        let canvas = this.refs.canvas;\n        const ctx = canvas.getContext('2d');\n        ctx.clearRect(0, 0, canvas.width, canvas.height);\n        ctx.strokeStyle = \"red\";\n        var triangles = this.props.triangles;\n        var i, t;\n\t  \tfor (i = 0; i < triangles.length; i++) {\n\t\t\tt = triangles[i];\n\t\t\tctx.beginPath();\n\t\t\tctx.moveTo(t.p1.x, t.p1.y);\n\t\t\tctx.lineTo(t.p2.x, t.p2.y);\n\t\t\tctx.lineTo(t.p3.x, t.p3.y);\n\t\t\tctx.lineTo(t.p1.x, t.p1.y);\n\t\t\tctx.stroke();\n\t\t}\n    }\n\n    drawLandmarkTestData = () => {\n        let canvas = this.refs.canvas;\n        const ctx = canvas.getContext('2d');\n        //ctx.clearRect(0, 0, canvas.width, canvas.height);\n        ctx.strokeStyle = \"lime\";\n        ctx.fillStyle = \"magenta\";\n        var landmarkData = this.props.landmarkTestData;\n        var i, p;\n\t  \tfor (i = 0; i < landmarkData.length; i++) {\n\t\t\tp = landmarkData[i];\n\t\t\tctx.beginPath();\n            ctx.arc(p.x, p.y, 4, 0, 2 * Math.PI, true);\n            ctx.fill()\n\t\t\tctx.moveTo(p.x, p.y);\n\t\t\tctx.lineTo(p.x_prim, p.y_prim);\n            ctx.stroke();\n            ctx.beginPath();\n            ctx.arc(p.x_prim, p.y_prim, 4, 0, 2 * Math.PI, true);\n            ctx.stroke();\n\t\t}\n    }\n\n    render() {\n        const {width, height} = this.props;\n\n        return (\n          <div id=\"canvas\">\n            <canvas ref=\"canvas\" width={width} height={height} />\n          </div>\n        )\n    }\n}\nexport default Canvas\n","import React from 'react';\n\nconst defaultProps = {\n  dotRadius: 1,\n};\n\nexport default class Dot extends React.Component {\n  onMouseDown = (e) => {\n      e.stopPropagation();\n      this.props.moveDot(this.props.i);\n  }\n\n  render() {\n    const { dotX, dotY, styles, dotRadius } = this.props;\n    return (\n      <div\n        className=\"react-image-dot\"\n        onMouseDown={this.onMouseDown}\n        style={{\n          ...styles,\n          height: dotRadius * 2,\n          width: dotRadius * 2,\n          transform: `translate(${-dotRadius}, ${-dotRadius})`,\n          top: dotY || 0,\n          left: dotX || 0\n        }}\n      />\n    );\n  }\n}\n\nDot.defaultProps = defaultProps;\n","\n\nconst Backdrop = (props) => (\n    props.show ? <div className=\"modal-backdrop\" onClick={props.clicked}></div> : null\n)\n\nexport default Backdrop;","import '../styles/googleMaps.css';\nimport React from 'react';\n\nfunction loadJS(src) {\n    let script = window.document.querySelector(`script[src=\"${src}\"]`);\n    if(script) {\n        script.remove();\n    }\n    script = window.document.createElement(\"script\");\n    script.src = src;\n    script.async = true;\n    window.document.body.appendChild(script);\n}\n\nvar markers = [];\nvar mapTriangles = [];\n\nclass GoogleMap extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            zoom: 13,\n            map: {},\n            currentMarker: {},\n            mapLoaded: false,\n            google: {},\n        };\n        this.apiKey = process.env.REACT_APP_GOOGLE_API_KEY;\n        this.mapRef = React.createRef();\n    }\n\n    getSnapshotBeforeUpdate(prevProps) {\n        return {\n            markerUpdateRequired: prevProps.currentDot !== this.props.currentDot,\n            dotMarkersUpdateRequired: prevProps.dots !== this.props.dots,\n            triangleUpdateRequired: prevProps.triangles !== this.props.triangles,\n        };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if(snapshot.markerUpdateRequired) {\n            this.updateCurrentMarker();\n        }\n        if (snapshot.dotMarkersUpdateRequired) {\n            this.plotDotMarkers();\n        }\n        if(snapshot.triangleUpdateRequired) {\n            this.drawTriangles();\n        }\n    }\n\n    componentDidMount() {\n        this.loadMap();\n    }\n\n    loadMap = () => {\n        window.initMap = this.initMap;\n        loadJS('https://maps.googleapis.com/maps/api/js?key='+this.apiKey+'&callback=initMap');\n    }\n\n    getCenter = () => {\n        return {\n            lat: parseFloat(this.props.currentDot.lat) || 63.42833519737357,\n            lng: parseFloat(this.props.currentDot.lng) || 13.078345603820786\n        };\n    }\n\n    initMap = () => {\n        const google = window.google;\n        let map = this.mapRef;\n        let {zoom} = this.state;\n\n        map = new google.maps.Map(this.mapRef.current, {\n            center: this.getCenter(),\n            zoom: zoom,\n            mapTypeId: google.maps.MapTypeId.HYBRID\n        });\n\n        let currentMarker = new google.maps.Marker({\n            position: this.getCenter(),\n            map,\n            title: \"Marker\",\n        });\n        this.setState({\n            map: map,\n            google: google,\n            currentMarker: currentMarker\n        });\n\n        map.addListener(\"click\", (mapsMouseEvent) => {\n            currentMarker.setPosition(mapsMouseEvent.latLng);\n            this.props.setLatLong(mapsMouseEvent.latLng);\n            map.panTo(mapsMouseEvent.latLng);\n        });\n        this.plotDotMarkers();\n        this.drawTriangles();\n    }\n\n    updateCurrentMarker = () => {\n        const {map, currentMarker} = this.state;\n        let center = this.getCenter();\n        currentMarker.setPosition(center);\n        map.setCenter(center);\n    }\n\n    plotDotMarkers = () => {\n        const {google, map} = this.state;\n        markers.map(m => m.setMap(null));\n        markers = this.props.dots.map(dot => {\n            var latLng = new google.maps.LatLng(dot.lat,dot.lng);\n            let m = new google.maps.Marker({\n                position: latLng,\n                map,\n                title: JSON.stringify(dot.parent),\n                icon: {\n                    path: google.maps.SymbolPath.CIRCLE,\n                    fillColor: '#00F',\n                    fillOpacity: 0.6,\n                    strokeColor: '#00A',\n                    strokeOpacity: 0.9,\n                    strokeWeight: 1,\n                    scale: 4\n                }\n            });\n            return m;\n        });\n    }\n\n    drawTriangles = () => {\n        const {google, map} = this.state;\n        mapTriangles.map(t => t.setMap(null));\n        mapTriangles = this.props.triangles.map(t => {\n            const triangleCoords = [\n              { lat: t.p1.lat, lng: t.p1.lng },\n              { lat: t.p2.lat, lng: t.p2.lng },\n              { lat: t.p3.lat, lng: t.p3.lng },\n              { lat: t.p1.lat, lng: t.p1.lng },\n            ];\n            const p = new google.maps.Polyline({\n              path: triangleCoords,\n              strokeColor: \"#000000\",\n              strokeOpacity: 0.8,\n              strokeWeight: 1,\n            });\n            p.setMap(map);\n            return p;\n        });\n    }\n\n    render() {\n        return (<div id=\"google-map\" style={{ height: '40vh', width: '100%' }}>\n                  <div ref={this.mapRef} id=\"map\"></div>\n                </div>\n        );\n    }\n}\n\n\nexport default GoogleMap;\n","import '../styles/geoCoordSelector.css';\nimport React from 'react';\nimport Backdrop from '../image-dots/backdrop.js';\nimport {Button, Form, Row, Col} from 'react-bootstrap';\nimport Card from 'react-bootstrap/Card';\nimport Creatable from 'react-select/creatable';\nimport GoogleMap from './googleMap.js';\n\nclass InputModal extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            pisteInputValue: \"\",\n        }\n        this.handleClose = this.handleClose.bind(this);\n        this.onChangeParentType = this.onChangeParentType.bind(this);\n        this.onKeyPress = this.onKeyPress.bind(this);\n    }\n\n    handleClose() {\n        this.setState({show: false});\n    }\n\n    getValueLabelList(parents) {\n        if(Array.isArray(parents)) {\n            let res = [];\n            parents.map(x => res.push({value: x, label: x}));\n            return res;\n        }\n        return [{value: parents, label: parents}];\n    }\n\n    onChangeParentType(event) {\n        this.props.setCurrentParentType(event.target.value);\n    }\n\n    onKeyPress(e) {\n        if(e.key === 'Enter') {\n            this.props.handleSave();\n        }\n    }\n\n    setLatLong = (pos) => {\n        this.props.updateCurrentDot({lat: pos.lat(), lng: pos.lng()});\n    }\n\n    render() {\n        const {show, handleClose, parentTypes} = this.props;\n        const wW = window.innerWidth;\n        var left = this.props.posX > wW/2 ? 0 : Math.round(wW*0.525);\n        return (\n            <div id=\"geoCoordSelector\" className={show ? \"\" : \"hidden\"}>\n\n                    <div className=\"coord-selector\">\n                    <Backdrop show={show} clicked={handleClose} />\n\n                    <Card className=\"modal-body\"\n                    style={{\n                        top: 10,\n                        left: left}}>\n                        <Card.Body>\n                            <Card.Title>Select Coordinates</Card.Title>\n                            <Card.Text>\n                            </Card.Text>\n                            <Form>\n                                <Form.Group as={Row}>\n                                    <Form.Label column sm=\"3\">x:</Form.Label>\n                                    <Col sm=\"3\">\n                                        <Form.Control type=\"number\" defaultValue={this.props.currentDot.x}\n                                        onChange={(e) => {this.props.updateCurrentDot({x: e.target.value})}}/>\n                                    </Col>\n                                    <Form.Label column sm=\"3\">y:</Form.Label>\n                                    <Col sm=\"3\">\n                                        <Form.Control type=\"number\" defaultValue={this.props.currentDot.y}\n                                        onChange={(e) => {this.props.updateCurrentDot({y: e.target.value})}}/>\n                                    </Col>\n                                </Form.Group>\n                                <Form.Group as={Row}>\n                                    <Form.Label column sm=\"3\">lat:</Form.Label>\n                                    <Form.Label column sm=\"3\">\n                                        {this.props.currentDot.lat}\n                                    </Form.Label>\n                                    <Form.Label column sm=\"3\">lng:</Form.Label>\n                                    <Form.Label column sm=\"3\">\n                                        {this.props.currentDot.lng}\n                                    </Form.Label>\n                                </Form.Group>\n                                <Form.Group>\n                                    <GoogleMap\n                                    setLatLong={this.setLatLong}\n                                    currentDot={this.props.currentDot}\n                                    dots={this.props.dots}\n                                    triangles={this.props.triangles}></GoogleMap>\n                                </Form.Group>\n                                <div>\n                                    {parentTypes.map(type =>\n                                        <span key={type}>\n                                            <input type=\"radio\" value={type}\n                                            onChange={this.onChangeParentType}\n                                            name=\"type\" className=\"parent-type-selector\"\n                                            checked={this.props.currentParentType === type}/>{type}\n                                        </span>)}\n                                </div>\n                                {this.props.currentParentType === 'Terrain' ? null :\n                                  <Form.Group>\n                                    Select or add parent:\n                                    <Creatable isMulti={true}\n                                    onChange={(x) => this.props.setCurrentParent(x)}\n                                    defaultValue={this.getValueLabelList(this.props.currentParent)}\n                                    options={this.getValueLabelList(this.props.parents)}\n                                    />\n                                  </Form.Group>}\n                                <Form.Control type=\"text\"\n                                defaultValue={this.props.currentDot.note}\n                                placeholder=\"Notes...\"\n                                onChange={(e) => this.props.updateCurrentDot({note: e.target.value})}\n                                onKeyPress={this.onKeyPress}/>\n                            </Form>\n                        </Card.Body>\n                        <Card.Footer>\n                        <Button variant=\"secondary\" onClick={handleClose}>Delete</Button>\n                            <Button variant=\"secondary\" onClick={handleClose}>Close</Button>\n                            <Button variant=\"primary\" onClick={this.props.handleSave}>Save</Button>\n                        </Card.Footer>\n                    </Card>\n                    </div>\n            </div>);\n    }\n}\n\nexport default InputModal;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Canvas from './Canvas';\nimport Dot from '../image-dots/Dot';\nimport InputModal from './InputModal.js';\nimport Delaunay from './delaunay/index.js';\n\nconst propTypes = {\n  deleteDot: PropTypes.func.isRequired,\n  addDot: PropTypes.func.isRequired,\n  resetDots: PropTypes.func,\n  dotStyles: PropTypes.object,\n  dotRadius: PropTypes.number,\n  backgroundImageUrl: PropTypes.string,\n  styles: PropTypes.object,\n  width: PropTypes.number,\n  height: PropTypes.number,\n  pixelCoordinates: PropTypes.bool,\n};\n\nconst defaultProps = {\n  pixelCoordinates: true,\n  backgroundSize: 'cover',\n};\n\nexport default class ImageCoordinateCollector extends React.Component {\n    constructor(props) {\n        super(props);\n        let lastCoords = this.props.coords !== undefined ? this.props.coords : {lat: 63.42833519737357, lng: 13.078345603820786};\n        this.state = {\n            grabbing: false,\n            dimensions: {},\n            showModal: false,\n            currentParent: [],\n            currentParentType: \"Piste\",\n            lastCoords: lastCoords,\n            currentDot: {lat: lastCoords.lat, lng: lastCoords.lng},\n        };\n    }\n\n    onLoadPisteMap = ({target: img}) => {\n        this.setState({\n            dimensions: {\n                renderWidth: img.offsetWidth,\n                renderHeight: img.offsetHeight,\n                realWidth: img.naturalWidth,\n                realHeight: img.naturalHeight,\n            }\n        });\n    }\n\n    calcEstimatedGeoCoord = (point) => {\n        var nearestTriangle;\n        let minDistance = Infinity;\n\n        for(const triangle of this.props.triangles) {\n            if(triangle.enclosesMapCoords(point)) {\n                return triangle.transformMapCoords(point);\n            }\n            let distance = triangle.mapDistanceToPoint(point);\n            if(distance < minDistance) {\n                minDistance = distance;\n                nearestTriangle = triangle;\n            }\n        }\n        return nearestTriangle ? nearestTriangle.transformMapCoords(point) : null;\n    }\n\n    onMouseUp = (e) => {\n        const bounds = e.target.getBoundingClientRect();\n        let {dimensions, currentParent, currentParentType, currentDot, lastCoords} = this.state;\n        let x = Math.round(this.renderedToRealCoord(e.clientX - bounds.left, dimensions.renderWidth, dimensions.realWidth));\n        let y = Math.round(this.renderedToRealCoord(e.clientY - bounds.top, dimensions.renderHeight, dimensions.realHeight))\n        let estimatedCoords = this.calcEstimatedGeoCoord(new Delaunay.Point({x: x, y: y}));\n\n        let dot = {\n            \"x\": x,\n            \"y\": y,\n            \"parent\": currentParent,\n            \"parentType\": currentParentType,\n            \"lat\": estimatedCoords ? estimatedCoords.x : lastCoords.lat,\n            \"lng\": estimatedCoords ? estimatedCoords.y : lastCoords.lng,\n        };\n\n        this.setState({\n            grabbing: false,\n            showModal: true,\n            currentDot: {...currentDot, ...dot},\n            currentParent: currentDot.parent? currentDot.parent : currentParent,\n        });\n    }\n\n    updateCurrentDot = (dot) => {\n        let currentDot = this.state.currentDot;\n        if(dot.lat !== undefined && dot.lng !== undefined) {\n            this.setState({lastCoords: {lat: dot.lat, lng: dot.lng}});\n        }\n        this.setState({\n            currentDot: {...currentDot,...dot},});\n    }\n\n    setCurrentParent = (parentList) => {\n        let dot = this.state.currentDot;\n        let newParents = [];\n        var parent;\n        for(parent of parentList) {\n            newParents = [...newParents, parent.value];\n            this.props.addParent(parent.value);\n        }\n        dot.parent = newParents;\n\n        this.setState({currentDot: dot, currentParent: newParents});\n    }\n\n    setCurrentParentType = (type) => {\n        let dot = this.state.currentDot;\n        dot.parentType = type;\n        this.setState({currentDot: dot, currentParentType: type});\n        this.props.addParentType(type);\n    }\n\n    moveDot = (index) => {\n        console.log(\"move dot\");\n        this.setState({\n            grabbing: true,\n            currentDot: this.props.dots[index],\n        });\n        this.props.deleteDot(index);\n    }\n\n    resetDots = () => {\n        this.props.resetDots();\n        this.setState({currentDot: this.state.lastCoords});\n    }\n\n    // Translate from rendered coordinates to real piste map coordinates\n    renderedToRealCoord = (coord, renderedLength, realLength) => {\n        return (coord/renderedLength)*realLength;\n    }\n\n    realToRenderedCoord = (coord, renderedLength, realLength) => {\n        return (coord/realLength)*renderedLength;\n    }\n\n    handleShowModal = () => {\n        this.setState({showModal: true});\n    }\n\n    handleCloseModal = () => {\n        this.setState({showModal: false, currentDot: {}});\n    }\n\n    handleSave = () => {\n        this.props.saveDot(this.state.currentDot);\n        this.handleCloseModal();\n    }\n\n    render() {\n        const {grabbing, showModal, currentDot} = this.state;\n        const dim = this.state.dimensions;\n        const {dots, testDots, landmarkTestData, backgroundImageUrl, dotRadius, triangles} = this.props;\n        const grabClass = grabbing ? 'react-image-dot__grabbing' : '';\n\n        return (\n        <div id=\"react-image-dot-container\">\n\n            <div className={`react-image-dot__wrapper ${grabClass} no-select`}\n            onMouseUp={this.onMouseUp}\n            width={dim.realWidth}\n            height={dim.realHeight}>\n\n            <Canvas\n            id=\"canvas\"\n            width={dim.realWidth}\n            height={dim.realHeight}\n            triangles={triangles}\n            landmarkTestData={landmarkTestData}>\n            </Canvas>\n\n            <img\n            id=\"pistemap-img\"\n            src={backgroundImageUrl} alt=\"Piste map\"\n            width={dim.realWidth} onLoad={this.onLoadPisteMap} />\n\n             {dots.map((dot, i) =>\n                <Dot\n                dotX={Math.round(this.realToRenderedCoord(dot.x, dim.renderWidth, dim.realWidth))}\n                dotY={Math.round(this.realToRenderedCoord(dot.y, dim.renderHeight, dim.realHeight))}\n                i={i}\n                styles={{\n                    boxShadow: '0px 0px 0px 2px lime',\n                    backgroundColor: 'magenta',\n                    borderRadius: \"0% 100% 100% 100%\",\n                }}\n                moveDot={this.moveDot}\n                dotRadius={dotRadius}\n                key={i}\n                />)\n            }\n\n            { Object.keys(currentDot).length === 0 ? null: <Dot\n                dotX={Math.round(this.realToRenderedCoord(currentDot.x, dim.renderWidth, dim.realWidth))}\n                dotY={Math.round(this.realToRenderedCoord(currentDot.y, dim.renderHeight, dim.realHeight))}\n                i={0}\n                styles={{\n                    boxShadow: '0px 0px 0px 2px magenta',\n                    backgroundColor: 'lime',\n                    borderRadius: \"0% 100% 100% 100%\",\n                }}\n                moveDot={() => console.log('try to move temp dot')}\n                dotRadius={dotRadius}\n                key={-1}\n                /> }\n\n            { testDots.map((dot, i) =>\n                    <Dot\n                    dotX={Math.round(this.realToRenderedCoord(dot.x, dim.renderWidth, dim.realWidth))}\n                    dotY={Math.round(this.realToRenderedCoord(dot.y, dim.renderHeight, dim.realHeight))}\n                    i={i}\n                    styles={{\n                        boxShadow: '0px 0px 0px 2px lime',\n                        backgroundColor: 'lime',\n                        borderRadius: \"100%\",\n                    }}\n                    moveDot={() => {}}\n                    dotRadius={dotRadius}\n                    key={i}\n                    />)}\n\n            </div>\n            <InputModal\n            show={showModal}\n            dimensions={dim}\n            posX={this.realToRenderedCoord(currentDot.x, dim.renderWidth, dim.realWidth)}\n            handleClose={this.handleCloseModal}\n            handleSave={this.handleSave}\n            setCurrentParent={this.setCurrentParent}\n            setCurrentParentType={this.setCurrentParentType}\n            updateCurrentDot={this.updateCurrentDot}\n            currentParent={this.state.currentParent}\n            currentParentType={this.state.currentParentType}\n            currentDot={this.state.currentDot}\n            parents={this.props.parents}\n            parentTypes={this.props.parentTypes}\n            dots={this.props.dots}\n            triangles={triangles}\n            />\n            {this.props.resetDots &&\n            <button onClick={this.resetDots}>Reset</button>}\n        </div>\n        );\n    }\n}\n\nImageCoordinateCollector.propTypes = propTypes;\nImageCoordinateCollector.defaultProps = defaultProps;\n","import React from 'react';\nimport {Button} from 'react-bootstrap';\nimport Table from 'react-bootstrap/Table';\nimport '../styles/image-dots.css';\n\nexport default function DotsInfo({dots, deleteDot, resetDots}) {\n  return (\n      <div className=\"dotsinfo\">\n        <div className=\"row justify-content-center\">\n            <Table hover size=\"sm\">\n                <thead>\n                    <tr>\n                    <th>#</th>\n                    <th>x</th>\n                    <th>y</th>\n                    <th>long</th>\n                    <th>lat</th>\n                    <th>parent</th>\n                    <th>parentType</th>\n                    <th>note</th>\n                    <th>delete</th>\n                    </tr>\n                </thead>\n                <tbody>\n                {dots.map((dot, i) => {\n                    return (<tr key={i}>\n                            <td>{i} </td>\n                            <td>{dot.x}</td>\n                            <td>{dot.y}</td>\n                            <td>{dot.lng}</td>\n                            <td>{dot.lat}</td>\n                            <td>{JSON.stringify(dot.parent)}</td>\n                            <td>{dot.parentType}</td>\n                            <td>{dot.note}</td>\n                            <td><Button variant='danger' onClick={() => deleteDot(i)}>×</Button></td>\n                    </tr>);})}\n                </tbody>\n              </Table>\n        </div>\n        <Button variant='success' onClick={() => resetDots()}>Reset</Button>\n      </div>\n  );\n}\n","import '../styles/image-dots.css';\nimport '../styles/geoCoordSelector.css';\nimport areReferencePoints from './experiment/are_referencepoints.js';\nimport areLandmarks from './experiment/are_landmarks.js';\nimport testTriangles from './experiment/are_testtriangles.js';\nimport testGPSpoints from './experiment/worldcupbacken.js';\nimport React from 'react';\nimport FileForm from './FileForm.js';\nimport ImageCoordinateCollector from './ImageCoordinateCollector.js';\nimport DotsInfo from './DotsInfo.js';\nimport Delaunay from './delaunay/index.js';\nimport { Prompt } from 'react-router';\n\nclass CoordinateMatcher extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.initialDots = [];\n        this.state = {\n            title: this.props.resort.title,\n            src: this.props.resort.src,\n            x: 0,\n            y: 0,\n            referencePoints: areReferencePoints.map(x => new Delaunay.Point(x)),\n            dots: this.initialDots,\n            triangles: [],\n            testDots: [],\n            landmarkTestData: [],\n            parents: [],\n            parentTypes: ['Piste', 'Lift', 'Terrain', 'Restaurant', 'Other'],\n            windowWidth: window.innerWidth*0.98,\n            shouldBlockNavigation: false,\n        }\n        console.log(\"Number of referencePoints: \" + areReferencePoints.length);\n    }\n\n    componentDidUpdate() {\n        if (this.state.shouldBlockNavigation) {\n            window.onbeforeunload = () => true\n        } else {\n            window.onbeforeunload = undefined\n        }\n    }\n\n    transformTestPoints = () => {\n        /* Code for using the stored Åre data\n        let triangles = [];\n        let trianglePoints = [];\n        let size = \"200\";\n        let triangleData = testTriangles[size].triangles;\n        console.log(\"transforming run points for triangle set size \" + size);\n        for(const triangle of triangleData) {\n            for(const point of triangle) {\n                let pointObj = new Delaunay.Point(point);\n                if(!this.includesPoint(trianglePoints, pointObj)) {\n                    trianglePoints = [...trianglePoints, pointObj];\n                }\n            }\n        }\n        triangles = Delaunay.triangulate(trianglePoints);\n        */\n        let triangles = this.state.triangles;\n        if(triangles.length === 0) {\n            return;\n        }\n        let transformedCoords = [];\n        for(const p of testGPSpoints) {\n            let point = {lat: p.coordinates[1], lng: p.coordinates[0]};\n            let nearestTriangle = this.findNearestTriangle(point, triangles);\n            let {x, y} = nearestTriangle.transformGeoCoords(point);\n            transformedCoords.push({x: Math.round(x), y: Math.round(y)});\n        }\n        this.setState({testDots: transformedCoords});\n    }\n    // Translate from rendered coordinates to real piste map coordinates\n    renderedToRealCoord(coord, renderedLength, realLength) {\n        return (coord/renderedLength)*realLength;\n    }\n\n    realToRenderedCoord(coord, renderedLength, realLength) {\n        return (coord/realLength)*renderedLength;\n    }\n\n    findNearestTriangle = (point, triangles) => {\n        var nearestTriangle;\n        let minDistance = Infinity;\n\n        for(const triangle of triangles) {\n            let distance = triangle.geoDistanceToPoint(point);\n            if(distance < minDistance) {\n                minDistance = distance;\n                nearestTriangle = triangle;\n            }\n        }\n        return nearestTriangle;\n    }\n\n    doLandmarkTest = () => {\n        /* Code for using the Åre data  \n        let triangles = [];\n        let trianglePoints = [];\n        let size = \"150\";\n        let triangleData = testTriangles[size].triangles;\n        console.log(\"transforming run points for triangle set size \" + size);\n        for(const triangle of triangleData) {\n            for(const point of triangle) {\n                let pointObj = new Delaunay.Point(point);\n                if(!this.includesPoint(trianglePoints, pointObj)) {\n                    trianglePoints = [...trianglePoints, pointObj];\n                }\n            }\n        }\n        triangles = Delaunay.triangulate(trianglePoints);\n\n        this.setState({triangles: triangles, dots: trianglePoints})*/\n        let triangles = this.state.triangles;\n        let landmarkData = [];\n\n        //use landmark points or reference points??\n        for(const p of areReferencePoints) {\n            let nearestTriangle = this.findNearestTriangle(p, triangles);\n            let {x, y} = nearestTriangle.transformGeoCoords(p);\n            x = Math.round(x);\n            y = Math.round(y);\n            let d = Math.sqrt((x - p.x)**2 + (y - p.y)**2);\n            landmarkData.push({\n                x_prim: Math.round(x),\n                y_prim: Math.round(y),\n                x: p.x,\n                y: p.y,\n                distance: d\n            });\n        }\n        this.setState({landmarkTestData: landmarkData});\n        return landmarkData;\n    }\n\n    generateTestReport = () => {\n        let N = this.state.dots.length;\n        let results = [];\n        let testSet = this.state.dots.slice();\n        // Calculate min RMSE for each subset of size n\n        var n;\n        for(n = N; n >= 3; n--) {\n            let minRMSE = Infinity, minTriangles = [], indexToRemove = 0;\n            var i;\n            for(i = 0; i < n; i++) {\n                let subset = testSet.slice();\n                subset.splice(i, 1);\n                let triangles = Delaunay.triangulate(subset);\n                let rmse = this.calculateError(triangles);\n                if(rmse < minRMSE) {\n                    indexToRemove = i;\n                    minRMSE = rmse;\n                    minTriangles = triangles;\n                }\n            }\n            results.push({\n                n: n-1,\n                minRMSE: minRMSE,\n                minTriangles: minTriangles,\n            });\n            testSet.splice(indexToRemove, 1);\n        }\n        return results;\n    }\n    // Calculate the total error using reference points\n    // Used for thesis experiments of åre\n    calculateError = (triangles) => {\n        let {referencePoints} = this.state;\n        if(triangles.length < 1) return null;\n        var numClassified = 0;\n        let error = 0;\n        for(const point of referencePoints) {\n            let nearestTriangle = this.findNearestTriangle(point, triangles);\n            if(nearestTriangle) {\n                let mapCoords = nearestTriangle.transformGeoCoords(point);\n                let distance = point.distance(new Delaunay.Point(mapCoords));\n                error += distance;\n                numClassified++;\n            }\n        }\n        return error / Math.sqrt( numClassified);\n    }\n\n    addDot = (dot) => {\n        let dots = this.state.dots;\n        this.setState({\n            dots: [...dots, new Delaunay.Point(dot)],\n            shouldBlockNavigation: true,\n        }, function() {\n            this.setState({\n                triangles: Delaunay.triangulate(this.state.dots)\n            });\n          });\n    }\n\n    saveDot = (dot) => {\n        let {dots} = this.state;\n        this.deleteDot(dots.length-1);\n        this.addDot(dot);\n    }\n\n    deleteDot = (index) => {\n        this.setState({\n            dots: this.state.dots.filter((e, i) => {return i !== index;}),\n        }, function() {\n            this.setState({triangles: Delaunay.triangulate(this.state.dots)})\n        });\n    }\n\n    resetDots = () => {\n        this.setState({\n            dots: this.initialDots,\n        }, function() {\n            this.setState({triangles: []})\n        });\n    }\n\n    addParent = (parent) => {\n        if(!this.state.parents.includes(parent)) {\n            this.setState({parents: [...this.state.parents, parent]});\n        }\n    }\n\n    addParentType = (type) => {\n        if(!this.state.parentTypes.includes(type)) {\n            this.setState({parentTypes: [...this.state.parentTypes, type]});\n        }\n    }\n\n    handleResize = () => {\n        this.setState({ windowWidth: window.innerWidth*0.98 });\n    }\n\n    componentDidMount() {\n        window.addEventListener(\"resize\", this.handleResize);\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener(\"resize\", this.handleResize);\n    }\n\n    loadPointData = (data) => {\n        data = data.map(x => new Delaunay.Point(x));\n        this.initialDots = data;\n        let dots = [];\n        let parents = [];\n        var dot;\n        for(dot of data) {\n            var parent;\n            for(parent of dot.parent) {\n                if(!parents.includes(parent)) {\n                    parents = [...parents, parent];\n                }\n            }\n            dot.x = parseInt(dot.x);\n            dot.y = parseInt(dot.y);\n            dots = [...dots, dot];\n        }\n        this.setState({dots: dots, parents: parents}, function() {\n            this.setState({triangles: Delaunay.triangulate(this.state.dots)})\n        });\n    }\n\n    includesPoint = (pointList, point) => {\n        for(const p of pointList) {\n            if(p.x === point.x && p.y === point.y) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    loadTriangleData = (data) => {\n        let points = [];\n        let parents = [];\n        for(const triangle of data) {\n            for(const point of triangle) {\n                let pointObj = new Delaunay.Point(point);\n                if(!this.includesPoint(points, pointObj)) {\n                    points = [...points, pointObj];\n                    for(const parent of pointObj.parent) {\n                        if(!parents.includes(parent)) {\n                            parents = [...parents, parent];\n                        }\n                    }\n                }\n            }\n        }\n        this.initialDots = points;\n        this.setState({dots: points, parents: parents}, function() {\n            this.setState({triangles: Delaunay.triangulate(this.state.dots)})\n        });\n    }\n\n    render() {\n        const { dots, triangles, testDots, landmarkTestData, parents, parentTypes, src} = this.state;\n\n        return (\n            <div id=\"matcher\">\n                <Prompt\n                  when={this.state.shouldBlockNavigation}\n                  message='You have unsaved changes, are you sure you want to leave?'\n                />\n                <ImageCoordinateCollector\n                backgroundImageUrl={src}\n                onLoadMap={this.onLoadPisteMap}\n                dots={dots}\n                triangles={triangles}\n                testDots={testDots}\n                landmarkTestData={landmarkTestData}\n                parents={parents}\n                parentTypes={parentTypes}\n                deleteDot={this.deleteDot}\n                saveDot={this.saveDot}\n                addDot={this.addDot}\n                addParent={this.addParent}\n                addParentType={this.addParentType}\n                dotRadius={2}\n                /><br/>\n                <div className=\"bottom-toolbox\">\n                    <FileForm\n                        imgSrc={this.state.src}\n                        points={this.state.dots}\n                        triangles={this.state.triangles}\n                        loadPointData={this.loadPointData}\n                        loadTriangleData={this.loadTriangleData}\n                        doLandmarkTest={this.doLandmarkTest}\n                        generateTestReport={this.generateTestReport}\n                        plotTestData={this.transformTestPoints}>\n                    </FileForm>\n                    <DotsInfo\n                        dots={this.state.dots}\n                        deleteDot={this.deleteDot}\n                        resetDots={this.resetDots}/>\n                </div>\n            </div>);\n    }\n}\n\nexport default CoordinateMatcher;\n","import '../styles/fileForm.css';\nimport React from 'react';\nimport {Row, Form, Button} from 'react-bootstrap';\nimport Container from 'react-bootstrap/Container';\n\nclass FileForm extends React.Component {\n\n    constructor(props) {\n        super(props);\n        const defaultFileType = \"json\";\n        let filename  = this.props.title;\n\n        this.fileNames = {\n            json: String(filename) + \".json\",\n            csv: String(filename) + \".csv\",\n        }\n\n        this.state = {\n            fileType: defaultFileType,\n            fileDownloadUrl: null,\n            resort: filename,\n        }\n    }\n\n    changeFileType = (event) => {\n        const value = event.target.value;\n        this.setState({fileType: value});\n    }\n\n    download = (event) => {\n        event.preventDefault();\n        let output;\n        let data = this.props.points;\n        if (this.state.fileType === \"json\") {\n            let points = data.map(point => ({\n                id: point.id,\n                name: point.name,\n                shortName: point.shortName,\n                areaId: point.areaId,\n                pisteMapCoordinates: {x: point.x, y: point.y}\n            }));\n\n            output = JSON.stringify(points, null, 4);\n        } else if (this.state.fileType === \"csv\") {\n            let contents = [];\n            contents.push ([\"id\", \"name\", \"shortName\", \"areaId\", \"x\", \"y\"]);\n            data.map(point => contents.push([point.id, point.name, point.shortName, point.areaId, point.x, point.y]));\n            output = this.makeCSV(contents);\n        }\n        const blob = new Blob([output]);\n        const fileDownloadUrl = URL.createObjectURL(blob);\n        this.setState ({fileDownloadUrl: fileDownloadUrl},\n          () => {\n            this.dofileDownload.click();\n            URL.revokeObjectURL(fileDownloadUrl);\n            this.setState({fileDownloadUrl: \"\"})\n        })\n    }\n\n    upload = (event) => {\n        event.preventDefault();\n        this.dofileUpload.click();\n    }\n\n    makeCSV = (content) => {\n        let csv = '';\n        content.forEach(value => {\n            value.forEach((item, i) => {\n                let innerValue = item === undefined ? '' : item.toString();\n                let result = innerValue.replace(/\"/g, '\"\"');\n                if (result.search(/(\"|,|\\n)/g) >= 0) {\n                    result = '\"' + result + '\"'\n                }\n                if (i > 0) {csv += ','}\n                    csv += result;\n            })\n            csv += '\\n';\n        });\n        return csv;\n    }\n\n    openFile = (evt) => {\n        const fileObj = evt.target.files[0];\n        const reader = new FileReader();\n\n        if(!(fileObj instanceof Blob)) return\n\n        let fileloaded = e => {\n            const fileContents = e.target.result;\n            try {\n                let json = JSON.parse(fileContents);\n                if(Array.isArray(json)) {\n                    this.props.loadPointData(json);\n                } else {\n                    if(json.hasOwnProperty('lifts')) {\n                        this.props.loadPointData(json['lifts']);\n                    } else if(json.hasOwnProperty('slopes')) {\n                        this.props.loadPointData(json['slopes']);\n                    } else if(json.hasOwnProperty('restaurants')) {\n                        this.props.loadPointData(json['restaurants']);\n                    } else if(json.hasOwnProperty('points')) {\n                        this.props.loadPointData(json['points']);\n                    } else {\n                        alert('Malformed JSON data, please see Docs');\n                    }\n                }\n\n            } catch(e) {\n                alert(e);\n            }\n        }\n        fileloaded = fileloaded.bind(this);\n        reader.onload = fileloaded;\n        reader.readAsText(fileObj);\n    }\n\n    render() {\n        return (\n            <div id=\"fileForm\">\n                <Container>\n                    <Row className=\"justify-content-md-center\">\n                        <Button onClick={this.upload} className=\"fileForm-child\">Upload</Button>\n                        <input type=\"file\" className=\"hidden\"\n                            multiple={false}\n                            accept=\".json,application/json\"\n                            onChange={evt => this.openFile(evt)}\n                            ref={e=>this.dofileUpload = e}/>\n\n                        <Form.Control as=\"select\" name=\"fileType\" className=\"fileForm-child\"\n                            onChange={this.changeFileType}\n                            value={this.state.fileType}>\n                            <option value=\"csv\">CSV</option>\n                            <option value=\"json\">JSON</option>\n                        </Form.Control>\n\n                        <Button onClick={this.download} className=\"fileForm-child\">\n                            Download\n                        </Button>\n                        <a className=\"hidden\"\n                            download={this.fileNames[this.state.fileType]}\n                            href={this.state.fileDownloadUrl}\n                            ref={e=>this.dofileDownload = e}>download it</a>\n                    </Row>\n                </Container>\n\n            </div>);\n    }\n}\n\nexport default FileForm;\n","import '../styles/geoCoordSelector.css';\nimport React from 'react';\nimport Backdrop from '../image-dots/backdrop.js';\nimport {Button, Form, Row, Col} from 'react-bootstrap';\nimport Card from 'react-bootstrap/Card';\n\nclass InputModal extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            id: this.props.currentDot.id,\n            name: this.props.currentDot.name,\n            shortName: this.props.currentDot.shortName,\n            areaId: this.props.currentDot.areaId\n        }\n    }\n\n    clearFields = () => {\n        this.setState({\n            id: '',\n            name: '',\n            shortName: '',\n            areaId: ''\n        });\n    }\n\n    onKeyPress = (e) => {\n        if(e.key === 'Enter') {\n            this.props.handleSave();\n        }\n    }\n\n    handleInputChange = (e) => {\n        const target = e.target;\n        const value = target.value;\n        const name = target.name;\n\n        this.setState({\n          [name]: value\n        });\n    }\n\n    render() {\n        const {handleClose} = this.props;\n        const wW = window.innerWidth;\n        var left = this.props.posX > wW/2 ? 0 : Math.round(wW*0.525);\n        return (\n            <div id=\"geoCoordSelector\">\n\n                    <div className=\"coord-selector\">\n                    <Backdrop show={true} clicked={() => this.props.handleSave(this.state)} />\n                    <Card className=\"modal-body\"\n                    style={{\n                        top: 10,\n                        left: left}}>\n                        <Card.Body>\n                            <Card.Title>Edit point data</Card.Title>\n                            <Form>\n                                <Form.Group as={Row}>\n                                    <Form.Label column>x</Form.Label>\n                                    <Col sm={4}>\n                                        <Form.Control type=\"number\" defaultValue={this.props.currentDot.x}\n                                        onChange={(e) => {this.props.updateCurrentDot({x: e.target.value})}}/>\n                                    </Col>\n                                    <Form.Label column>y</Form.Label>\n                                    <Col sm={4}>\n                                        <Form.Control type=\"number\" defaultValue={this.props.currentDot.y}\n                                        onChange={(e) => {this.props.updateCurrentDot({y: e.target.value})}}/>\n                                    </Col>\n                                </Form.Group>\n\n                                <Form.Group as={Row}>\n                                    <Form.Label column >\n                                      id\n                                    </Form.Label>\n                                    <Col sm={8}>\n                                      <Form.Control type=\"text\"\n                                      placeholder=\"Enter id...\"\n                                      name=\"id\"\n                                      defaultValue={this.state.id}\n                                      onChange={this.handleInputChange}\n                                      autoFocus/>\n                                    </Col>\n                                </Form.Group>\n\n                                <Form.Group as={Row}>\n                                    <Form.Label column >\n                                      name\n                                    </Form.Label>\n                                    <Col sm={8}>\n                                      <Form.Control type=\"text\"\n                                      placeholder=\"Enter name...\"\n                                      name=\"name\"\n                                      defaultValue={this.state.name}\n                                      onChange={this.handleInputChange}/>\n                                    </Col>\n                                </Form.Group>\n\n                                <Form.Group as={Row}>\n                                    <Form.Label column>\n                                      shortName\n                                    </Form.Label>\n                                    <Col sm={8}>\n                                      <Form.Control type=\"text\"\n                                      placeholder=\"Enter shortName...\"\n                                      name=\"shortName\"\n                                      defaultValue={this.state.shortName}\n                                      onChange={this.handleInputChange}/>\n                                    </Col>\n                                </Form.Group>\n\n                                <Form.Group as={Row}>\n                                    <Form.Label column >\n                                      areaId\n                                    </Form.Label>\n                                    <Col sm={8}>\n                                      <Form.Control type=\"text\"\n                                      placeholder=\"Enter areaId...\"\n                                      name=\"areaId\"\n                                      defaultValue={this.state.areaId}\n                                      onChange={this.handleInputChange}\n                                      onKeyPress={this.onKeyPress} />\n                                    </Col>\n                                </Form.Group>\n                            </Form>\n                        </Card.Body>\n                        <Card.Footer>\n                        <Button variant=\"secondary\" onClick={handleClose}>Delete</Button>\n                            <Button variant=\"secondary\" onClick={() => this.props.handleSave(this.state)}>Close</Button>\n                            <Button variant=\"primary\" onClick={() => this.props.handleSave(this.state)}>Save</Button>\n                        </Card.Footer>\n                    </Card>\n                    </div>\n            </div>);\n    }\n}\n\nexport default InputModal;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Dot from '../image-dots/Dot';\nimport InputModal from './InputModal.js';\n\nconst propTypes = {\n  deleteDot: PropTypes.func.isRequired,\n  addDot: PropTypes.func.isRequired,\n  resetDots: PropTypes.func,\n  dotStyles: PropTypes.object,\n  dotRadius: PropTypes.number,\n  backgroundImageUrl: PropTypes.string,\n  styles: PropTypes.object,\n  width: PropTypes.number,\n  height: PropTypes.number,\n  pixelCoordinates: PropTypes.bool,\n};\n\nconst defaultProps = {\n  pixelCoordinates: true,\n  backgroundSize: 'cover',\n};\n\nexport default class ImageCoordinateCollector extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            grabbing: false,\n            dimensions: {},\n            currentDot: {},\n        };\n    }\n\n    onLoadPisteMap = ({target: img}) => {\n        this.setState({\n            dimensions: {\n                renderWidth: img.offsetWidth,\n                renderHeight: img.offsetHeight,\n                realWidth: img.naturalWidth,\n                realHeight: img.naturalHeight,\n            }\n        });\n    }\n\n    onMouseUp = (e) => {\n        const bounds = e.target.getBoundingClientRect();\n        let {dimensions, currentDot} = this.state;\n        let x = Math.round(this.renderedToRealCoord(e.clientX - bounds.left, dimensions.renderWidth, dimensions.realWidth));\n        let y = Math.round(this.renderedToRealCoord(e.clientY - bounds.top, dimensions.renderHeight, dimensions.realHeight))\n        if(Object.keys(currentDot).length === 0) {\n            let dot = {\n                x: x,\n                y: y,\n            };\n\n            this.setState({\n                grabbing: false,\n                showModal: true,\n                currentDot: dot,\n            });\n        }\n\n    }\n\n    updateCurrentDot = (dot) => {\n        let currentDot = this.state.currentDot;\n        this.setState({\n            currentDot: {...currentDot,...dot},});\n    }\n\n    moveDot = (index) => {\n        let dot = this.props.dots[index];\n        this.setState({\n            grabbing: true,\n            currentDot: dot,\n            showModal: true,\n        });\n        this.props.deleteDot(index);\n    }\n\n    resetDots = () => {\n        this.props.resetDots();\n    }\n\n    // Translate from rendered coordinates to real piste map coordinates\n    renderedToRealCoord = (coord, renderedLength, realLength) => {\n        return (coord/renderedLength)*realLength;\n    }\n\n    realToRenderedCoord = (coord, renderedLength, realLength) => {\n        return (coord/realLength)*renderedLength;\n    }\n\n    handleShowModal = () => {\n        this.setState({showModal: true});\n    }\n\n    handleCloseModal = () => {\n        this.setState({grabbing: false, showModal: false, currentDot: {}});\n    }\n\n    handleSave = (data) => {\n        let currentDot = this.state.currentDot;\n        this.setState({\n            currentDot: {...currentDot,...data},}, function() {\n                this.props.saveDot(this.state.currentDot);\n                this.handleCloseModal();\n            });\n    }\n\n    render() {\n        const {grabbing, currentDot} = this.state;\n        const dim = this.state.dimensions;\n        const {dots, backgroundImageUrl, dotRadius} = this.props;\n        const grabClass = grabbing ? 'react-image-dot__grabbing' : '';\n\n        return (\n        <div id=\"react-image-dot\">\n\n            <div className={`react-image-dot__wrapper ${grabClass} no-select`}\n            onMouseUp={this.onMouseUp}\n            width={dim.realWidth}\n            height={dim.realHeight}>\n\n                <img\n                id=\"pistemap-img\"\n                src={backgroundImageUrl} alt=\"Piste map\"\n                width={dim.realWidth} onLoad={this.onLoadPisteMap} />\n\n                {dots.map((dot, i) =>\n                    <Dot\n                    dotX={Math.round(this.realToRenderedCoord(dot.x, dim.renderWidth, dim.realWidth))}\n                    dotY={Math.round(this.realToRenderedCoord(dot.y, dim.renderHeight, dim.realHeight))}\n                    i={i}\n                    styles={{\n                        boxShadow: '0px 0px 0px 2px lime',\n                        backgroundColor: 'magenta',\n                    }}\n                    moveDot={this.moveDot}\n                    dotRadius={dotRadius}\n                    key={i}\n                    />)}\n\n                {Object.keys(currentDot).length === 0 ? null: <Dot\n                    dotX={Math.round(this.realToRenderedCoord(currentDot.x, dim.renderWidth, dim.realWidth))}\n                    dotY={Math.round(this.realToRenderedCoord(currentDot.y, dim.renderHeight, dim.realHeight))}\n                    i={0}\n                    styles={{\n                        boxShadow: '0px 0px 0px 2px magenta',\n                        backgroundColor: 'lime',\n                    }}\n                    moveDot={() => console.log('try to move temp dot')}\n                    dotRadius={dotRadius}\n                    key={-1}\n                    />}\n            </div>\n            number of points: {this.props.dots.length}\n            {\n                this.state.showModal ? <InputModal\n                dimensions={dim}\n                posX={this.realToRenderedCoord(currentDot.x, dim.renderWidth, dim.realWidth)}\n                handleClose={this.handleCloseModal}\n                handleSave={this.handleSave}\n                updateCurrentDot={this.updateCurrentDot}\n                currentDot={this.state.currentDot}\n                /> : null\n            }\n\n            {this.props.resetDots &&\n            <button onClick={this.resetDots}>Reset</button>}\n        </div>\n        );\n    }\n}\n\nImageCoordinateCollector.propTypes = propTypes;\nImageCoordinateCollector.defaultProps = defaultProps;\n","import React from 'react';\nimport {Button} from 'react-bootstrap';\nimport Table from 'react-bootstrap/Table';\n\nexport default function DotsInfo({dots, deleteDot, resetDots}) {\n  return (\n      <div className=\"dotsinfo\">\n          <div className=\"row justify-content-center\">\n            <Table hover className=\"dotsinfotable \">\n                <thead>\n                    <tr>\n                    <th>#</th>\n                    <th>id</th>\n                    <th>shortName</th>\n                    <th>x</th>\n                    <th>y</th>\n                    <th>name</th>\n                    <th>areaId</th>\n                    <th>delete</th>\n                    </tr>\n                </thead>\n                <tbody>\n                {dots.map((dot, i) => {\n                    return (<tr key={i}>\n                            <td>{i} </td>\n                            <td>{dot.id}</td>\n                            <td>{dot.shortName}</td>\n                            <td>{dot.x}</td>\n                            <td>{dot.y}</td>\n                            <td>{dot.name}</td>\n                            <td>{dot.areaId}</td>\n                            <td><Button variant='danger' onClick={() => deleteDot(i)}>×</Button></td>\n                    </tr>);})}\n                </tbody>\n              </Table>\n          </div>\n          <Button variant='success' onClick={() => resetDots()}>Reset</Button>\n      </div>\n\n  );\n}\n","import '../styles/image-dots.css';\nimport React from 'react';\nimport FileForm from './FileForm.js';\nimport ImageCoordinateCollector from './ImageCoordinateCollector.js';\nimport DotsInfo from './DotsInfo.js';\nimport { Prompt } from 'react-router';\n\nclass MapCoordCollector extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.initialDots = [];\n        this.state = {\n            title: this.props.resort.title,\n            src: this.props.resort.src,\n            dots: this.initialDots,\n            windowWidth: window.innerWidth*0.98,\n            shouldBlockNavigation: false,\n        }\n    }\n\n    componentDidUpdate() {\n        if (this.state.shouldBlockNavigation) {\n            window.onbeforeunload = () => true\n        } else {\n            window.onbeforeunload = undefined\n        }\n    }\n\n    // Translate from rendered coordinates to real piste map coordinates\n    renderedToRealCoord(coord, renderedLength, realLength) {\n        return (coord/renderedLength)*realLength;\n    }\n\n    realToRenderedCoord(coord, renderedLength, realLength) {\n        return (coord/realLength)*renderedLength;\n    }\n\n    addDot = (dot) => {\n        let dots = this.state.dots;\n        this.setState({\n            dots: [...dots, dot],\n            shouldBlockNavigation: true,\n        });\n    }\n\n    saveDot = (dot) => {\n        let {dots} = this.state;\n        this.deleteDot(dots.length-1);\n        this.addDot(dot);\n    }\n\n    deleteDot = (index) => {\n        this.setState({\n            dots: this.state.dots.filter((e, i) => {return i !== index;}),\n        });\n    }\n\n    resetDots = () => {\n        this.setState({\n            dots: this.initialDots,\n        });\n    }\n\n    handleResize = () => {\n        this.setState({ windowWidth: window.innerWidth*0.98 });\n    }\n\n    componentDidMount() {\n        window.addEventListener(\"resize\", this.handleResize);\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener(\"resize\", this.handleResize);\n    }\n\n    loadPointData = (data) => {\n        let dots = data.map(point =>\n            ({  id: point.id,\n                name: point.name,\n                shortName: point.shortName,\n                areaId: point.areaId,\n                x: point.pisteMapCoordinates ? point.pisteMapCoordinates.x : 0,\n                y: point.pisteMapCoordinates ? point.pisteMapCoordinates.y : 0\n            })\n        );\n        this.initialDots = dots;\n        this.setState({dots: dots});\n    }\n\n    render() {\n        const { dots, src} = this.state;\n\n        return (\n            <div id=\"matcher\">\n\n                <Prompt\n                  when={this.state.shouldBlockNavigation}\n                  message='You have unsaved changes, are you sure you want to leave?'\n                />\n                <ImageCoordinateCollector\n                backgroundImageUrl={src}\n                onLoadMap={this.onLoadPisteMap}\n                dots={dots}\n                deleteDot={this.deleteDot}\n                saveDot={this.saveDot}\n                addDot={this.addDot}\n                dotRadius={10}\n                />\n                <div className=\"bottom-toolbox\">\n                {this.props.resort.title}\n                    <FileForm\n                        imgSrc={this.state.src}\n                        title={this.state.title}\n                        points={this.state.dots}\n                        loadPointData={this.loadPointData}/>\n                    <DotsInfo dots={this.state.dots} deleteDot={this.deleteDot} resetDots={this.resetDots}></DotsInfo>\n                </div>\n            </div>);\n    }\n}\n\nexport default MapCoordCollector;\n","const images = [\n    { id: 0, src: './assets/are.png', title: 'Åre'},\n    { id: 1, src: './assets/bjornen.png', title: 'Åre Björnen'},\n    { id: 2, src: './assets/duved.png', title: 'Duved'},\n    { id: 3, src: './assets/bjornrike.png', title: 'Björnrike'},\n    { id: 4, src: './assets/vemdalsskalet.png', title: 'Vemdalsskalet'},\n    { id: 5, src: './assets/hemsedal.png', title: 'Hemsedal'},\n    { id: 6, src: './assets/salen-lindvallen.png', title: 'Lindvallen'},\n    { id: 7, src: './assets/salen-hogfjallet.png', title: 'Högfjället'},\n    { id: 8, src: './assets/salen-hundfjallet.png', title: 'Hundfjället'}\n];\n\nexport default images;\n","import React from 'react';\nimport {Container, Row, Col} from 'react-bootstrap';\n\nfunction Docs(props) {\n    return (<div id=\"docs\" >\n                <div className=\"page-content\">\n                    <h1>\n                        Documentation\n                    </h1>\n                    <h2>Mode 1: Georeferencing Tool</h2>\n                    <p>\n                        Match piste map coordinates (x, y) with geographic coordinates (lat, lng). You can either upload anchor point data in a flat list structure or as a list of triangles as seen in the snippets below. You may also include additional fields such as:\n                        <ul>\n                            <li>\"parent\" (list of strings)</li>\n                            <li>\"parentType\" - holding one of the following values:\n                                <ul>\n                                    <li>\"Piste\"</li>\n                                    <li>\"Terrain\"</li>\n                                    <li>\"Lift\"</li>\n                                    <li>\"Restaurant\"</li>\n                                </ul>\n                            </li>\n                            <li>\"note\"</li>\n                        </ul>\n                    </p>\n\n                    <Container>\n                      <Row>\n                        <Col>\n                            <Row>\n                                <b>Flat list structure:</b>\n                            </Row>\n                            <Row>\n                            <div className=\"json-snippet\">\n                                <pre>{JSON.stringify({\n                                \"pistePoints\": [\n                                    {\n                                        \"x\": 61,\n                                        \"y\": 607,\n                                        \"lat\": 63.43041227213233,\n                                        \"lng\": 13.01626234486621,\n                                    },\n                                    {\n                                        \"x\": 267,\n                                        \"y\": 533,\n                                        \"lat\": 63.4299305329716,\n                                        \"lng\": 13.034080668125355,\n                                    }\n                                ]\n\n                            }, null, 2)}</pre>\n                            </div>\n                            </Row>\n                        </Col>\n                        <Col>\n                            <Row><b>Triangle list structure:</b></Row>\n                            <Row>\n                            <div className=\"json-snippet\">\n                                <pre>{JSON.stringify({\n                                    \"triangles\": [\n                                        [\n                                            {\n                                                \"x\": 1131,\n                                                \"y\": 416,\n                                                \"lat\": 63.42330305619766,\n                                                \"lng\": 13.07236033239243\n                                            },\n                                            {\n                                                \"x\": 1326,\n                                                \"y\": 507,\n                                                \"lat\": 63.42085720586304,\n                                                \"lng\": 13.078540399463403\n                                            },\n                                            {\n                                                \"x\": 1293,\n                                                \"y\": 402,\n                                                \"lat\": 63.423555184990285,\n                                                \"lng\": 13.078864772230249\n                                            }\n                                        ]\n                            ]}, null, 2)}</pre>\n                            </div>\n                            </Row>\n                        </Col>\n                      </Row>\n                    </Container>\n                    <br/>\n                    <p>\n                    When three or more anchor points have been collected, the tool will start triangulating and building transformation matrices. The triangle edges will be drawn both on the piste map and the Google Map. You will also notice that the marker in Google Maps will be placed at the location where the tool estimates the geographic coordinates should be. This is to improve the ease of use as well as giving you a sense of how accurate your positioning mesh is at each step in the construction process.\n\n                    <br/><br/>\n                    <b>DO NOT</b> forget to download the triangle data when you're done!\n                    </p>\n                    <h2>Mode 2: Only Piste Map Coordinates</h2>\n                    <p>\n                        In the second mode, you can create, upload, and download piste map coordinate data as lists of points.\n                        When uploading a JSON file, the tool will load all the items in an array, or an object with one of the following names containing an array:\n                        <ul>\n                            <li>\"points\" (seen in example below)</li>\n                            <li>\"restaurants\"</li>\n                            <li>\"slopes\"</li>\n                            <li>\"lifts\"</li>\n                        </ul>\n                        Note: The tool will load all the points in the uploaded file regardless of the destination id of each point. Therefore, it is better to sort the points into files specific to each resort.\n                    </p>\n                    <Container>\n                      <Row>\n                        <Col>\n                            <Row>\n                                <b>Flat list structure:</b>\n                            </Row>\n                            <Row>\n                            <div className=\"json-snippet\">\n                                <pre>{JSON.stringify(\n                                    [\n                                        {\n                                            \"id\": \"193\",\n                                            \"name\": \"Adam\",\n                                            \"shortName\": \"1\",\n                                            \"areaId\": \"lindvallen\",\n                                            \"pisteMapCoordinates\": {\n                                                \"x\": 145,\n                                                \"y\": 537\n                                            }\n                                        },\n                                        {\n                                            \"id\": \"194\",\n                                            \"name\": \"Pernilla\",\n                                            \"shortName\": \"2\",\n                                            \"areaId\": \"lindvallen\",\n                                            \"pisteMapCoordinates\": {\n                                                \"x\": 281,\n                                                \"y\": 535\n                                            }\n                                        },\n                                    ], null, 2)}</pre>\n                            </div>\n                            </Row>\n                        </Col>\n                        <Col>\n                            <Row><b>Object containing an array</b></Row>\n                            <Row>\n                            <div className=\"json-snippet\">\n                                <pre>{JSON.stringify({\n                                    \"points\": [\n                                        {\n                                            \"id\": \"193\",\n                                            \"name\": \"Adam\",\n                                            \"shortName\": \"1\",\n                                            \"areaId\": \"lindvallen\",\n                                            \"pisteMapCoordinates\": {\n                                                \"x\": 145,\n                                                \"y\": 537\n                                            }\n                                        },\n                                        {\n                                            \"id\": \"194\",\n                                            \"name\": \"Pernilla\",\n                                            \"shortName\": \"2\",\n                                            \"areaId\": \"lindvallen\",\n                                            \"pisteMapCoordinates\": {\n                                                \"x\": 281,\n                                                \"y\": 535\n                                            }\n                                        },\n                                    ]}, null, 2)}</pre>\n                            </div>\n                            </Row>\n                        </Col>\n                      </Row>\n                    </Container>\n                </div>\n            </div>\n    );\n}\n\nexport default Docs;\n","import React from 'react';\n\nfunction About(props) {\n    return (<div id=\"about\" >\n                <div className=\"page-content\">\n                    <h1>\n                        About\n                    </h1>\n                    <p>\n                        This georeferencing tool comes with two different collection modes.\n                        <br/><br/>\n                        The standard mode matches geographic coordinates (lat, lng) with map coordinates (x, y).\n                        When enough points have been collected, it will make suggestions on where to place the geographic marker for each piste map coordinate.\n                        The exported file structure is in triangle format.\n                        <br/><br/>\n                        The other mode collects only piste map coordinates (x, y).\n                        For each collected coordinate, you may also specify id, name, shortName, and area id.\n                    </p>\n                </div>\n            </div>\n    );\n}\n\nexport default About;\n","import './styles/App.css';\nimport React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport MapForm from './mapForm.js';\nimport CoordinateMatcher from './geomatcher/CoordinateMatcher.js';\nimport MapCoordCollector from './mapcoords-only/MapCoordCollector.js';\nimport images from './images';\nimport Docs from './docs.js';\nimport About from './about.js';\nimport {Navbar, Nav} from 'react-bootstrap';\nimport {\n    HashRouter as Router,\n    Link,\n    Switch,\n    Route,\n    Redirect,\n  } from \"react-router-dom\";\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            resortObject: null,\n            useGeoCoords: true,\n        };\n    }\n\n    setResort = (choice, useGeoCoords) => {\n        this.setState({\n            resortObject: images[choice],\n            useGeoCoords: useGeoCoords\n        });\n    }\n\n    uploadMap = (file, useGeoCoords) => {\n        let filename = file.name;\n        let title = filename.substr(0, filename.lastIndexOf('.'));\n        this.setState({\n            resortObject: { src: file.url, title: title},\n            useGeoCoords: useGeoCoords,\n        });\n    }\n    \n    render() {\n        return (\n            <div className=\"App\">\n                <Router basename=\"/\">\n                    <Navbar className=\"navbar\" bg=\"light\" variant=\"light\">\n                        <Link className=\"navbar-brand\" to=\"/\">\n                            <div className=\"header\">\n                                <h1>Georeferencing Tool</h1>\n                            </div>\n                        </Link>\n                        <Nav className=\"mr-auto\">\n                            <Link className=\"nav-link\" to=\"/docs\">Docs</Link>\n                            <Link className=\"nav-link\" to=\"/about\">About</Link>\n                        </Nav>\n                        { this.state.resortObject ?\n                            <Navbar.Text>\n                                {this.state.resortObject.title}\n                            </Navbar.Text> : null }\n\n                    </Navbar>\n                    <Switch>\n                        <Route exact path=\"/\">\n                            <MapForm\n                            resorts={images}\n                            onSelect={this.setResort}\n                            onUpload={this.uploadMap}/>\n                        </Route>\n                        <Route path=\"/docs\">\n                            <Docs />\n                        </Route>\n                        <Route path=\"/about\">\n                            <About />\n                        </Route>\n                        <Route path=\"/matcher\">\n                        {(() => {\n                              if (!this.state.resortObject)\n                                 return <Redirect to={{ pathname: '/', state: { from: this.props.location } }} />\n                              else if (this.state.useGeoCoords)\n                                 return <CoordinateMatcher resort={this.state.resortObject}/>\n                              else\n                                 return <MapCoordCollector resort={this.state.resortObject}/>\n                          })()}\n                        </Route>\n                    </Switch>\n                </Router>\n            </div>\n        );\n    }\n\n\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\n\nimport ReactDOM from 'react-dom';\nimport './styles/index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}