{"version":3,"sources":["mapForm.js","image-dots/FileForm.js","image-dots/Dot.js","image-dots/backdrop.js","image-dots/InputModal.js","image-dots/ImageCoordinateCollector.js","image-dots/DotsInfo.js","image-dots/MapCoordCollector.js","images.js","docs.js","about.js","App.js","reportWebVitals.js","index.js"],"names":["MapForm","props","handleDropdownChange","e","setState","val","target","value","handleStart","state","uploadedMap","useGeoCoords","onSelect","onUpload","handleFileChange","files","URL","createObjectURL","resorts","id","className","Container","Form","Label","Group","controlId","Control","as","onChange","this","map","resort","title","File","multiple","accept","src","alt","to","onClick","React","Component","FileForm","changeFileType","event","fileType","download","output","preventDefault","data","points","point","name","shortName","areaId","pisteMapCoordinates","x","y","JSON","stringify","contents","push","makeCSV","blob","Blob","fileDownloadUrl","dofileDownload","click","revokeObjectURL","upload","dofileUpload","content","csv","forEach","item","i","result","undefined","toString","replace","search","openFile","evt","fileObj","reader","FileReader","fileloaded","fileContents","json","parse","hasOwnProperty","loadPointData","alert","bind","onload","readAsText","downloadTestReport","console","log","results","generateTestReport","testReport","doTestReportDownload","imgSrc","filename","substr","lastIndexOf","length","fileNames","String","Row","Col","md","Button","href","ref","type","Dot","onMouseDown","stopPropagation","moveDot","dotX","dotY","styles","dotRadius","style","height","width","transform","top","left","defaultProps","Backdrop","show","clicked","InputModal","clearFields","onKeyPress","key","handleSave","handleInputChange","currentDot","handleClose","wW","window","innerWidth","posX","Math","round","Card","Body","Title","column","sm","defaultValue","updateCurrentDot","placeholder","Footer","variant","ImageCoordinateCollector","onLoadPisteMap","img","dimensions","renderWidth","offsetWidth","renderHeight","offsetHeight","realWidth","naturalWidth","realHeight","naturalHeight","onMouseUp","bounds","getBoundingClientRect","renderedToRealCoord","clientX","clientY","Object","keys","dot","grabbing","showModal","index","dots","deleteDot","resetDots","coord","renderedLength","realLength","realToRenderedCoord","handleShowModal","handleCloseModal","saveDot","dim","backgroundImageUrl","grabClass","onLoad","boxShadow","backgroundColor","pixelCoordinates","backgroundSize","DotsInfo","Table","hover","size","MapCoordCollector","addDot","filter","initialDots","handleResize","windowWidth","addEventListener","removeEventListener","onLoadMap","parents","images","Docs","About","App","setResort","choice","resortObject","uploadMap","file","Navbar","bg","Brand","Nav","Link","exact","path","pathname","from","location","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"8YAqEeA,E,kDA/DX,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IAOVC,qBAAuB,SAACC,GACpB,EAAKC,SAAS,CAACC,IAAKF,EAAEG,OAAOC,SATd,EAYnBC,YAAc,WAAO,IAAD,EACyB,EAAKC,MAAxCC,EADU,EACVA,YAAaL,EADH,EACGA,IAAKM,EADR,EACQA,aACN,MAAfD,EACC,EAAKT,MAAMW,SAASP,EAAKM,GAEzB,EAAKV,MAAMY,SAASH,EAAaC,IAjBtB,EAqBnBG,iBAAmB,SAACX,GACQ,MAArBA,EAAEG,OAAOS,MAAM,IAClB,EAAKX,SAAS,CACVM,YAAaM,IAAIC,gBAAgBd,EAAEG,OAAOS,MAAM,OAtBpD,EAAKN,MAAQ,CACTJ,IAAK,EAAKJ,MAAMiB,QAAQ,GAAGC,GAC3BT,YAAa,MAJF,E,qDA6Bf,OACI,qBAAKS,GAAG,UAAR,SACI,qBAAKC,UAAU,kBAAf,SACI,cAACC,EAAA,EAAD,CAAWD,UAAU,kBAArB,SACI,eAACE,EAAA,EAAD,WACI,cAACA,EAAA,EAAKC,MAAN,CAAYH,UAAU,aAAtB,sBACA,eAACE,EAAA,EAAKE,MAAN,CAAYC,UAAU,6BAAtB,UACI,cAACH,EAAA,EAAKC,MAAN,uCACA,cAACD,EAAA,EAAKI,QAAN,CAAcC,GAAG,SACjBC,SAAUC,KAAK3B,qBADf,SAEC2B,KAAK5B,MAAMiB,QAAQY,KAAK,SAAAC,GAAM,OAC3B,wBAA2BxB,MAAOwB,EAAOZ,GAAzC,SAA8CY,EAAOC,OAAxCD,EAAOC,YAGxB,uBACA,cAACV,EAAA,EAAKW,KAAN,CAAWL,SAAUC,KAAKf,iBAC1BoB,UAAU,EACVC,OAAO,0BACP,uBACCN,KAAKpB,MAAMC,YACR,sBAAKU,UAAU,gBAAf,UACI,qBAAKgB,IAAKP,KAAKpB,MAAMC,YAAa2B,IAAI,YACtC,uBAAK,0BACA,QAEb,cAAC,IAAD,CAAMC,GAAG,WAAWC,QAASV,KAAKrB,YAAaY,UAAU,kBAAzD,iC,GAvDVoB,IAAMC,W,wDC8JbC,E,kDA5JX,WAAYzC,GAAQ,IAAD,uBACf,cAAMA,IAkBV0C,eAAiB,SAACC,GACd,IAAMrC,EAAQqC,EAAMtC,OAAOC,MAC3B,EAAKH,SAAS,CAACyC,SAAUtC,KArBV,EAwBnBuC,SAAW,SAACF,GAER,IAAIG,EADJH,EAAMI,iBAEN,IAAIC,EAAO,EAAKhD,MAAMiD,OACtB,GAA4B,SAAxB,EAAKzC,MAAMoC,SAAqB,CAChC,IAAIK,EAASD,EAAKnB,KAAI,SAAAqB,GAAK,MAAK,CAC5BhC,GAAIgC,EAAMhC,GACViC,KAAMD,EAAMC,KACZC,UAAWF,EAAME,UACjBC,OAAQH,EAAMG,OACdC,oBAAqB,CAACC,EAAGL,EAAMK,EAAGC,EAAGN,EAAMM,OAE/CV,EAASW,KAAKC,UAAU,CAACT,OAAQA,GAAS,KAAM,QAC7C,GAA4B,QAAxB,EAAKzC,MAAMoC,SAAoB,CACtC,IAAIe,EAAW,GACfA,EAASC,KAAM,CAAC,KAAM,OAAQ,YAAa,SAAU,IAAK,MAC1DZ,EAAKnB,KAAI,SAAAqB,GAAK,OAAIS,EAASC,KAAK,CAACV,EAAMhC,GAAIgC,EAAMC,KAAMD,EAAME,UAAWF,EAAMG,OAAQH,EAAMK,EAAGL,EAAMM,OACrGV,EAAS,EAAKe,QAAQF,GAE1B,IAAMG,EAAO,IAAIC,KAAK,CAACjB,IACjBkB,EAAkBjD,IAAIC,gBAAgB8C,GAC5C,EAAK3D,SAAU,CAAC6D,gBAAiBA,IAC/B,WACE,EAAKC,eAAeC,QACpBnD,IAAIoD,gBAAgBH,GACpB,EAAK7D,SAAS,CAAC6D,gBAAiB,SAjDrB,EAqDnBI,OAAS,SAACzB,GACNA,EAAMI,iBACN,EAAKsB,aAAaH,SAvDH,EA0DnBL,QAAU,SAACS,GACP,IAAIC,EAAM,GAaV,OAZAD,EAAQE,SAAQ,SAAAlE,GACZA,EAAMkE,SAAQ,SAACC,EAAMC,GACjB,IACIC,QADsBC,IAATH,EAAqB,GAAKA,EAAKI,YACxBC,QAAQ,KAAM,MAClCH,EAAOI,OAAO,cAAgB,IAC9BJ,EAAS,IAAMA,EAAS,KAExBD,EAAI,IAAIH,GAAO,KACfA,GAAOI,KAEfJ,GAAO,QAEJA,GAxEQ,EA2EnBS,SAAW,SAACC,GACR,IAAMC,EAAUD,EAAI5E,OAAOS,MAAM,GAC3BqE,EAAS,IAAIC,WAEnB,GAAKF,aAAmBnB,KAAxB,CAEA,IAAIsB,EAAa,SAAAnF,GACb,IAAMoF,EAAepF,EAAEG,OAAOsE,OAC9B,IACI,IAAIY,EAAO9B,KAAK+B,MAAMF,GACnBC,EAAKE,eAAe,SACnB,EAAKzF,MAAM0F,cAAcH,EAAI,OACvBA,EAAKE,eAAe,UAC1B,EAAKzF,MAAM0F,cAAcH,EAAI,QACvBA,EAAKE,eAAe,eAC1B,EAAKzF,MAAM0F,cAAcH,EAAI,aAE7BI,MAAM,4EAEZ,MAAMzF,GACJyF,MAAMzF,KAGdmF,EAAaA,EAAWO,KAAX,gBACbT,EAAOU,OAASR,EAChBF,EAAOW,WAAWZ,KApGH,EAuGnBa,mBAAqB,SAACpD,GAClBqD,QAAQC,IAAI,0BACZtD,EAAMI,iBACN,IAAImD,EAAU,EAAKlG,MAAMmG,qBACrBrD,EAASW,KAAKC,UAAU,CAAC0C,WAAYF,GAAU,KAAM,GAEnDpC,EAAO,IAAIC,KAAK,CAACjB,IACjBkB,EAAkBjD,IAAIC,gBAAgB8C,GAC5C,EAAK3D,SAAU,CAAC6D,gBAAiBjD,IAAIC,gBAAgB8C,KACnD,WACE,EAAKuC,qBAAqBnC,QAC1BnD,IAAIoD,gBAAgBH,GACpB,EAAK7D,SAAS,CAAC6D,gBAAiB,SAjHpC,IACIsC,EAAS,EAAKtG,MAAMsG,OACpBC,EAAWD,EAAOE,OAAOF,EAAOG,YAAY,KAAK,EAAGH,EAAOI,QAJhD,OAKfH,EAAWA,EAASC,OAAO,EAAGD,EAASE,YAAY,MAEnD,EAAKE,UAAY,CACbpB,KAAMqB,OAAOL,GAAY,QACzBhC,IAAKqC,OAAOL,GAAY,QAG5B,EAAK/F,MAAQ,CACToC,SAXoB,OAYpBoB,gBAAiB,KACjBlC,OAAQyE,GAfG,E,qDAuHT,IAAD,OACL,OACI,qBAAKrF,GAAG,WAAR,SACI,cAACE,EAAA,EAAD,UACI,eAACyF,EAAA,EAAD,CAAK1F,UAAU,4BAAf,UACI,cAAC2F,EAAA,EAAD,CAAKC,GAAG,OAAR,SACI,eAAC1F,EAAA,EAAKI,QAAN,CAAcC,GAAG,SAASyB,KAAK,WAAWhC,UAAU,iBAChDQ,SAAUC,KAAKc,eACfpC,MAAOsB,KAAKpB,MAAMoC,SAFtB,UAGI,wBAAQtC,MAAM,MAAd,iBACA,wBAAQA,MAAM,OAAd,uBAGR,eAACwG,EAAA,EAAD,CAAKC,GAAG,OAAR,UACI,cAACC,EAAA,EAAD,CAAQ1E,QAASV,KAAKiB,SAAU1B,UAAU,iBAA1C,sBAGA,mBAAGA,UAAU,SACT0B,SAAUjB,KAAK+E,UAAU/E,KAAKpB,MAAMoC,UACpCqE,KAAMrF,KAAKpB,MAAMwD,gBACjBkD,IAAK,SAAAhH,GAAC,OAAE,EAAK+D,eAAiB/D,GAHlC,4BAKJ,eAAC4G,EAAA,EAAD,CAAKC,GAAG,OAAR,UACI,cAACC,EAAA,EAAD,CAAQ1E,QAASV,KAAKwC,OAAQjD,UAAU,iBAAxC,oBACA,uBAAOgG,KAAK,OAAOhG,UAAU,SACzBc,UAAU,EACVC,OAAO,yBACPP,SAAU,SAAAsD,GAAG,OAAI,EAAKD,SAASC,IAC/BiC,IAAK,SAAAhH,GAAC,OAAE,EAAKmE,aAAenE,mB,GArJrCqC,IAAMC,W,QCCR4E,E,4MACnBC,YAAc,SAACnH,GACXA,EAAEoH,kBACF,EAAKtH,MAAMuH,QAAQ,EAAKvH,MAAM0E,I,uDAGxB,IAAD,EACmC9C,KAAK5B,MAAvCwH,EADD,EACCA,KAAMC,EADP,EACOA,KAAMC,EADb,EACaA,OAAQC,EADrB,EACqBA,UAC5B,OACE,qBACExG,UAAU,kBACVkG,YAAazF,KAAKyF,YAClBO,MAAK,2BACAF,GADA,IAEHG,OAAoB,EAAZF,EACRG,MAAmB,EAAZH,EACPI,UAAU,aAAD,QAAgBJ,EAAhB,cAA+BA,EAA/B,KACTK,IAAKP,GAAQ,EACbQ,KAAMT,GAAQ,U,GAlBSjF,IAAMC,WAyBvC4E,EAAIc,aA7BiB,CACnBP,UAAW,G,YCGEQ,G,MAJE,SAACnI,GAAD,OACbA,EAAMoI,KAAO,qBAAKjH,UAAU,iBAAiBmB,QAAStC,EAAMqI,UAAkB,O,QCuInEC,E,kDAlIX,WAAYtI,GAAQ,IAAD,8BACf,cAAMA,IAUVuI,YAAc,WACV,EAAKpI,SAAS,CACVe,GAAI,GACJiC,KAAM,GACNC,UAAW,GACXC,OAAQ,MAhBG,EAoBnBmF,WAAa,SAACtI,GACG,UAAVA,EAAEuI,KACD,EAAKzI,MAAM0I,WAAW,EAAKlI,QAtBhB,EA0BnBmI,kBAAoB,SAACzI,GACjB,IAAMG,EAASH,EAAEG,OACXC,EAAQD,EAAOC,MACf6C,EAAO9C,EAAO8C,KAEpB,EAAKhD,SAAL,eACGgD,EAAO7C,KA7BV,EAAKE,MAAQ,CACTU,GAAI,EAAKlB,MAAM4I,WAAW1H,GAC1BiC,KAAM,EAAKnD,MAAM4I,WAAWzF,KAC5BC,UAAW,EAAKpD,MAAM4I,WAAWxF,UACjCC,OAAQ,EAAKrD,MAAM4I,WAAWvF,QAPnB,E,qDAoCT,IAAD,OACEwF,EAAejH,KAAK5B,MAApB6I,YACDC,EAAKC,OAAOC,WACdf,EAAOrG,KAAK5B,MAAMiJ,KAAOH,EAAG,EAAI,EAAII,KAAKC,MAAS,KAAHL,GACnD,OACI,qBAAK5H,GAAG,mBAAR,SAEQ,sBAAKC,UAAU,iBAAf,UACA,cAAC,EAAD,CAAUiH,MAAM,EAAMC,QAASQ,IAC/B,eAACO,EAAA,EAAD,CAAMjI,UAAU,aAChByG,MAAO,CACHI,IAAK,GACLC,KAAMA,GAHV,UAII,eAACmB,EAAA,EAAKC,KAAN,WACI,cAACD,EAAA,EAAKE,MAAN,8BACA,eAACjI,EAAA,EAAD,WACI,eAACA,EAAA,EAAKE,MAAN,CAAYG,GAAImF,IAAhB,UACI,cAACxF,EAAA,EAAKC,MAAN,CAAYiI,QAAM,EAAlB,eACA,cAACzC,EAAA,EAAD,CAAK0C,GAAI,EAAT,SACI,cAACnI,EAAA,EAAKI,QAAN,CAAc0F,KAAK,SAASsC,aAAc7H,KAAK5B,MAAM4I,WAAWrF,EAChE5B,SAAU,SAACzB,GAAO,EAAKF,MAAM0J,iBAAiB,CAACnG,EAAGrD,EAAEG,OAAOC,aAE/D,cAACe,EAAA,EAAKC,MAAN,CAAYiI,QAAM,EAAlB,eACA,cAACzC,EAAA,EAAD,CAAK0C,GAAI,EAAT,SACI,cAACnI,EAAA,EAAKI,QAAN,CAAc0F,KAAK,SAASsC,aAAc7H,KAAK5B,MAAM4I,WAAWpF,EAChE7B,SAAU,SAACzB,GAAO,EAAKF,MAAM0J,iBAAiB,CAAClG,EAAGtD,EAAEG,OAAOC,gBAInE,eAACe,EAAA,EAAKE,MAAN,CAAYG,GAAImF,IAAhB,UACI,cAACxF,EAAA,EAAKC,MAAN,CAAYiI,QAAM,EAAlB,gBAGA,cAACzC,EAAA,EAAD,CAAK0C,GAAI,EAAT,SACE,cAACnI,EAAA,EAAKI,QAAN,CAAc0F,KAAK,OACnBwC,YAAY,cACZxG,KAAK,KACLsG,aAAc7H,KAAKpB,MAAMU,GACzBS,SAAUC,KAAK+G,yBAIrB,eAACtH,EAAA,EAAKE,MAAN,CAAYG,GAAImF,IAAhB,UACI,cAACxF,EAAA,EAAKC,MAAN,CAAYiI,QAAM,EAAlB,kBAGA,cAACzC,EAAA,EAAD,CAAK0C,GAAI,EAAT,SACE,cAACnI,EAAA,EAAKI,QAAN,CAAc0F,KAAK,OACnBwC,YAAY,gBACZxG,KAAK,OACLsG,aAAc7H,KAAKpB,MAAM2C,KACzBxB,SAAUC,KAAK+G,yBAIrB,eAACtH,EAAA,EAAKE,MAAN,CAAYG,GAAImF,IAAhB,UACI,cAACxF,EAAA,EAAKC,MAAN,CAAYiI,QAAM,EAAlB,uBAGA,cAACzC,EAAA,EAAD,CAAK0C,GAAI,EAAT,SACE,cAACnI,EAAA,EAAKI,QAAN,CAAc0F,KAAK,OACnBwC,YAAY,qBACZxG,KAAK,YACLsG,aAAc7H,KAAKpB,MAAM4C,UACzBzB,SAAUC,KAAK+G,yBAIrB,eAACtH,EAAA,EAAKE,MAAN,CAAYG,GAAImF,IAAhB,UACI,cAACxF,EAAA,EAAKC,MAAN,CAAYiI,QAAM,EAAlB,oBAGA,cAACzC,EAAA,EAAD,CAAK0C,GAAI,EAAT,SACE,cAACnI,EAAA,EAAKI,QAAN,CAAc0F,KAAK,OACnBwC,YAAY,kBACZxG,KAAK,SACLsG,aAAc7H,KAAKpB,MAAM6C,OACzB1B,SAAUC,KAAK+G,kBACfH,WAAY5G,KAAK4G,wBAK/B,eAACY,EAAA,EAAKQ,OAAN,WACA,cAAC5C,EAAA,EAAD,CAAQ6C,QAAQ,YAAYvH,QAASuG,EAArC,oBACI,cAAC7B,EAAA,EAAD,CAAQ6C,QAAQ,YAAYvH,QAASuG,EAArC,mBACA,cAAC7B,EAAA,EAAD,CAAQ6C,QAAQ,UAAUvH,QAAS,kBAAM,EAAKtC,MAAM0I,WAAW,EAAKlI,QAApE,iC,GA5HH+B,IAAMC,WCiBVsH,E,kDACjB,WAAY9J,GAAQ,IAAD,8BACf,cAAMA,IAQV+J,eAAiB,YAAoB,IAAVC,EAAS,EAAjB3J,OACf,EAAKF,SAAS,CACV8J,WAAY,CACRC,YAAaF,EAAIG,YACjBC,aAAcJ,EAAIK,aAClBC,UAAWN,EAAIO,aACfC,WAAYR,EAAIS,kBAfT,EAoBnBC,UAAY,SAACxK,GACT,IAAMyK,EAASzK,EAAEG,OAAOuK,wBADT,EAEgB,EAAKpK,MAA/ByJ,EAFU,EAEVA,WAAYrB,EAFF,EAEEA,WACbrF,EAAI2F,KAAKC,MAAM,EAAK0B,oBAAoB3K,EAAE4K,QAAUH,EAAO1C,KAAMgC,EAAWC,YAAaD,EAAWK,YACpG9G,EAAI0F,KAAKC,MAAM,EAAK0B,oBAAoB3K,EAAE6K,QAAUJ,EAAO3C,IAAKiC,EAAWG,aAAcH,EAAWO,aACxG,GAAsC,IAAnCQ,OAAOC,KAAKrC,GAAYlC,OAAc,CACrC,IAAIwE,EAAM,CACN3H,EAAGA,EACHC,EAAGA,GAGP,EAAKrD,SAAS,CACVgL,UAAU,EACVC,WAAW,EACXxC,WAAYsC,MAlCL,EAwCnBxB,iBAAmB,SAACwB,GAChB,IAAItC,EAAa,EAAKpI,MAAMoI,WAC5B,EAAKzI,SAAS,CACVyI,WAAW,2BAAKA,GAAcsC,MA3CnB,EA8CnB3D,QAAU,SAAC8D,GACP,IAAIH,EAAM,EAAKlL,MAAMsL,KAAKD,GAC1B,EAAKlL,SAAS,CACVgL,UAAU,EACVvC,WAAYsC,EACZE,WAAW,IAEf,EAAKpL,MAAMuL,UAAUF,IArDN,EAwDnBG,UAAY,WACR,EAAKxL,MAAMwL,aAzDI,EA6DnBX,oBAAsB,SAACY,EAAOC,EAAgBC,GAC1C,OAAQF,EAAMC,EAAgBC,GA9Df,EAiEnBC,oBAAsB,SAACH,EAAOC,EAAgBC,GAC1C,OAAQF,EAAME,EAAYD,GAlEX,EAqEnBG,gBAAkB,WACd,EAAK1L,SAAS,CAACiL,WAAW,KAtEX,EAyEnBU,iBAAmB,WACf,EAAK3L,SAAS,CAACgL,UAAU,EAAOC,WAAW,EAAOxC,WAAY,MA1E/C,EA6EnBF,WAAa,SAAC1F,GACVgD,QAAQC,IAAIxC,KAAKC,UAAUV,IAC3B,IAAI4F,EAAa,EAAKpI,MAAMoI,WAC5B,EAAKzI,SAAS,CACVyI,WAAW,2BAAKA,GAAc5F,KAAS,WACnCpB,KAAK5B,MAAM+L,QAAQnK,KAAKpB,MAAMoI,YAC9BhH,KAAKkK,uBAjFb,EAAKtL,MAAQ,CACT2K,UAAU,EACVlB,WAAY,GACZrB,WAAY,IALD,E,qDAuFT,IAAD,SAC0BhH,KAAKpB,MAA7B2K,EADF,EACEA,SAAUvC,EADZ,EACYA,WACXoD,EAAMpK,KAAKpB,MAAMyJ,WAFlB,EAGyCrI,KAAK5B,MAA5CsL,EAHF,EAGEA,KAAMW,EAHR,EAGQA,mBAAoBtE,EAH5B,EAG4BA,UAC3BuE,EAAYf,EAAW,4BAA8B,GAE3D,OACA,sBAAKjK,GAAG,kBAAR,UAEI,sBAAKC,UAAS,mCAA8B+K,EAA9B,cACdxB,UAAW9I,KAAK8I,UAChB5C,MAAOkE,EAAI1B,UACXzC,OAAQmE,EAAIxB,WAHZ,UAKI,qBACAtJ,GAAG,eACHiB,IAAK8J,EAAoB7J,IAAI,YAC7B0F,MAAOkE,EAAI1B,UAAW6B,OAAQvK,KAAKmI,iBAElCuB,EAAKzJ,KAAI,SAACqJ,EAAKxG,GAAN,OACN,cAAC,EAAD,CACA8C,KAAM0B,KAAKC,MAAM,EAAKyC,oBAAoBV,EAAI3H,EAAGyI,EAAI9B,YAAa8B,EAAI1B,YACtE7C,KAAMyB,KAAKC,MAAM,EAAKyC,oBAAoBV,EAAI1H,EAAGwI,EAAI5B,aAAc4B,EAAIxB,aACvE9F,EAAGA,EACHgD,OAAQ,CACJ0E,UAAW,yBACXC,gBAAiB,UAErB9E,QAAS,EAAKA,QACdI,UAAWA,GACNjD,MAG2B,IAAnCsG,OAAOC,KAAKrC,GAAYlC,OAAe,KAAM,cAAC,EAAD,CAC1Cc,KAAM0B,KAAKC,MAAMvH,KAAKgK,oBAAoBhD,EAAWrF,EAAGyI,EAAI9B,YAAa8B,EAAI1B,YAC7E7C,KAAMyB,KAAKC,MAAMvH,KAAKgK,oBAAoBhD,EAAWpF,EAAGwI,EAAI5B,aAAc4B,EAAIxB,aAC9E9F,EAAG,EACHgD,OAAQ,CACJ0E,UAAW,wBACXC,gBAAiB,SAErB9E,QAAS,kBAAMvB,QAAQC,IAAI,yBAC3B0B,UAAWA,IACL,MApClB,qBAuCuB/F,KAAK5B,MAAMsL,KAAK5E,OAE/B9E,KAAKpB,MAAM4K,UAAY,cAAC,EAAD,CACvBnB,WAAY+B,EACZ/C,KAAMrH,KAAKgK,oBAAoBhD,EAAWrF,EAAGyI,EAAI9B,YAAa8B,EAAI1B,WAClEzB,YAAajH,KAAKkK,iBAClBpD,WAAY9G,KAAK8G,WACjBgB,iBAAkB9H,KAAK8H,iBACvBd,WAAYhH,KAAKpB,MAAMoI,aAClB,KAGRhH,KAAK5B,MAAMwL,WACZ,wBAAQlJ,QAASV,KAAK4J,UAAtB,0B,GAnJ0CjJ,IAAMC,WA0J5DsH,EAAyB5B,aA/JJ,CACnBoE,kBAAkB,EAClBC,eAAgB,S,YChBH,SAASC,EAAT,GACS,IAApBlB,EAAmB,EAAnBA,KAAMC,EAAa,EAAbA,UACR,OACE,eAACkB,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,KAAlB,UACI,gCACI,+BACA,mCACA,oCACA,sCACA,2CACA,wCACA,mCACA,mCACA,6CAGJ,gCACCrB,EAAKzJ,KAAI,SAACqJ,EAAKxG,GACZ,OAAQ,+BACA,+BAAKA,EAAL,OACA,6BAAKwG,EAAIhK,KACT,6BAAKgK,EAAI/H,OACT,6BAAK+H,EAAI9H,YACT,6BAAK8H,EAAI7H,SACT,6BAAK6H,EAAI3H,IACT,6BAAK2H,EAAI1H,IACT,6BAAI,cAACwD,EAAA,EAAD,CAAQ6C,QAAQ,SAASvH,QAAS,kBAAMiJ,EAAU7G,IAAlD,sBARKA,W,ICoFdkI,E,kDAjGX,WAAY5M,GAAQ,IAAD,8BACf,cAAMA,IAkBV6M,OAAS,SAAC3B,GACN,IAAII,EAAO,EAAK9K,MAAM8K,KACtB,EAAKnL,SAAS,CACVmL,KAAK,GAAD,mBAAMA,GAAN,CAAYJ,OAtBL,EA0BnBa,QAAU,SAACb,GAAS,IACXI,EAAQ,EAAK9K,MAAb8K,KACL,EAAKC,UAAUD,EAAK5E,OAAO,GAC3B,EAAKmG,OAAO3B,IA7BG,EAgCnBK,UAAY,SAACF,GACT,EAAKlL,SAAS,CACVmL,KAAM,EAAK9K,MAAM8K,KAAKwB,QAAO,SAAC5M,EAAGwE,GAAO,OAAOA,IAAM2G,QAlC1C,EAsCnBG,UAAY,WACR,EAAKrL,SAAS,CACVmL,KAAM,EAAKyB,eAxCA,EA4CnBC,aAAe,WACX,EAAK7M,SAAS,CAAE8M,YAA+B,IAAlBlE,OAAOC,cA7CrB,EAwDnBtD,cAAgB,SAAC1C,GACb,IAAIsI,EAAOtI,EAAKnB,KAAI,SAAAqB,GAAK,MACpB,CAAGhC,GAAIgC,EAAMhC,GACViC,KAAMD,EAAMC,KACZC,UAAWF,EAAME,UACjBC,OAAQH,EAAMG,OACdE,EAAGL,EAAMI,oBAAsBJ,EAAMI,oBAAoBC,EAAI,EAC7DC,EAAGN,EAAMI,oBAAsBJ,EAAMI,oBAAoBE,EAAI,MAGrE,EAAKuJ,YAAczB,EACnB,EAAKnL,SAAS,CAACmL,KAAMA,KAjErB,EAAKyB,YAAc,GACnB,EAAKvM,MAAQ,CACTuB,MAAO,EAAK/B,MAAM8B,OAAOC,MACzBI,IAAK,EAAKnC,MAAM8B,OAAOK,IACvBmJ,KAAM,EAAKyB,YACXE,YAA+B,IAAlBlE,OAAOC,YAPT,E,gEAWCyC,EAAOC,EAAgBC,GACvC,OAAQF,EAAMC,EAAgBC,I,0CAGdF,EAAOC,EAAgBC,GACvC,OAAQF,EAAME,EAAYD,I,0CAiC1B3C,OAAOmE,iBAAiB,SAAUtL,KAAKoL,gB,6CAIvCjE,OAAOoE,oBAAoB,SAAUvL,KAAKoL,gB,+BAiBpC,IAAD,EACgBpL,KAAKpB,MAAlB8K,EADH,EACGA,KAAMnJ,EADT,EACSA,IAEd,OACI,sBAAKjB,GAAG,UAAR,UACI,cAAC,EAAD,CACA+K,mBAAoB9J,EACpBiL,UAAWxL,KAAKmI,eAChBsD,QAAS,GACT/B,KAAMA,EACNC,UAAW3J,KAAK2J,UAChBQ,QAASnK,KAAKmK,QACdc,OAAQjL,KAAKiL,OACblF,UAAW,IAEX,sBAAKxG,UAAU,iBAAf,UACI,cAAC,EAAD,CACImF,OAAQ1E,KAAKpB,MAAM2B,IACnBc,OAAQrB,KAAKpB,MAAM8K,KACnB5F,cAAe9D,KAAK8D,gBACxB,cAAC8G,EAAD,CAAUlB,KAAM1J,KAAKpB,MAAM8K,KAAMC,UAAW3J,KAAK2J,YACjD,cAACvE,EAAA,EAAD,CAAQ6C,QAAQ,UAAUvH,QAASV,KAAK4J,UAAxC,6B,GA7FYjJ,IAAMC,WCKvB8K,EAZA,CACX,CAAEpM,GAAI,EAAGiB,IAAK,mBAAoBJ,MAAO,UACzC,CAAEb,GAAI,EAAGiB,IAAK,uBAAwBJ,MAAO,qBAC7C,CAAEb,GAAI,EAAGiB,IAAK,qBAAsBJ,MAAO,SAC3C,CAAEb,GAAI,EAAGiB,IAAK,yBAA0BJ,MAAO,gBAC/C,CAAEb,GAAI,EAAGiB,IAAK,6BAA8BJ,MAAO,iBACnD,CAAEb,GAAI,EAAGiB,IAAK,wBAAyBJ,MAAO,YAC9C,CAAEb,GAAI,EAAGiB,IAAK,gCAAiCJ,MAAO,cACtD,CAAEb,GAAI,EAAGiB,IAAK,gCAAiCJ,MAAO,oBACtD,CAAEb,GAAI,EAAGiB,IAAK,iCAAkCJ,MAAO,mBCA5CwL,MAPf,SAAcvN,GACV,OAAQ,qBAAKkB,GAAG,OAAR,SACI,yCCmBDsM,MArBf,SAAexN,GACX,OAAQ,qBAAKkB,GAAG,QAAR,SACI,sBAAKC,UAAU,eAAf,UACI,uCAGA,+gB,uBCoFLsM,E,kDA3EX,WAAYzN,GAAQ,IAAD,8BACf,cAAMA,IAOV0N,UAAY,SAACC,EAAQjN,GACjB,EAAKP,SAAS,CACVyN,aAAcN,EAAOK,GACrBjN,aAAcA,KAXH,EAenBmN,UAAY,SAACC,EAAMpN,GACf,EAAKP,SAAS,CACVyN,aAAc,CAAEzL,IAAK2L,EAAM/L,MAAO,SAClCrB,aAAcA,KAhBlB,EAAKF,MAAQ,CACToN,aAAc,KACdlN,cAAc,GAJH,E,qDAsBT,IAAD,OACL,OACI,qBAAKS,UAAU,MAAf,SACI,eAAC,IAAD,WACI,eAAC4M,EAAA,EAAD,CAAQ5M,UAAU,SAAS6M,GAAG,QAAQnE,QAAQ,QAA9C,UACI,cAACkE,EAAA,EAAOE,MAAR,CAAchH,KAAK,IAAnB,SACI,qBAAK9F,UAAU,SAAf,SACI,yDAGR,eAAC+M,EAAA,EAAD,CAAK/M,UAAU,UAAf,UACI,cAAC+M,EAAA,EAAIC,KAAL,CAAUlH,KAAK,QAAf,kBACA,cAACiH,EAAA,EAAIC,KAAL,CAAUlH,KAAK,SAAf,yBAGR,eAAC,IAAD,WACI,cAAC,IAAD,CAAOmH,OAAK,EAACC,KAAK,IAAlB,SACI,cAAC,EAAD,CACApN,QAASqM,EACT3M,SAAUiB,KAAK8L,UACf9M,SAAUgB,KAAKiM,cAEnB,cAAC,IAAD,CAAOQ,KAAK,QAAZ,SACI,cAAC,EAAD,MAEJ,cAAC,IAAD,CAAOA,KAAK,SAAZ,SACI,cAAC,EAAD,MAEJ,cAAC,IAAD,CAAOA,KAAK,WAAZ,SAEW,EAAK7N,MAAMoN,aAGN,cAAC,EAAD,CAAmB9L,OAAQ,EAAKtB,MAAMoN,eAFtC,cAAC,IAAD,CAAUvL,GAAI,CAAEiM,SAAU,IAAK9N,MAAO,CAAE+N,KAAM,EAAKvO,MAAMwO,2B,GAtD/EjM,IAAMC,WCJTiM,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCAdQ,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.c809f15e.chunk.js","sourcesContent":["import './styles/mapForm.css';\nimport React from 'react';\nimport {Container, Form} from 'react-bootstrap';\nimport {Link} from \"react-router-dom\";\n\nclass MapForm extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            val: this.props.resorts[0].id,\n            uploadedMap: null,\n        }\n    }\n\n    handleDropdownChange = (e) => {\n        this.setState({val: e.target.value});\n    }\n\n    handleStart = () => {\n        let { uploadedMap, val, useGeoCoords } = this.state;\n        if(uploadedMap == null) {\n            this.props.onSelect(val, useGeoCoords);\n        } else {\n            this.props.onUpload(uploadedMap, useGeoCoords);\n        }\n    }\n\n    handleFileChange = (e) => {\n        if(e.target.files[0] == null) return\n        this.setState({\n            uploadedMap: URL.createObjectURL(e.target.files[0])\n        })\n    }\n\n    render() {\n        return (\n            <div id=\"mapform\" >\n                <div className=\"vertical-center\">\n                    <Container className=\"selectcontainer\">\n                        <Form>\n                            <Form.Label className=\"form-title\">Welcome!</Form.Label>\n                            <Form.Group controlId=\"exampleForm.ControlSelect1\">\n                                <Form.Label>Select or upload ski map</Form.Label>\n                                <Form.Control as=\"select\"\n                                onChange={this.handleDropdownChange}>\n                                {this.props.resorts.map((resort => (\n                                    <option key={resort.title} value={resort.id}>{resort.title}</option>\n                                )))}\n                                </Form.Control>\n                                <br/>\n                                <Form.File onChange={this.handleFileChange}\n                                multiple={false}\n                                accept=\"image/png, image/jpeg\"/>\n                                <br/>\n                                {this.state.uploadedMap ?\n                                    <div className=\"image-wrapper\">\n                                        <img src={this.state.uploadedMap} alt=\"preview\"/>\n                                        <br/><br/>\n                                    </div> : null }\n                                </Form.Group>\n                                <Link to=\"/matcher\" onClick={this.handleStart} className=\"btn btn-primary\">Start!</Link>\n                        </Form>\n                    </Container>\n                </div>\n            </div>\n        );\n    }\n\n}\nexport default MapForm;\n","import '../styles/fileForm.css';\nimport React from 'react';\nimport {Row, Col, Form, Button} from 'react-bootstrap';\nimport Container from 'react-bootstrap/Container';\n\nclass FileForm extends React.Component {\n\n    constructor(props) {\n        super(props);\n        const defaultFileType = \"json\";\n        let imgSrc = this.props.imgSrc;\n        let filename = imgSrc.substr(imgSrc.lastIndexOf('/')+1, imgSrc.length);\n        filename = filename.substr(0, filename.lastIndexOf('.'));\n\n        this.fileNames = {\n            json: String(filename) + \".json\",\n            csv: String(filename) + \".csv\",\n        }\n\n        this.state = {\n            fileType: defaultFileType,\n            fileDownloadUrl: null,\n            resort: filename,\n        }\n    }\n\n    changeFileType = (event) => {\n        const value = event.target.value;\n        this.setState({fileType: value});\n    }\n\n    download = (event) => {\n        event.preventDefault();\n        let output;\n        let data = this.props.points;\n        if (this.state.fileType === \"json\") {\n            let points = data.map(point => ({\n                id: point.id,\n                name: point.name,\n                shortName: point.shortName,\n                areaId: point.areaId,\n                pisteMapCoordinates: {x: point.x, y: point.y}\n            }));\n            output = JSON.stringify({points: points}, null, 4);\n        } else if (this.state.fileType === \"csv\") {\n            let contents = [];\n            contents.push ([\"id\", \"name\", \"shortName\", \"areaId\", \"x\", \"y\"]);\n            data.map(point => contents.push([point.id, point.name, point.shortName, point.areaId, point.x, point.y]));\n            output = this.makeCSV(contents);\n        }\n        const blob = new Blob([output]);\n        const fileDownloadUrl = URL.createObjectURL(blob);\n        this.setState ({fileDownloadUrl: fileDownloadUrl},\n          () => {\n            this.dofileDownload.click();\n            URL.revokeObjectURL(fileDownloadUrl);\n            this.setState({fileDownloadUrl: \"\"})\n        })\n    }\n\n    upload = (event) => {\n        event.preventDefault();\n        this.dofileUpload.click();\n    }\n\n    makeCSV = (content) => {\n        let csv = '';\n        content.forEach(value => {\n            value.forEach((item, i) => {\n                let innerValue = item === undefined ? '' : item.toString();\n                let result = innerValue.replace(/\"/g, '\"\"');\n                if (result.search(/(\"|,|\\n)/g) >= 0) {\n                    result = '\"' + result + '\"'\n                }\n                if (i > 0) {csv += ','}\n                    csv += result;\n            })\n            csv += '\\n';\n        });\n        return csv;\n    }\n\n    openFile = (evt) => {\n        const fileObj = evt.target.files[0];\n        const reader = new FileReader();\n\n        if(!(fileObj instanceof Blob)) return\n\n        let fileloaded = e => {\n            const fileContents = e.target.result;\n            try {\n                let json = JSON.parse(fileContents);\n                if(json.hasOwnProperty('lifts')) {\n                    this.props.loadPointData(json['lifts']);\n                } else if(json.hasOwnProperty('slopes')) {\n                    this.props.loadPointData(json['slopes']);\n                } else if(json.hasOwnProperty('restaurants')) {\n                    this.props.loadPointData(json['restaurants']);\n                } else {\n                    alert('Unable to load JSON data, missing key value lifts, slopes or restaurants'); \n                }\n            } catch(e) {\n                alert(e);\n            }\n        }\n        fileloaded = fileloaded.bind(this);\n        reader.onload = fileloaded;\n        reader.readAsText(fileObj);\n    }\n\n    downloadTestReport = (event) => {\n        console.log(\"generating test report\");\n        event.preventDefault();\n        let results = this.props.generateTestReport();\n        let output = JSON.stringify({testReport: results}, null, 4);\n\n        const blob = new Blob([output]);\n        const fileDownloadUrl = URL.createObjectURL(blob);\n        this.setState ({fileDownloadUrl: URL.createObjectURL(blob)},\n          () => {\n            this.doTestReportDownload.click();\n            URL.revokeObjectURL(fileDownloadUrl);\n            this.setState({fileDownloadUrl: \"\"})\n        });\n    }\n\n    render() {\n        return (\n            <div id=\"fileForm\">\n                <Container>\n                    <Row className=\"justify-content-md-center\">\n                        <Col md=\"auto\">\n                            <Form.Control as=\"select\" name=\"fileType\" className=\"fileForm-child\"\n                                onChange={this.changeFileType}\n                                value={this.state.fileType}>\n                                <option value=\"csv\">CSV</option>\n                                <option value=\"json\">JSON</option>\n                            </Form.Control>\n                        </Col>\n                        <Col md=\"auto\">\n                            <Button onClick={this.download} className=\"fileForm-child\">\n                                Download\n                            </Button>\n                            <a className=\"hidden\"\n                                download={this.fileNames[this.state.fileType]}\n                                href={this.state.fileDownloadUrl}\n                                ref={e=>this.dofileDownload = e}>download it</a>\n                        </Col>\n                        <Col md=\"auto\">\n                            <Button onClick={this.upload} className=\"fileForm-child\">Upload</Button>\n                            <input type=\"file\" className=\"hidden\"\n                                multiple={false}\n                                accept=\".json,application/json\"\n                                onChange={evt => this.openFile(evt)}\n                                ref={e=>this.dofileUpload = e}/>\n                        </Col>\n                    </Row>\n                </Container>\n\n            </div>);\n    }\n}\n\nexport default FileForm;\n","import React from 'react';\n\nconst defaultProps = {\n  dotRadius: 1,\n};\n\nexport default class Dot extends React.Component {\n  onMouseDown = (e) => {\n      e.stopPropagation();\n      this.props.moveDot(this.props.i);\n  }\n\n  render() {\n    const { dotX, dotY, styles, dotRadius } = this.props;\n    return (\n      <div\n        className=\"react-image-dot\"\n        onMouseDown={this.onMouseDown}\n        style={{\n          ...styles,\n          height: dotRadius * 2,\n          width: dotRadius * 2,\n          transform: `translate(${-dotRadius}, ${-dotRadius})`,\n          top: dotY || 0,\n          left: dotX || 0\n        }}\n      />\n    );\n  }\n}\n\nDot.defaultProps = defaultProps;\n","\n\nconst Backdrop = (props) => (\n    props.show ? <div className=\"modal-backdrop\" onClick={props.clicked}></div> : null\n)\n\nexport default Backdrop;","import '../styles/modal.css';\nimport React from 'react';\nimport Backdrop from '../image-dots/backdrop.js';\nimport {Button, Form, Row, Col} from 'react-bootstrap';\nimport Card from 'react-bootstrap/Card';\n\nclass InputModal extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            id: this.props.currentDot.id,\n            name: this.props.currentDot.name,\n            shortName: this.props.currentDot.shortName,\n            areaId: this.props.currentDot.areaId\n        }\n    }\n\n    clearFields = () => {\n        this.setState({\n            id: '',\n            name: '',\n            shortName: '',\n            areaId: ''\n        });\n    }\n\n    onKeyPress = (e) => {\n        if(e.key === 'Enter') {\n            this.props.handleSave(this.state);\n        }\n    }\n\n    handleInputChange = (e) => {\n        const target = e.target;\n        const value = target.value;\n        const name = target.name;\n\n        this.setState({\n          [name]: value\n        });\n    }\n\n    render() {\n        const {handleClose} = this.props;\n        const wW = window.innerWidth;\n        var left = this.props.posX > wW/2 ? 0 : Math.round(wW*0.525);\n        return (\n            <div id=\"geoCoordSelector\">\n\n                    <div className=\"coord-selector\">\n                    <Backdrop show={true} clicked={handleClose} />\n                    <Card className=\"modal-body\"\n                    style={{\n                        top: 10,\n                        left: left}}>\n                        <Card.Body>\n                            <Card.Title>Edit point data</Card.Title>\n                            <Form>\n                                <Form.Group as={Row}>\n                                    <Form.Label column>x</Form.Label>\n                                    <Col sm={4}>\n                                        <Form.Control type=\"number\" defaultValue={this.props.currentDot.x}\n                                        onChange={(e) => {this.props.updateCurrentDot({x: e.target.value})}}/>\n                                    </Col>\n                                    <Form.Label column>y</Form.Label>\n                                    <Col sm={4}>\n                                        <Form.Control type=\"number\" defaultValue={this.props.currentDot.y}\n                                        onChange={(e) => {this.props.updateCurrentDot({y: e.target.value})}}/>\n                                    </Col>\n                                </Form.Group>\n\n                                <Form.Group as={Row}>\n                                    <Form.Label column >\n                                      id\n                                    </Form.Label>\n                                    <Col sm={8}>\n                                      <Form.Control type=\"text\"\n                                      placeholder=\"Enter id...\"\n                                      name=\"id\"\n                                      defaultValue={this.state.id}\n                                      onChange={this.handleInputChange}/>\n                                    </Col>\n                                </Form.Group>\n\n                                <Form.Group as={Row}>\n                                    <Form.Label column >\n                                      name\n                                    </Form.Label>\n                                    <Col sm={8}>\n                                      <Form.Control type=\"text\"\n                                      placeholder=\"Enter name...\"\n                                      name=\"name\"\n                                      defaultValue={this.state.name}\n                                      onChange={this.handleInputChange}/>\n                                    </Col>\n                                </Form.Group>\n\n                                <Form.Group as={Row}>\n                                    <Form.Label column>\n                                      shortName\n                                    </Form.Label>\n                                    <Col sm={8}>\n                                      <Form.Control type=\"text\"\n                                      placeholder=\"Enter shortName...\"\n                                      name=\"shortName\"\n                                      defaultValue={this.state.shortName}\n                                      onChange={this.handleInputChange}/>\n                                    </Col>\n                                </Form.Group>\n\n                                <Form.Group as={Row}>\n                                    <Form.Label column >\n                                      areaId\n                                    </Form.Label>\n                                    <Col sm={8}>\n                                      <Form.Control type=\"text\"\n                                      placeholder=\"Enter areaId...\"\n                                      name=\"areaId\"\n                                      defaultValue={this.state.areaId}\n                                      onChange={this.handleInputChange}\n                                      onKeyPress={this.onKeyPress} />\n                                    </Col>\n                                </Form.Group>\n                            </Form>\n                        </Card.Body>\n                        <Card.Footer>\n                        <Button variant=\"secondary\" onClick={handleClose}>Delete</Button>\n                            <Button variant=\"secondary\" onClick={handleClose}>Close</Button>\n                            <Button variant=\"primary\" onClick={() => this.props.handleSave(this.state)}>Save</Button>\n                        </Card.Footer>\n                    </Card>\n                    </div>\n            </div>);\n    }\n}\n\nexport default InputModal;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Dot from '../image-dots/Dot';\nimport InputModal from './InputModal.js';\n\nconst propTypes = {\n  deleteDot: PropTypes.func.isRequired,\n  addDot: PropTypes.func.isRequired,\n  resetDots: PropTypes.func,\n  dotStyles: PropTypes.object,\n  dotRadius: PropTypes.number,\n  backgroundImageUrl: PropTypes.string,\n  styles: PropTypes.object,\n  width: PropTypes.number,\n  height: PropTypes.number,\n  pixelCoordinates: PropTypes.bool,\n};\n\nconst defaultProps = {\n  pixelCoordinates: true,\n  backgroundSize: 'cover',\n};\n\nexport default class ImageCoordinateCollector extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            grabbing: false,\n            dimensions: {},\n            currentDot: {},\n        };\n    }\n\n    onLoadPisteMap = ({target: img}) => {\n        this.setState({\n            dimensions: {\n                renderWidth: img.offsetWidth,\n                renderHeight: img.offsetHeight,\n                realWidth: img.naturalWidth,\n                realHeight: img.naturalHeight,\n            }\n        });\n    }\n\n    onMouseUp = (e) => {\n        const bounds = e.target.getBoundingClientRect();\n        let {dimensions, currentDot} = this.state;\n        let x = Math.round(this.renderedToRealCoord(e.clientX - bounds.left, dimensions.renderWidth, dimensions.realWidth));\n        let y = Math.round(this.renderedToRealCoord(e.clientY - bounds.top, dimensions.renderHeight, dimensions.realHeight))\n        if(Object.keys(currentDot).length === 0) {\n            let dot = {\n                x: x,\n                y: y,\n            };\n\n            this.setState({\n                grabbing: false,\n                showModal: true,\n                currentDot: dot,\n            });\n        }\n\n    }\n\n    updateCurrentDot = (dot) => {\n        let currentDot = this.state.currentDot;\n        this.setState({\n            currentDot: {...currentDot,...dot},});\n    }\n\n    moveDot = (index) => {\n        let dot = this.props.dots[index];\n        this.setState({\n            grabbing: true,\n            currentDot: dot,\n            showModal: true,\n        });\n        this.props.deleteDot(index);\n    }\n\n    resetDots = () => {\n        this.props.resetDots();\n    }\n\n    // Translate from rendered coordinates to real piste map coordinates\n    renderedToRealCoord = (coord, renderedLength, realLength) => {\n        return (coord/renderedLength)*realLength;\n    }\n\n    realToRenderedCoord = (coord, renderedLength, realLength) => {\n        return (coord/realLength)*renderedLength;\n    }\n\n    handleShowModal = () => {\n        this.setState({showModal: true});\n    }\n\n    handleCloseModal = () => {\n        this.setState({grabbing: false, showModal: false, currentDot: {}});\n    }\n\n    handleSave = (data) => {\n        console.log(JSON.stringify(data));\n        let currentDot = this.state.currentDot;\n        this.setState({\n            currentDot: {...currentDot,...data},}, function() {\n                this.props.saveDot(this.state.currentDot);\n                this.handleCloseModal();\n            });\n    }\n\n    render() {\n        const {grabbing, currentDot} = this.state;\n        const dim = this.state.dimensions;\n        const {dots, backgroundImageUrl, dotRadius} = this.props;\n        const grabClass = grabbing ? 'react-image-dot__grabbing' : '';\n\n        return (\n        <div id=\"react-image-dot\">\n\n            <div className={`react-image-dot__wrapper ${grabClass} no-select`}\n            onMouseUp={this.onMouseUp}\n            width={dim.realWidth}\n            height={dim.realHeight}>\n\n                <img\n                id=\"pistemap-img\"\n                src={backgroundImageUrl} alt=\"Piste map\"\n                width={dim.realWidth} onLoad={this.onLoadPisteMap} />\n\n                {dots.map((dot, i) =>\n                    <Dot\n                    dotX={Math.round(this.realToRenderedCoord(dot.x, dim.renderWidth, dim.realWidth))}\n                    dotY={Math.round(this.realToRenderedCoord(dot.y, dim.renderHeight, dim.realHeight))}\n                    i={i}\n                    styles={{\n                        boxShadow: '0px 0px 0px 2px purple',\n                        backgroundColor: 'purple',\n                    }}\n                    moveDot={this.moveDot}\n                    dotRadius={dotRadius}\n                    key={i}\n                    />)}\n\n                {Object.keys(currentDot).length === 0 ? null: <Dot\n                    dotX={Math.round(this.realToRenderedCoord(currentDot.x, dim.renderWidth, dim.realWidth))}\n                    dotY={Math.round(this.realToRenderedCoord(currentDot.y, dim.renderHeight, dim.realHeight))}\n                    i={0}\n                    styles={{\n                        boxShadow: '0px 0px 0px 2px green',\n                        backgroundColor: 'green',\n                    }}\n                    moveDot={() => console.log('try to move temp dot')}\n                    dotRadius={dotRadius}\n                    key={-1}\n                    />}\n            </div>\n            number of points: {this.props.dots.length}\n            {\n                this.state.showModal ? <InputModal\n                dimensions={dim}\n                posX={this.realToRenderedCoord(currentDot.x, dim.renderWidth, dim.realWidth)}\n                handleClose={this.handleCloseModal}\n                handleSave={this.handleSave}\n                updateCurrentDot={this.updateCurrentDot}\n                currentDot={this.state.currentDot}\n                /> : null\n            }\n\n            {this.props.resetDots &&\n            <button onClick={this.resetDots}>Reset</button>}\n        </div>\n        );\n    }\n}\n\nImageCoordinateCollector.propTypes = propTypes;\nImageCoordinateCollector.defaultProps = defaultProps;\n","import React from 'react';\nimport {Button} from 'react-bootstrap';\nimport Table from 'react-bootstrap/Table';\n\nexport default function DotsInfo({\n    dots, deleteDot }) {\n  return (\n    <Table hover size=\"sm\">\n        <thead>\n            <tr>\n            <th>#</th>\n            <th>id</th>\n            <th>name</th>\n            <th>shortName</th>\n            <th>areaId</th>\n            <th>x</th>\n            <th>y</th>\n            <th>delete</th>\n            </tr>\n        </thead>\n        <tbody>\n        {dots.map((dot, i) => {\n            return (<tr key={i}>\n                    <td>{i} </td>\n                    <td>{dot.id}</td>\n                    <td>{dot.name}</td>\n                    <td>{dot.shortName}</td>\n                    <td>{dot.areaId}</td>\n                    <td>{dot.x}</td>\n                    <td>{dot.y}</td>\n                    <td><Button variant='danger' onClick={() => deleteDot(i)}>×</Button></td>\n            </tr>);})}\n        </tbody>\n      </Table>\n  );\n}\n","import '../styles/image-dots.css';\nimport React from 'react';\nimport {Button} from 'react-bootstrap';\nimport FileForm from './FileForm.js';\nimport ImageCoordinateCollector from './ImageCoordinateCollector.js';\nimport DotsInfo from './DotsInfo.js';\n\nclass MapCoordCollector extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.initialDots = [];\n        this.state = {\n            title: this.props.resort.title,\n            src: this.props.resort.src,\n            dots: this.initialDots,\n            windowWidth: window.innerWidth*0.98,\n        }\n    }\n    // Translate from rendered coordinates to real piste map coordinates\n    renderedToRealCoord(coord, renderedLength, realLength) {\n        return (coord/renderedLength)*realLength;\n    }\n\n    realToRenderedCoord(coord, renderedLength, realLength) {\n        return (coord/realLength)*renderedLength;\n    }\n\n    addDot = (dot) => {\n        let dots = this.state.dots;\n        this.setState({\n            dots: [...dots, dot],\n        });\n    }\n\n    saveDot = (dot) => {\n        let {dots} = this.state;\n        this.deleteDot(dots.length-1);\n        this.addDot(dot);\n    }\n\n    deleteDot = (index) => {\n        this.setState({\n            dots: this.state.dots.filter((e, i) => {return i !== index;}),\n        });\n    }\n\n    resetDots = () => {\n        this.setState({\n            dots: this.initialDots,\n        });\n    }\n\n    handleResize = () => {\n        this.setState({ windowWidth: window.innerWidth*0.98 });\n    }\n\n    componentDidMount() {\n        window.addEventListener(\"resize\", this.handleResize);\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener(\"resize\", this.handleResize);\n    }\n\n    loadPointData = (data) => {\n        let dots = data.map(point =>\n            ({  id: point.id,\n                name: point.name,\n                shortName: point.shortName,\n                areaId: point.areaId,\n                x: point.pisteMapCoordinates ? point.pisteMapCoordinates.x : 0,\n                y: point.pisteMapCoordinates ? point.pisteMapCoordinates.y : 0\n            })\n        );\n        this.initialDots = dots;\n        this.setState({dots: dots});\n    }\n\n    render() {\n        const { dots, src} = this.state;\n\n        return (\n            <div id=\"matcher\">\n                <ImageCoordinateCollector\n                backgroundImageUrl={src}\n                onLoadMap={this.onLoadPisteMap}\n                parents={[]}\n                dots={dots}\n                deleteDot={this.deleteDot}\n                saveDot={this.saveDot}\n                addDot={this.addDot}\n                dotRadius={1}\n                />\n                <div className=\"bottom-toolbox\">\n                    <FileForm\n                        imgSrc={this.state.src}\n                        points={this.state.dots}\n                        loadPointData={this.loadPointData}/>\n                    <DotsInfo dots={this.state.dots} deleteDot={this.deleteDot}></DotsInfo>\n                    <Button variant='success' onClick={this.resetDots}>Reset</Button>\n                </div>\n            </div>);\n    }\n}\n\nexport default MapCoordCollector;\n","const images = [\n    { id: 0, src: './assets/are.png', title: 'Åre'},\n    { id: 1, src: './assets/bjornen.png', title: 'Åre Björnen'},\n    { id: 2, src: './assets/duved.png', title: 'Duved'},\n    { id: 3, src: './assets/bjornrike.png', title: 'Björnrike'},\n    { id: 4, src: './assets/vemdalsskalet.png', title: 'Vemdalsskalet'},\n    { id: 5, src: './assets/hemsedal.png', title: 'Hemsedal'},\n    { id: 6, src: './assets/salen-lindvallen.png', title: 'Lindvallen'},\n    { id: 7, src: './assets/salen-hogfjallet.png', title: 'Högfjället'},\n    { id: 8, src: './assets/salen-hundfjallet.png', title: 'Hundfjället'}\n];\n\nexport default images;\n","import React from 'react';\n\nfunction Docs(props) {\n    return (<div id=\"docs\" >\n                <h1>Docs</h1>\n            </div>\n    );\n}\n\nexport default Docs;","import React from 'react';\n\nfunction About(props) {\n    return (<div id=\"about\" >\n                <div className=\"page-content\">\n                    <h1>\n                        About\n                    </h1>\n                    <p>\n                        This georeferencing tool comes with two different collection modes.\n\n                        The standard mode matches geographic coordinates (lat, lng) with map coordinates (x, y).\n                        When enough points have been collected, it will make suggestions on where to place the geographic marker for each piste map coordinate.\n                        The exported file structure is in triangle format.\n\n                        The other mode collects only piste map coordinates (x, y).\n                        For each collected coordinate, you may also specify id, name, shortName, and area id.\n                    </p>\n                </div>\n            </div>\n    );\n}\n\nexport default About;\n","import './styles/App.css';\nimport React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport MapForm from './mapForm.js';\nimport MapCoordCollector from './image-dots/MapCoordCollector.js';\nimport images from './images';\nimport Docs from './docs.js';\nimport About from './about.js';\nimport {Navbar, Nav} from 'react-bootstrap';\nimport {\n    HashRouter as Router,\n    Switch,\n    Route,\n    Redirect,\n  } from \"react-router-dom\";\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            resortObject: null,\n            useGeoCoords: true,\n        };\n    }\n\n    setResort = (choice, useGeoCoords) => {\n        this.setState({\n            resortObject: images[choice],\n            useGeoCoords: useGeoCoords\n        });\n    }\n\n    uploadMap = (file, useGeoCoords) => {\n        this.setState({\n            resortObject: { src: file, title: 'MyMap'},\n            useGeoCoords: useGeoCoords,\n        });\n    }\n\n    render() {\n        return (\n            <div className=\"App\">\n                <Router>\n                    <Navbar className=\"navbar\" bg=\"light\" variant=\"light\">\n                        <Navbar.Brand href=\"/\">\n                            <div className=\"header\">\n                                <h1>Georeferencing Tool</h1>\n                            </div>\n                        </Navbar.Brand>\n                        <Nav className=\"mr-auto\">\n                            <Nav.Link href=\"/docs\">Docs</Nav.Link>\n                            <Nav.Link href=\"/about\">About</Nav.Link>\n                        </Nav>\n                    </Navbar>\n                    <Switch>\n                        <Route exact path=\"/\">\n                            <MapForm\n                            resorts={images}\n                            onSelect={this.setResort}\n                            onUpload={this.uploadMap}/>\n                        </Route>\n                        <Route path=\"/docs\">\n                            <Docs />\n                        </Route>\n                        <Route path=\"/about\">\n                            <About />\n                        </Route>\n                        <Route path=\"/matcher\">\n                        {(() => {\n                              if (!this.state.resortObject)\n                                 return <Redirect to={{ pathname: '/', state: { from: this.props.location } }} />\n                              else\n                                 return <MapCoordCollector resort={this.state.resortObject}/>\n                          })()}\n\n\n                            {/*this.state.resortObject ?\n\n                                <Matcher\n                                resort={this.state.resortObject}/> :\n                                <Redirect to={{ pathname: '/', state: { from: this.props.location } }} />*/}\n                        </Route>\n                    </Switch>\n                </Router>\n            </div>\n        );\n    }\n\n\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\n\nimport ReactDOM from 'react-dom';\nimport './styles/index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}